msgid ""
msgstr ""
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: POEditor.com\n"
"Project-Id-Version: Hyperledger Iroha Documentation\n"
"Language: ja\n"

#: ../iroha/docs/source/guides/configuration.rst:2
msgid "Configuration"
msgstr "設定"

#: ../iroha/docs/source/guides/configuration.rst:4
msgid "In this section we will understand how to configure Iroha. Let's take a look at ``example/config.sample``"
msgstr "このセクションでは、Irohaの設定方法を説明します。 まず「example/config.sample」を見てみましょう。"

#: ../iroha/docs/source/guides/configuration.rst:21
msgid "As you can see, configuration file is a valid ``json`` structure. Let's go line-by-line and understand what every parameter means."
msgstr "ご覧の通り、設定ファイルは有効な `json`の構造体です。 それでは、行ごとに各パラメータが何を意味するのかを見てゆきましょう。"

#: ../iroha/docs/source/guides/configuration.rst:25
msgid "Deployment-specific parameters"
msgstr "運用時のパラメーター"

#: ../iroha/docs/source/guides/configuration.rst:27
msgid "``block_store_path`` sets path to the folder where blocks are stored."
msgstr "`block_store_path`は、ブロックが格納されているフォルダへのパスを設定します。"

#: ../iroha/docs/source/guides/configuration.rst:28
msgid "``torii_port`` sets the port for external communications. Queries and transactions are sent here."
msgstr "`torii_port`は、外部通信用のポートを設定します。 クエリーとトランザクションがここに送られます。"

#: ../iroha/docs/source/guides/configuration.rst:30
msgid "``internal_port`` sets the port for internal communications: ordering service, consensus and block loader."
msgstr "`internal_port`は、内部通信用のポートを設定します。内部通信には、注文サービス（ordering service）、コンセンサス（consensus）、ブロックローダー（block loader）があります。"

#: ../iroha/docs/source/guides/configuration.rst:32
msgid "``pg_opt`` is used for setting credentials of PostgreSQL: hostname, port, username and password."
msgstr "pg_optは、PostgreSQLの認証情報の設定に使用されます。認証情報には、ホスト名、ポート、ユーザ名、パスワードがあります。"

#: ../iroha/docs/source/guides/configuration.rst:36
msgid "Environment-specific parameters"
msgstr "環境設定用パラメーター"

#: ../iroha/docs/source/guides/configuration.rst:38
msgid "``max_proposal_size`` is the maximum amount of transactions that can be in one proposal, and as a result in a single block as well. So, by changing this value you define the size of potential block. For a starter you can stick to ``10``. However, we recommend to increase this number if you have a lot of transactions per second."
msgstr "`max_proposal_size`は1つのプロポーザルに入れることができるトランザクションの最大数であり、それらは全て1つのブロックに格納されます。 したがって、この値を変更することによって、新規作成されるブロックのサイズが定義されます。 はじめは「10」に設定しておくと良いでしょう。 ただし、秒間取引量が多い場合には、この値を大きくすることをお勧めします。"

#: ../iroha/docs/source/guides/configuration.rst:43
msgid "``proposal_delay`` is a maximum waiting time in milliseconds before emitting a new proposal. Proposal is emitted if the ``max_proposal_size`` is reached or ``proposal_delay`` milliseconds had passed. You can start with ``5000`` and increase this number if you have a lot of transactions per second since it is likely that with an intense load (over 100 transactions per second) and low value of ``proposal_delay`` there will be many proposals of small size."
msgstr "`proposal_delay`は、新規ブロックの生成を発信するまでの最大待ち時間（ミリ秒単位）です。新規ブロック生成のプロポーザルは、``max_proposal_size``に達するか、 `proposal_delay`ミリ秒が経過した場合に生成されます。 はじめは「5000」に設定しておくとよいでしょう。多くの取引量がある場合は、この値を大きくしてください。負荷が大きく（毎秒100トランザクション以上）、かつ`proposal_delay`の値が小さい場合は、小さなサイズの新規ブロック生成要求が発信される可能性が高くなることが予想されるためです。"

#: ../iroha/docs/source/guides/configuration.rst:50
msgid "``vote_delay`` is a waiting time in milliseconds before sending vote to the next peer. Optimal value depends heavily on the amount of Iroha peers in the network (higher amount of nodes requires longer ``vote_delay``). We recommend to start with 100-1000 milliseconds."
msgstr "`vote_delay`は、次のピア（ネットワークノード）に投票を送るまでの待ち時間（ミリ秒）です。 最適な値は、ネットワーク内のいろはピア数に大きく依存します（ノード数が多いほど、「vote_delay」には長い値が必要）。 はじめは100〜1000ミリ秒で設定することをお勧めします。"

#: ../iroha/docs/source/guides/configuration.rst:54
msgid "``load_delay`` is a waiting time in milliseconds before loading committed block from next peer. We recommend setting this number the same value as ``proposal_delay`` or even higher."
msgstr "`load_delay`は、次のピアからコミットされたブロックをロードするまでの待ち時間（ミリ秒単位）です。 この数値は `proposal_delay`またはそれ以上の値に設定することをお勧めします。"

#: ../iroha/docs/source/api/commands.rst:2
msgid "Commands"
msgstr "利用可能なコマンド一覧"

#. I am sorry, these translations are not needed (since those are the names of commands)
#: ../iroha/docs/source/api/commands.rst:8
msgid "Add asset quantity"
msgstr "該当資産の量を追加する"

#: ../iroha/docs/source/api/commands.rst:59
msgid "Add peer"
msgstr "ピア（ノード）を追加する"

#: ../iroha/docs/source/api/commands.rst:98
msgid "Add signatory"
msgstr "署名者を追加する"

#: ../iroha/docs/source/api/commands.rst:136
msgid "Append role"
msgstr "役割を追加する"

#: ../iroha/docs/source/api/commands.rst:171
msgid "Create account"
msgstr "アカウントを新規作成する"

#: ../iroha/docs/source/api/commands.rst:208
msgid "Create asset"
msgstr "アセットを発行する"

#: ../iroha/docs/source/api/commands.rst:245
msgid "Create domain"
msgstr "ドメインを作成する"

#: ../iroha/docs/source/api/commands.rst:280
msgid "Create role"
msgstr "役割を作成する"

#: ../iroha/docs/source/api/commands.rst:315
msgid "Detach role"
msgstr "役割を切り離す"

#: ../iroha/docs/source/api/commands.rst:350
msgid "Grant permission"
msgstr "権限を与える"

#: ../iroha/docs/source/api/commands.rst:425
msgid "Revoke permission"
msgstr "権限を取り消す"

#: ../iroha/docs/source/api/commands.rst:458
msgid "Set account detail"
msgstr "アカウントの詳細を設定する"

#: ../iroha/docs/source/api/commands.rst:497
msgid "Set account quorum"
msgstr "アカウントの定足数を設定する"

#: ../iroha/docs/source/api/commands.rst:537
msgid "Subtract asset quantity"
msgstr "資産量を減らす"

#: ../iroha/docs/source/api/commands.rst:587
msgid "Transfer asset"
msgstr "資産を移転させる"

#: ../iroha/docs/source/api/cpp_library.rst:2
msgid "С++ library"
msgstr "C++ライブラリ"

#: ../iroha/docs/source/api/nodejs_library.rst:4
msgid "This section only contains code reference (autogenerated docs are possible with a description of arguments and return values)"
msgstr "このセクションには、参照コードのみが含まれています（引数と戻り値の説明がされたドキュメントの自動生成も可能です）"

#: ../iroha/docs/source/api/index.rst:2
msgid "Iroha API reference"
msgstr "いろは（Hyperledger Iroha）のAPIリファレンス"

#: ../iroha/docs/source/api/index.rst:4
msgid "In API section we will take a look at building blocks of an application interacting with Iroha. We will overview commands and queries that the system have, and the set of client libraries encompassing transport and application layer logic."
msgstr "APIセクションでは、実際にいろはでの動作を見ながら、いろはを構成する要素について見ていきます。 システムが持つコマンドやクエリの種類、およびトランスポート層とアプリケーション層にわたるクライアントライブラリを概観します。"

#: ../iroha/docs/source/index.rst:18
msgid "Table of contents"
msgstr "目次"

#: ../iroha/docs/source/api/java_library.rst:2
msgid "Java library"
msgstr "Javaライブラリ"

#: ../iroha/docs/source/api/nodejs_library.rst:2
msgid "NodeJS library"
msgstr "NodeJSライブラリ"

#: ../iroha/docs/source/api/objc_library.rst:2
msgid "Objective-C library"
msgstr "Objective-Cライブラリ"

#: ../iroha/docs/source/api/python_library.rst:2
msgid "Python library"
msgstr "Pythonライブラリ"

#: ../iroha/docs/source/api/queries.rst:2
msgid "Queries"
msgstr "クエリの一覧"

#: ../iroha/docs/source/api/queries.rst:5
msgid "Get account"
msgstr "アカウントを取得する"

#: ../iroha/docs/source/api/queries.rst:8
msgid "Get signatories"
msgstr "署名者を取得する"

#: ../iroha/docs/source/api/queries.rst:11
msgid "Get transactions"
msgstr "トランザクションを取得する"

#: ../iroha/docs/source/api/queries.rst:14
msgid "Get account transactions"
msgstr "特定のアカウントに関連した取引情報を取得する"

#: ../iroha/docs/source/api/queries.rst:17
msgid "Get account asset transactions"
msgstr "アカウントに関連した特定の資産取引に関する情報を取得する"

#: ../iroha/docs/source/api/queries.rst:20
msgid "Get account assets"
msgstr "アカウントの資産情報を取得する"

#: ../iroha/docs/source/api/queries.rst:23
msgid "Get asset info"
msgstr "資産情報を取得する"

#: ../iroha/docs/source/api/queries.rst:26
msgid "Get roles"
msgstr "役割を得る"

#: ../iroha/docs/source/api/queries.rst:29
msgid "Get role permissions"
msgstr "役割に対する権限を得る"

#: ../iroha/docs/source/api/swift_library.rst:2
msgid "Swift library"
msgstr "Swiftライブラリ"

#: ../iroha/docs/source/contribution/index.rst:2
msgid "Contribution"
msgstr "貢献"

#: ../iroha/docs/source/contribution/index.rst:7
msgid "Code of conduct"
msgstr "規定・規範"

#: ../iroha/docs/source/contribution/index.rst:10
msgid "Process"
msgstr "プロセス"

#: ../iroha/docs/source/contribution/index.rst:13
msgid "Communication"
msgstr "コミュニケーション（問い合わせ）"

#: ../iroha/docs/source/contribution/index.rst:16
msgid "Issue tracker"
msgstr "用件の履歴表示"

#: ../iroha/docs/source/core_concepts/glossary.rst:2
msgid "A term"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:5
msgid "B term"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:8
msgid "C term"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:10
msgid "Remaining parts (WSV, etc.)"
msgstr "残っている部分（ワールドステートビュー（WSV）等）"

#: ../iroha/docs/source/core_concepts/index.rst:2
msgid "Core concepts"
msgstr "重要事項"

#: ../iroha/docs/source/core_concepts/index.rst:4
msgid "Why Iroha runs in a network? How to understand the objects inside and outside the system? How peers in the network collaborate and decide which data to put into the blockchain? We will look through the basics of Iroha in this section."
msgstr "「いろは」はなぜネットワーク上で動くのでしょうか。 システムの内部と外部のオブジェクトをどのようにすれば理解できるのでしょうか。 ネットワーク上のピアはどのように協力してブロックチェーンに入れるべきデータを決定するのでしょうか。 本セクションでは、こうしたいろはシステムの基本的な部分を見ていきましょう。"

#: ../iroha/docs/source/core_concepts/index.rst:10
msgid "Is having an account in Iroha means being a user?"
msgstr "いろはシステムの上でアカウントを持っているということは、ユーザーであるということなのでしょうか。"

#: ../iroha/docs/source/core_concepts/index.rst:14
msgid "Are there differences compared to client-server systems?"
msgstr "従来のクライアント・サーバー型システムとの違いはあるのでしょうか。"

#: ../iroha/docs/source/core_concepts/index.rst:18
msgid "Assets, domains and other internal objects"
msgstr "資産、ドメインおよびその他の内部オブジェクト"

#: ../iroha/docs/source/core_concepts/index.rst:22
msgid "Does everyone have to maintain their own peer?"
msgstr "すべてのいろはユーザーがそれぞれのノードを運用しなければいけないのでしょうか。"

#: ../iroha/docs/source/core_concepts/index.rst:26
msgid "How peers communicate with each other?"
msgstr "どのようにノード達は通信し合うのでしょうか。"

#: ../iroha/docs/source/core_concepts/index.rst:30
#: ../iroha/docs/source/core_concepts/index.rst:32
msgid "ER model"
msgstr "ERモデル（実体関連モデル）"

#: ../iroha/docs/source/core_concepts/glossary.rst:204
msgid "Transaction"
msgstr "トランザクション"

#: ../iroha/docs/source/core_concepts/index.rst:38
msgid "Transaction statuses"
msgstr "トランザクションの状態"

#: ../iroha/docs/source/core_concepts/glossary.rst:181
msgid "Query"
msgstr "クエリー（問い合わせ）"

#: ../iroha/docs/source/api/commands.rst:51
#: ../iroha/docs/source/api/commands.rst:92
#: ../iroha/docs/source/api/commands.rst:127
#: ../iroha/docs/source/api/commands.rst:164
#: ../iroha/docs/source/api/commands.rst:201
#: ../iroha/docs/source/api/commands.rst:239
#: ../iroha/docs/source/api/commands.rst:273
#: ../iroha/docs/source/api/commands.rst:309
#: ../iroha/docs/source/api/commands.rst:344
#: ../iroha/docs/source/api/commands.rst:379
#: ../iroha/docs/source/api/commands.rst:413
#: ../iroha/docs/source/api/commands.rst:453
#: ../iroha/docs/source/api/commands.rst:488
#: ../iroha/docs/source/api/commands.rst:526
#: ../iroha/docs/source/api/commands.rst:579
#: ../iroha/docs/source/api/commands.rst:621
msgid "Validation"
msgstr "検証"

#: ../iroha/docs/source/core_concepts/index.rst:47
msgid "Stateless"
msgstr "ステートレス"

#: ../iroha/docs/source/core_concepts/index.rst:50
msgid "Stateful"
msgstr "ステートフル"

#: ../iroha/docs/source/core_concepts/index.rst:12
msgid "Glossary"
msgstr "用語集"

#: ../iroha/docs/source/getting_started/index.rst:2
msgid "Getting Started"
msgstr "はじめる"

#: ../iroha/docs/source/getting_started/index.rst:4
msgid "In this guide, we will create a very basic Iroha network, launch it, create a couple of transactions, and check the data written in the ledger. To keep things simple, we will use Docker."
msgstr "このガイドでは、基本的ないろはネットワークを作成し、立ち上げ、いくつかのトランザクションを作成し、台帳に記録されたデータを確認します。 単純にするために、Dockerを利用します。"

#: ../iroha/docs/source/getting_started/index.rst:8
msgid "Ledger is the synonym for a blockchain, and Hyperledger Iroha is known also as Distributed Ledger Technology — which in essence is the same as \"blockchain framework\". You can check the rest of terminology used in the Glossary section."
msgstr "台帳はブロックチェーンの同義語で、ハイパーレジャーいろは（Hyperledger Iroha）は分散型台帳技術（Distributed Ledger Technology）としても知られています。本質的には「ブロックチェーンフレームワーク」と同じです。 その他の用語は、「用語集」で確認できます。"

#: ../iroha/docs/source/guides/libraries/python.rst:10
#: ../iroha/docs/source/guides/libraries/python.rst:60
msgid "Prerequisites"
msgstr "前提となる環境"

#: ../iroha/docs/source/getting_started/index.rst:15
msgid "For this guide, you need a computer running Unix-like system with ``docker`` installed. You can read how to install it on a `Docker's website <https://www.docker.com/community-edition/>`_."
msgstr "このガイドでは、dockerがインストールされたUnix系システムが起動されているコンピュータが必要です。`Dockerのウェブサイト<https://www.docker.com/community-edition/>`_ でインストール方法を読むことができます。"

#: ../iroha/docs/source/getting_started/index.rst:19
msgid "Please note that you can use Iroha without ``docker`` as well. You can read about it in other parts of documentation."
msgstr "「いろは」はもちろんDockerなしで使用することも可能です。 この点については、ドキュメントの他の部分で説明されています。"

#: ../iroha/docs/source/getting_started/index.rst:23
msgid "Starting Iroha Node"
msgstr "いろはノードを起動する"

#: ../iroha/docs/source/getting_started/index.rst:30
msgid "Creating a Docker Network"
msgstr "Dockerネットワークを作成する"

#: ../iroha/docs/source/getting_started/index.rst:31
msgid "To operate, Iroha requires a ``PostgreSQL`` database. Let's start with creating a Docker network, so containers for Postgres and Iroha can run on the same virtual network and successfully communicate. In this guide we will call it ``iroha-network``, but you can use any name. In your terminal write following command:"
msgstr "Irohaが動作するためには  `PostgreSQL` データベースが必要です。 PostgresとIroha用のコンテナが同じ仮想ネットワーク上で実行され、正常に通信が行われるようにするため、まずはDockerネットワークの作成から始めましょう。 本ガイドでは、「iroha-network」と呼んでいますが、任意の名前を使用することができます。任意の名前を使用するためには、ターミナル上で次のコマンドを実行します。"

#: ../iroha/docs/source/getting_started/index.rst:42
msgid "Starting PostgreSQL Container"
msgstr "PostgreSQLのコンテナを起動する"

#: ../iroha/docs/source/getting_started/index.rst:44
msgid "Now we need to run ``PostgreSQL`` in a container, attach it to the network you have created before, and expose ports for communication:"
msgstr "では次に、コンテナ内でPostgreSQLを実行し、これまでに作成したネットワークに接続し、通信用ポートを公開します。これらのステップを以下に示します。"

#: ../iroha/docs/source/getting_started/index.rst:56
#, fuzzy
msgid "If you already have Postgres running on a host system on default port (5432), then you should pick another free port that will be occupied. For example, 5433: ``-p 5433:5432 \\``"
msgstr "ホストシステム上のデフォルトポート（5432番）で既にPostgresを実行している場合は、別の空きポートをもう1つ選択する必要があります。 たとえば、5433番を指定する場合は、以下のコマンドを実行します。`-p 5433:5432`"

#: ../iroha/docs/source/getting_started/index.rst:61
msgid "Creating Blockstore"
msgstr "Blockstoreを作成する"

#: ../iroha/docs/source/getting_started/index.rst:62
msgid "Before we run Iroha container, we should create persistent volume to store files, storing blocks for the chain. It is done via the following command:"
msgstr "Irohaコンテナを実行する前に、今後ファイルやブロックチェーンを保存していくボリュームを作成する必要があります。 これは次のコマンドで行います。"

#: ../iroha/docs/source/getting_started/index.rst:70
msgid "Configuring Iroha Network"
msgstr "Irohaネットワークを設定する"

#: ../iroha/docs/source/getting_started/index.rst:72
msgid "To keep things simple, in this guide we will create a network containing only one node. To understand how to run several peers, follow this guide."
msgstr "単純化のために、このガイドでは1つのノードだけで構成されるネットワークを構築します。 複数ピアでの実行方法を理解するためには、このガイドに沿って行ってください。"

#: ../iroha/docs/source/getting_started/index.rst:76
msgid "Now we need to configure our Iroha network. This includes creating a configuration file, generating keypairs for a users, writing a list of peers and creating a genesis block. However, we have prepared an example configuration for this guide, so you can start playing with Iroha faster. In order to get those files, you need to clone the `Iroha repository <github.com/hyperledger/iroha>`_ from Github."
msgstr "それでは次に、Irohaネットワークを設定する必要があります。 そのためには、設定ファイルの作成、ユーザーの鍵ペアの生成、ピアノリストの作成、genesis blockの作成が必要です。 しかし、私たちはこのガイドの設定例を用意していますので、すぐにIrohaを試してみることができます。 これらのファイルを取得するには、Githubの `Iroha repository <github.com/hyperledger/iroha>`_ をクローンする必要があります。"

#: ../iroha/docs/source/guides/build.rst:41
msgid "``--depth-1`` option allows us to download only latest commit and save some time and bandwidth. If you want to get a full commit history, you can omit this option."
msgstr "`--depth-1` オプションを使うと、最新のコミットだけをダウンロードし、時間と帯域を節約することができます。 コミット履歴全てを取得する場合は、このオプションを省略してください。"

#: ../iroha/docs/source/getting_started/index.rst:92
msgid "Starting Iroha Container"
msgstr "Irohaコンテナを起動する"

#: ../iroha/docs/source/getting_started/index.rst:93
msgid "We are ready to launch our Iroha container. Let's do it with the following command"
msgstr "これでIrohaコンテナを起動する準備が整いました。 次のコマンドで早速実行してみましょう。"

#: ../iroha/docs/source/getting_started/index.rst:106
msgid "Let's look in detail what this command does:"
msgstr "このコマンドが何を行っているのか詳しくみてみましょう。"

#: ../iroha/docs/source/getting_started/index.rst:108
msgid "``docker run -it --name iroha \\`` attaches you to docker container called ``iroha``"
msgstr "`docker run -it --name iroha` は、irohaと名づけられたDockerコンテナへの接続を実行します。"

#: ../iroha/docs/source/getting_started/index.rst:110
msgid "with ``$(pwd)/iroha/example:/opt/iroha_data \\`` we add a folder containing our prepared configuration to a docker container into ``/opt/iroha_data``."
msgstr "`$(pwd)/iroha/example:/opt/iroha_data` で、すでに準備されている設定を含むフォルダをDockerのコンテナに``/opt/iroha_data``を追加します。"

#: ../iroha/docs/source/getting_started/index.rst:112
msgid "``-v blockstore:/tmp/block_store \\`` adds a persistent block storage which we created before to a container, so our blocks won't be lost after we stop the container"
msgstr "`-v blockstore:/tmp/block_store` では、コンテナに先ほど作成した永続的なブロックストレージを追加するので、コンテナが停止された後でもブロックは失われません。"

#: ../iroha/docs/source/getting_started/index.rst:115
msgid "``--network=iroha-network \\`` adds our container to previously created ``iroha-network``, so Iroha and Postgres could see each other."
msgstr "`--network=iroha-network` で、先ほど作成したiroha-networkにコンテナが追加されるので、IrohaとPostgresはお互いを認識することができるようになります。"

#: ../iroha/docs/source/getting_started/index.rst:117
msgid "``--entrypoint=/bin/bash \\`` Because ``hyperledger/iroha-docker`` has the custom script which runs after starting the container, we want to override it so we can start Iroha Daemon manually."
msgstr "`--entrypoint =/bin/bash` hyperledger / iroha-dockerはコンテナを起動した後に実行するカスタムスクリプトを持っているので、手動でIrohaデーモンを起動できるようにオーバーライドします。"

#: ../iroha/docs/source/getting_started/index.rst:120
msgid "``hyperledger/iroha-docker:develop`` is the image which has the ``develop`` branch."
msgstr "`hyperledger/iroha-docker:develop` は、developブランチを持つイメージです。"

#: ../iroha/docs/source/getting_started/index.rst:124
msgid "Launching Iroha Daemon"
msgstr "いろは（Iroha）デーモンを起動する"

#: ../iroha/docs/source/getting_started/index.rst:125
msgid "Now you are in the interactive shell of Iroha's container. To actually run Iroha, we need to launch Iroha daemon – ``irohad``."
msgstr "現在あなたは、いろはのコンテナの対話型シェルにいます。 実際にいろはを動かすためには、いろはデーモン「irohad」を起動させます。"

#: ../iroha/docs/source/getting_started/index.rst:132
msgid "In the usual situation, you need to provide a config file, generate genesis block and keypair. However, as a part of this guide, we provide an example configuration for you. Please do not use these settings in a production. You can read more about configuration here."
msgstr "通常は、まず設定ファイルを用意し、ジェネシスブロックと鍵ペアを生成する必要がありますが、本ガイドでは、設定例を示します。 これらの設定を本番環境では使用しないでください。 こちらで設定に関する詳細を読むことができます。"

#: ../iroha/docs/source/getting_started/index.rst:137
msgid "Congratulations! You have an Iroha node up and running! In the next section, we will test it by sending some transactions."
msgstr "おめでとうございます！ いろはノードが起動しました！ 次のセクションでは、トランザクションを実際にいくつか送信してテストします。"

#: ../iroha/docs/source/getting_started/index.rst:140
msgid "You can get more information about ``irohad`` and its launch options in this section"
msgstr "このセクションでは、 `` irohad``と起動オプションに関する詳細情報を知ることができます。"

#: ../iroha/docs/source/getting_started/index.rst:144
msgid "Interacting with Iroha Network"
msgstr "Irohaネットワークを操作してみる"

#: ../iroha/docs/source/getting_started/index.rst:145
msgid "You can interact with Iroha using various ways. You can use our client libraries to write code in various programming languages (e.g. Java, Python, Javascript, Swift) which communicates with Iroha. Alternatively, you can use ``iroha-cli`` – our command-line tool for interacting with Iroha. As a part of this guide, let's get familiar with ``iroha-cli``"
msgstr "さまざまな方法でIrohaとやりとりすることができます。 クライアントライブラリを使用することで、さまざまなプログラミング言語（Java、Python、Javascript、Swiftなど）でIrohaと通信するためのコードを記述できます。 あるいは、コマンドラインツールである ``iroha-cli``を使うこともできます。 このガイドでは、「iroha-cli」に慣れ親しんでみましょう。"

#: ../iroha/docs/source/getting_started/index.rst:151
msgid "Despite that ``iroha-cli`` is arguably the simplest way to start working with Iroha, ``iroha-cli`` was engineered very fast and lacks tests, so user experience might not be the best. For example, the order of menu items can differ from that you see in this guide. In the future, we will deliver a better version and appreciate contributions."
msgstr "「iroha-cli」がおそらくIrohaを操作する上で最も簡単な方法ですが、「iroha-cli」はとても速く動作するよう設計されているため、テストがまだ十分に行われていません。そのため、ユーザーエクスペリエンスはまだ最良ではないかもしれません。 たとえば、メニュー項目の表示順序は、本ガイドに記載されている順序とは異なる場合があります。 今後とも、より良いバージョンを提供をしてゆくと共に、みなさまからの品質向上へのご貢献もご歓迎しております。"

#: ../iroha/docs/source/getting_started/index.rst:161
msgid "Open a new terminal (note that Iroha container and ``irohad`` should be up and running) and attach to an ``iroha`` docker container:"
msgstr "新しいターミナルを開き（Irohaのコンテナと「irohad」が起動していることに確認してください）、「iroha」ドッカーコンテナに接続してください。以下に示します。"

#: ../iroha/docs/source/getting_started/index.rst:168
msgid "Now you are in the interactive shell of Iroha's container again. We need to launch ``iroha-cli`` and pass an account name of the desired user. In our example, the account ``admin`` is already created in a ``test`` domain. Let's use this account to work with Iroha."
msgstr "これで再びIrohaのコンテナのインタラクティブシェルに入りました。 「iroha-cli」を起動させ、目的のユーザーのアカウント名を渡してください。 この例では、アカウント`` admin``はすでに`` test``ドメインに作成されていますので、このアカウントを使ってIrohaを操作してゆくことにしましょう。"

#: ../iroha/docs/source/getting_started/index.rst:177
msgid "Full account name has a ``@`` symbol between name and domain. Note that the keypair has the same name."
msgstr "完全なアカウント名には、名前とドメインの間に `` @ ``シンボルがあります。 鍵ペアに同じ名前が用いられている点に注意してください。"

#: ../iroha/docs/source/getting_started/index.rst:181
msgid "Creating the First Transaction"
msgstr "1番目のトランザクションを作成する"

#: ../iroha/docs/source/getting_started/index.rst:183
msgid "You can see the interface of ``iroha-cli`` now. Let's create a new asset, add some asset to the admin account and transfer it to other account. To achieve this, please choose option ``1. New transaction (tx)`` by writing ``tx`` or ``1`` to a console."
msgstr "それでは「iroha-cli」のインターフェースを見えているところで、 新規アセットを作成し、管理者のアカウントにアセットを追加して、そのアセットを他のアカウントに転送してみましょう。 コンソールから ``tx``か ``1``を記述してオプション ``1. New transaction (tx)``を選択してください。"

#: ../iroha/docs/source/getting_started/index.rst:188
msgid "Now you can see a list of available commands. Let's try creating a new asset. Select ``14. Create Asset (crt_ast)``. Now enter a name for your asset, for example ``coolcoin``. Next, enter a Domain ID. In our example we already have a domain ``test``, so let's use it. Then we need to enter an asset precision – the amount of numbers in a fractional part. Let's set precision to ``2``."
msgstr "これで使用可能なコマンドのリストが表示されます。 では新規アセットを作成してみましょう。 ``14. Create Asset (crt_ast)``を選択します。 次に、資産名を入力してください（例：coolcoin）。 次に、ドメインIDを入力します。 この例では、すでにドメイン `` test``を設定されていますので、それを使いましょう。 そして次に、資産の精度（小数部分の数値）を入力してください。 ここでは精度を ``2``に設定することにします。"

#: ../iroha/docs/source/getting_started/index.rst:194
msgid "Congratulations, you have created your first command and added it to a transaction! You can either send it to Iroha or add some more commands ``1. Add one more command to the transaction (add)``. Let's add more commands, so we can do everything in one shot. Type ``add``."
msgstr "最初のコマンドを作成してトランザクションに追加しました！おめでとうございます！ Irohaに送信するか、``1. Add one more command to the transaction (add)``を選択して、さらにコマンドを追加することができます。 一通りの操作を確認するのも兼ねて、ここでもう１つコマンドを追加してみましょう。 ``add``と打ちます。"

#: ../iroha/docs/source/getting_started/index.rst:199
msgid "Now try adding some ``coolcoins`` to our account. Select ``16. Add Asset Quantity (add_ast_qty)``, enter Account ID – ``admin@test``, asset ID – ``coolcoin#test``, integer part and precision. For example, to add 200.50 ``coolcoins``, we need to enter integer part as ``20050`` and precision as ``2``, so it becomes ``200.50``."
msgstr "先ほど作成したアカウントにいくつかの「coolcoin」を追加してみてください。 ``16. Add Asset Quantity (add_ast_qty)``を選択し、アカウントID - `` admin@test``、アセットID - ``coolcoin#test``、整数部分と精度を入力します。 たとえば、200.50の``coolcoins``を追加するには、整数部分を `` 20050``に、精度を `` 2``とすれば、``200.50``になります。"

#: ../iroha/docs/source/getting_started/index.rst:205
msgid "Full asset name has a ``#`` symbol between name and domain."
msgstr "アセット名ではネームとドメイン名の間、「#」があります"

#: ../iroha/docs/source/getting_started/index.rst:207
msgid "Let's transfer 100.50 ``coolcoins`` from ``admin@test`` to ``test@test`` by adding one more command and choosing ``5. Transfer Assets (tran_ast)``. Enter Source Account and Destination Account, in our case ``admin@test`` and ``test@test``, Asset ID (``coolcoin#test``), integer part and precision (``10050`` and ``2`` accordingly)."
msgstr "100.50 coolcoinsをadmin@testからtest@testへ送金して見ましょう。「5. Transfer Assets（tran_ast）」を選んで、ソースのアカウントはadmin@testで、宛先はtest@testに入力してください。アセットIDはcoolcoin#testにして、10050の数字及び精度2を入力してください。"

#: ../iroha/docs/source/getting_started/index.rst:213
msgid "Now we need to send our transaction to Iroha peer (``2. Send to Iroha peer (send)``). Enter peer address (in our case ``localhost``) and port (``50051``). Congratulations, your transaction is submitted and you can see your transaction hash. You can use it to check transaction's status."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:218
msgid "Go back to a terminal where ``irohad`` is running. You can see logs of your transaction."
msgstr "irohadで実行されているターミナルに戻ると取引内容が含めたログを見られます"

#: ../iroha/docs/source/getting_started/index.rst:221
msgid "Congratulations! You have submitted your first transaction to Iroha."
msgstr "それで初めての取引をいろはで実行できた。おめでとうございます！"

#: ../iroha/docs/source/getting_started/index.rst:224
msgid "Creating the First Query"
msgstr "初めてのクエリーを作成する"

#: ../iroha/docs/source/getting_started/index.rst:226
msgid "Now let's check if ``coolcoins`` were successfully transferred from ``admin@test`` to ``test@test``. Choose ``2. New query (qry)``. ``7. Get Account's Assets (get_acc_ast)`` can help you to check if ``test@test`` now has ``coolcoin``. Form a query in a similar way you did with commands you did with commands and ``1. Send to Iroha peer (send)``. Now you can see information about how many ``coolcoin`` does ``test@test`` have. It will look similar to this:"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:241
msgid "Congratulations! You have submitted your first query to Iroha and got a response!"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:244
msgid "To get information about all available commands and queries please check our API section."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:248
msgid "Being Badass"
msgstr "格好いい手法"

#: ../iroha/docs/source/getting_started/index.rst:250
msgid "Let's try being badass and cheat Iroha. For example, let's transfer more ``coolcoins`` than ``admin@test`` has. Try to transfer 100000.00 ``coolcoins`` from ``admin@test`` to ``test@test``. Again, proceed to ``1. New transaction (tx)``, ``5. Transfer Assets (tran_ast)``, enter Source Account and Destination Account, in our case ``admin@test`` and ``test@test``, Asset ID (``coolcoin#test``), integer part and precision (``10000000`` and ``2`` accordingly). Send a transaction to Iroha peer as you did before. Well, it says"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:264
msgid "`Your transaction was accepted for processing`. Does it mean that we had successfully cheated Iroha? Let's try to see transaction's status. Choose ``3. New transaction status request (st)`` and enter transaction's hash which you can get in the console after the previous command. Let's send it to Iroha. It replies with:"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:274
msgid "Apparently no. Our transaction was not accepted because it did not pass stateful validation and ``coolcoins`` were not transferred. You can check the status of ``admin@test`` and ``test@test`` with queries to be sure (like we did earlier)."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:2
msgid "Deploying Iroha"
msgstr "いろはをデプロイする"

#: ../iroha/docs/source/guides/deployment.rst:4
msgid "Hyperledger Iroha can be deployed in different ways, depending on the perspective and the purpose. There can be either a single node deployed, or multiple nodes running in several containers on a local machine or spread across the network — so pick any case you need. This page describes different scenarios and is intended to act as a how-to guide for users, primarily trying out Iroha for the first time."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:9
msgid "Running single instance"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:11
msgid "Generally, people want to run Iroha locally in order to try out the API and explore the capabilities. This can be done in local or container environment (Docker). We will explore both possible cases, but in order to simplify peer components deployment, *it is advised to have Docker installed on your machine*."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:17
msgid "Local environment"
msgstr "ローカル環境"

#: ../iroha/docs/source/guides/deployment.rst:19
msgid "By local environment, it is meant to have daemon process and Postgres deployed without any containers. This might be helpful in cases when messing up with Docker is not preferred — generally a quick exploration of the features."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:23
msgid "Run postgres server"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:25
msgid "In order to run postgres server locally, you should check postgres `website <https://www.postgresql.org/docs/current/static/server-start.html>`__ and follow their description. Generally, postgres server runs automatically when the system starts, but this should be checked in the configuration of the system."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:30
msgid "Run iroha daemon (irohad)"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:32
msgid "There is a list of preconditions which you should meet before proceeding:"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:34
msgid "Postgres server is up and running"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:35
msgid "`irohad` Iroha daemon binary is built and accessible in your system"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:36
msgid "The genesis block and configuration files were created"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:37
msgid "Config file uses valid postgres connection settings"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:38
msgid "A keypair for the peer is generated"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:39
#: ../iroha/docs/source/guides/deployment.rst:119
msgid "This is the first time you run the Iroha on this peer and you want to create new chain"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:41
msgid "Have you got something that is not the same as in the list of assumptions? Please, refer to the section below the document, titled as `Dealing with troubles`_."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:43
msgid "In case of valid assumptions, the only thing that remains is to launch the daemon process with following parameters:"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:46
msgid "Parameter"
msgstr "パラメーター"

#: ../iroha/docs/source/guides/deployment.rst:46
msgid "Meaning"
msgstr "意味"

#: ../iroha/docs/source/guides/deployment.rst:48
msgid "config"
msgstr "config"

#: ../iroha/docs/source/guides/deployment.rst:48
msgid "configuration file, containing postgres connection and values to tune the system"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:51
msgid "genesis_block"
msgstr "genesis_block"

#: ../iroha/docs/source/guides/deployment.rst:51
msgid "initial block in the ledger"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:53
msgid "keypair_name"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:53
msgid "private and public key file names without file extension, used by peer to sign the blocks"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:57
msgid "An example of shell command, running Iroha daemon is"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:63
msgid "If you have stopped the daemon and want to use existing chain — you should not pass the genesis block parameter."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:67
msgid "Docker"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:69
msgid "In order to run Iroha peer as a single instance in Docker, you should pull the image for Iroha first:"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:75
msgid "Use *latest* tag for latest stable release, and *develop* for latest development version"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:77
msgid "Then, you have to create an enviroment for the image to run without problems:"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:80
msgid "Create docker network"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:82
msgid "Containers for Postgres and Iroha should run in the same virtual network, in order to be available to each other. Create a network, by typing following command (you can use any name for the network, but in the example, we use *iroha-network* name):"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:90
msgid "Run Postgresql in a container"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:92
msgid "Similarly, run postgres server, attaching it to the network you have created before, and exposing ports for communication:"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:104
msgid "Create volume for block storage"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:106
msgid "Before we run iroha daemon in the container, we should create persistent volume to store files, storing blocks for the chain. It is done via the following command:"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:114
msgid "Running iroha daemon in docker container"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:119
msgid "There is a list of assumptions which you should review before proceeding:"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:117
msgid "Postgres server is running on the same docker network"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:118
msgid "There is a folder, containing config file and keypair for a single node"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:121
msgid "If they are met, you can move forward with the following command:"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:144
msgid "Running multiple instances (peer network)"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:146
msgid "In order to set up a peer network, one should follow routines, described in this section. In this version, we support manual deployment and automated by Ansible Playbook. Choose an option, that meets your security criteria and other needs."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:151
msgid "Manually"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:153
msgid "By manual deployment, we mean that Iroha peer network is set up without automated assistance. It is similar to the process of running a single local instance, although the difference is the genesis block includes more than a single peer. In order to form a block, which includes more than a single peer, or requires customization for your needs, please take a look at `Dealing with troubles`_ section."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:158
msgid "Automated"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:160
msgid "Anyone can reuse existing Ansible Playbook in order to create a network of peers running Iroha. Currently, this is a solution for development and testing, in other words, a proof of concept, and cannot be used in production environment, due to some security flaws. For production network, a manual composing of genesis block is required."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:167
msgid "One ore more <virtual> machines with a Linux distributive installed."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:168
msgid "SSH access to those machines"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:169
msgid "Ansible installed on a local machine"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:172
msgid "Step-by-step guide"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:174
msgid "Create peers.list file in $IROHA_HOME/deploy/ansible/data"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:176
msgid "Write all peers IP addresses followed by the internal port 10001 (e.g 31.192.120.36:10001)"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:178
msgid "Open $IROHA_HOME/deploy/ansible/hosts file"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:180
msgid "Write all IP addresses in [hosts] group"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:182
msgid "Open terminal"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:184
msgid "Disable host key checking, because it can cause troubles due to interactive prompt"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:190
msgid "Go to ansible folder"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:196
msgid "Run playbook, providing your private key and hosts file"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:202
msgid "Wait until playbook finishes and then Iroha network is ready and up."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:205
msgid "Checking Iroha peer status"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:207
msgid "SSH into any of your machines"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:213
msgid "Check Iroha container logs:"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:220
msgid "Dealing with troubles"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:222
msgid "—\"Please, help me, because I am…\""
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:225
msgid "Not having Iroha daemon binary"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:227
msgid "You can build Iroha daemon binary from sources, following API section from the `website <https://hyperledger.github.io/iroha-api/#build>`__"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:230
msgid "Not having config file"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:232
msgid "Check how to create a configuration file by following this `link <https://hyperledger.github.io/iroha-api/#prepare-configuration-file>`__"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:235
msgid "Not having genesis block"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:237
msgid "Create genesis block by generating it via `iroha-cli` or manually, as it is described `here <https://hyperledger.github.io/iroha-api/#create-genesis-block>`__"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:240
msgid "Not having a keypair for a peer"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:242
msgid "In order to create a keypair for an account or a peer, use iroha-cli binary by passing the name of the peer with `--new_account` option."
msgstr ""

#: ../iroha/docs/source/guides/index.rst:2
msgid "Guides and how-tos"
msgstr ""

#: ../iroha/docs/source/guides/index.rst:4
msgid "Here we will take a look more closely at how to use Iroha. In essence, this section is a collection of how-tos for different scenarios: - how to install Iroha - what is required to build client libraries and how to use them (for example https://developers.google.com/protocol-buffers/docs/javatutorial) - how to use CLI - how to deploy a network of Iroha peers, etc."
msgstr ""

#: ../iroha/docs/source/guides/libraries.rst:2
msgid "Client libraries"
msgstr ""

#: ../iroha/docs/source/guides/libraries.rst:5
msgid "C++ library"
msgstr ""

#: ../iroha/docs/source/guides/libraries.rst:8
#: ../iroha/docs/source/guides/libraries.rst:23
#: ../iroha/docs/source/guides/libraries.rst:38
#: ../iroha/docs/source/guides/libraries.rst:53
#: ../iroha/docs/source/guides/libraries.rst:68
#: ../iroha/docs/source/guides/libraries.rst:83
msgid "Where to get"
msgstr ""

#: ../iroha/docs/source/guides/libraries.rst:11
#: ../iroha/docs/source/guides/libraries.rst:26
#: ../iroha/docs/source/guides/libraries.rst:41
#: ../iroha/docs/source/guides/libraries.rst:56
#: ../iroha/docs/source/guides/libraries.rst:71
#: ../iroha/docs/source/guides/libraries.rst:86
msgid "How to use/import"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:75
msgid "Example code"
msgstr ""

#: ../iroha/docs/source/guides/libraries.rst:17
#: ../iroha/docs/source/guides/libraries.rst:32
#: ../iroha/docs/source/guides/libraries.rst:47
#: ../iroha/docs/source/guides/libraries.rst:77
#: ../iroha/docs/source/guides/libraries.rst:92
msgid "Troubleshooting"
msgstr ""

#: ../iroha/docs/source/guides/libraries.rst:62
msgid "Troubleshoting"
msgstr ""

#: ../iroha/docs/source/maintenance/index.rst:2
msgid "Maintenance"
msgstr ""

#: ../iroha/docs/source/maintenance/index.rst:4
msgid "Hardware requirements, deployment process in details, aspects related to security, configuration files — all of the listed is explained in this separate section, helpful for DevOps engineers or those who are digging deeper in the system capabilities."
msgstr ""

#: ../iroha/docs/source/maintenance/index.rst:7
msgid "Ansible"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:2
msgid "Use Case Scenarios"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:4
msgid "We list a number of use cases and specific advantages that Hyperledger Iroha can introduce to these applications. We hope that the applications and use cases will inspire developers and creators to further innovation with Hyperledger Iroha."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:8
msgid "Certificates in Education, Healthcare"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:10
msgid "Hyperledger Iroha incorporates into the system multiple certifying authorities such as universities, schools, and medical institutions. Flexible permission model used in Hyperledger Iroha allows building certifying identities, and grant certificates. The storage of explicit and implicit information in users' account allows building various reputation and identity systems."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:12
msgid "By using Hyperledger Iroha each education or medical certificate can be verified that it was issued by certain certifying authorities. Immutability and clear validation rules provide transparency to health and education significantly reducing the usage of fake certificates."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:15
#: ../iroha/docs/source/use_cases/index.rst:32
#: ../iroha/docs/source/use_cases/index.rst:48
#: ../iroha/docs/source/use_cases/index.rst:61
#: ../iroha/docs/source/use_cases/index.rst:76
msgid "Example"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:17
msgid "Imagine a medical institution registered as a ``hospital`` domain in Hyperledger Iroha. This domain has certified and registered workers each having some role, e.g. ``physician``, ``therapist``, ``nurse``. Each patient of the hospital has an account with full medical history. Each medical record, like blood test results, is securely and privately stored in the account of the patient as JSON key/values. Rules in ``hospital`` domain are defined such that only certified medical workers and the user can access the personal information. The medical data returned by a query is verified that it comes from a trusted source."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:19
msgid "Hospital is tied to a specific location, following legal rules of that location, like storing personal data of citizens only in specific regions(`privacy rules`_). A multi-domain approach in Hyperledger Iroha allows sharing information across multiple countries not violating legal rules. For example, if the user ``makoto@hospital`` decides to share personal case history with a medical institution in another country, the user can use ``grant`` command with permission ``can_get_my_acc_detail``."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:21
msgid "Similar to a medical institution, a registered university in Hyperledger Iroha has permissions to push information to the graduated students. A diploma or certificate is essentially Proof-of-Graduation with a signature of recognized University. This approach helps to ease hiring process, with an employer making a query to Hyperledger Iroha to get the acquired skills and competence of the potential employee."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:27
msgid "Cross-Border Asset Transfers"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:29
msgid "Hyperledger Iroha provides fast and clear trade and settlement rules using multi-signature accounts and atomic exchange. Asset management is easy as in centralized systems while providing necessary security guarantees. By simplifying the rules and commands required to create and transfer assets, we lower the barrier to entry, while at the same time maintaining high-security guarantees."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:34
msgid "For example [#f1]_, a user might want to transfer the ownership of a car. User ``haruto`` has registered owner-asset relationship with a car of ``sora`` brand with parameters: ``{\"id\": \"34322069732074686520616E73776572\", \"color\": \"red\", \"size\": \"small\"}``. This ownership is fixed in an underlying database of the system with copies at each validating peer. To perform the transfer operation user ``haruto`` creates an offer, i.e. a multi-signature transaction with two commands: ``transfer`` to user ``haru`` the car identifier and ``transfer`` some amount of ``usd`` tokens from ``haru`` to ``haruto``. Upon receiving the offer ``haru`` accepts it by signing the multi-signature transaction, in this case, transaction atomically commits to the system."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:36
msgid "Hypeledger Iroha has no built-in token, but it supports different assets from various creators. This approach allows building a decentralized exchange market. For example, the system can have central banks from different countries to issue assets."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:38
msgid "Currently not implemented"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:41
msgid "Financial Applications"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:43
msgid "Hyperleger Iroha can be very useful in the auditing process. Each information is validated by business rules and is constantly maintained by distinct network participants. Access control rules along with some encryption maintain desired level of privacy. Access control rules can be defined at different levels: user-level, domain-level or system-level. At the user-level privacy rules for a specific individual are defined. If access rules are determined at domain or system level, they are affecting all users in the domain. In Hyperledger Iroha we provide convenient role-based access control rules, where each role has specific permissions."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:45
msgid "Transactions can be traced with a local database. Using Iroha-API auditor can query and perform analytics on the data, execute specific audit software. Hyperledger Iroha supports different scenarios for deploying analytics software:  on a local computer, or execute code on specific middleware. This approach allows analyzing Big Data application with Hadoop, Apache, and others. Hypeledger Iroha serves as a guarantor of data integrity and privacy (due to the query permissions restriction)."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:50
msgid "For example, auditing can be helpful in financial applications. An auditor account has a role of the ``auditor`` with permissions to access the information of users in the domain without bothering the user. To reduce the probability of account hijacking and prevent the auditor from sending malicious queries, the auditor is typically defined as a multi-signature account, meaning that auditor can make queries only having signatures from multiple separate identities. The auditor can make queries not only to fetch account data and balance but also all transactions of a user, e.g. all transfers of user ``haruto`` in domain ``konoha``. To efficiently analyze data of million users each Iroha node can work in tandem with analytics software."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:52
msgid "Multi-signature transactions are a powerful tool of Hyperledger Iroha that can disrupt tax system. Each transaction in a certain domain can be as a multi-signature transaction, where one signature comes from the user (for example asset transfer) and the second signature comes from special taxing nodes. Taxing nodes will have special validation rules written using Iroha-API, e.g. each purchase in the certified stores must pay taxes. In other words, Iroha a valid purchase transaction must contain two commands: money transfer(purchase) to the store and money transfer(tax payment) to the government."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:56
msgid "Identity Management"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:58
msgid "Hyperledger Iroha has an intrinsic support for identity management. Each user in the system has a uniquely identified account with personal information, and each transaction is signed and associated with a certain user. This makes Hyperledger Iroha perfect for various application with KYC (Know Your Customer) features."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:63
msgid "For example, insurance companies can benefit from querying the information of user’s transaction without worrying about the information truthfulness. Users can also benefit from storing personal information on a blockchain since authenticated information will reduce the time of claims processing. Imagine a situation where a user wants to make a hard money loan. Currently, pre-qualification is a tedious process of gathering information about income, debts and information verification. Each user in Hyperledger Iroha has an account with verified personal information, such as owning assets, job positions, and debts. User income and debts can be traced using query ``GetAccountTransactions``, owning assets using query ``GetAccountAssets`` and job positions using ``GetAccountDetail``. Each query returns verified result reducing the processing time of hard money loan will take only a few seconds. To incentivize users to share personal information, various companies can come up with business processes. For example, insurance companies can create bonus discounts for users making fitness activities. Fitness applications can push private Proof-of-Activity to the system, and the user can decide later to share information with insurance companies using ``GrantPermission`` with permission ``can_get_my_acc_detail``."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:69
msgid "Supply Chain"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:71
msgid "Governance of a decentralized system and representing legal rules as a system's code is an essential combination of any supply chain system. Certification system used in Hyperledger Iroha allows tokenization of physical items and embedding them into the system. Each item comes with the information about “what, when, where and why”."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:73
msgid "Permission systems and restricted set of secure core commands narrows the attack vector and provides effortlessly a basic level of privacy. Each transaction is traceable within a system with a hash value, by the credentials or certificates of the creator."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:78
msgid "Food supply chain is a shared system with multiple different actors, such as farmers, storehouses, grocery stores, and customers. The goal is to deliver food from a farmer's field to the table of a customer. The product goes through many stages, with each stage recorded in shared space. A customer scans a code of the product via a mobile device, in which an Iroha query is encoded. Iroha query provides a full history with all stages, information about the product and the farmer."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:80
msgid "For example, ``gangreen`` is a registered farmer ``tomato`` asset creator, he serves as a guarantor tokenizing physical items, i.e. associating each tomato with an Iroha ``tomato`` item. Asset creation and distribution processes are totally transparent for network participants. Iroha ``tomato`` goes on a journey through a multitude of vendors to finally come to user ``chad``."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:82
msgid "We simplified asset creation to just a single command ``CreateAsset`` without the need to create complex smart contracts. One the major advantages of Hyperledger Iroha is in its ease, that allows developers to focus on the provided value of their applications."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:86
msgid "Related Research"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:88
msgid "(The idea was to show current pioneers of blockchain applications and their works.)"
msgstr ""

#: ../iroha/docs/source/index.rst:2
msgid "Hyperledger Iroha documentation"
msgstr ""

#: ../iroha/docs/source/index.rst
msgid "Last Reviewed"
msgstr ""

#: ../iroha/docs/source/index.rst:4
msgid "2018-03-06"
msgstr ""

#: ../iroha/docs/source/index.rst:8
msgid "Welcome! Hyperledger Iroha is a simple blockchain platform you can use to make trusted, secure, and fast applications by bringing the power of permission-based blockchain with Byzantine fault-tolerant consensus. It's free, open-source, and works on Linux and Mac OS, with a variety of mobile and desktop libraries."
msgstr ""

#: ../iroha/docs/source/index.rst:10
msgid "You can download the source code of Hyperledger Iroha and latest releases from `GitHub page <https://github.com/hyperledger/iroha>`_."
msgstr ""

#: ../iroha/docs/source/index.rst:12
msgid "This documentation will guide you through the installation, deployment, and launch of Iroha network, and explain to you how to write an application for it. We will also see which use case scenarios are feasible now, and are going to be implemented in the future."
msgstr ""

#: ../iroha/docs/source/index.rst:14
msgid "As Hyperledger Iroha is an open-source project, we will also cover contribution part and explain you a working process."
msgstr ""

#: ../iroha/docs/source/index.rst:16
msgid "There is a separate website for all external API documentation, which is `Iroha API <https://hyperledger.github.io/iroha-api>`_. We are in the process of migration, so that in future only RTD is maintained and updated."
msgstr ""

#: ../iroha/docs/source/overview.rst:2
msgid "Overview of Iroha"
msgstr ""

#: ../iroha/docs/source/overview.rst:5
msgid "What are the key features of Iroha?"
msgstr ""

#: ../iroha/docs/source/overview.rst:8
msgid "Where Iroha can be used?"
msgstr ""

#: ../iroha/docs/source/overview.rst:28
msgid "How is it different from Bitcoin or Ethereum?"
msgstr ""

#: ../iroha/docs/source/overview.rst:40
msgid "How is it different from the rest of Hyperledger frameworks or other permissioned blockchains?"
msgstr ""

#: ../iroha/docs/source/overview.rst:53
msgid "Is it fast?"
msgstr ""

#: ../iroha/docs/source/overview.rst:58
msgid "How to create applications around Iroha?"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:4
msgid "A command changes the state, called World State View, by performing an action over an entity (asset, account) in the system. Any command should be included in a transaction to perform an action."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:11
#: ../iroha/docs/source/api/commands.rst:62
#: ../iroha/docs/source/api/commands.rst:101
#: ../iroha/docs/source/api/commands.rst:139
#: ../iroha/docs/source/api/commands.rst:174
#: ../iroha/docs/source/api/commands.rst:211
#: ../iroha/docs/source/api/commands.rst:248
#: ../iroha/docs/source/api/commands.rst:283
#: ../iroha/docs/source/api/commands.rst:318
#: ../iroha/docs/source/api/commands.rst:353
#: ../iroha/docs/source/api/commands.rst:388
#: ../iroha/docs/source/api/commands.rst:428
#: ../iroha/docs/source/api/commands.rst:461
#: ../iroha/docs/source/api/commands.rst:500
#: ../iroha/docs/source/api/commands.rst:540
#: ../iroha/docs/source/api/commands.rst:590
msgid "Purpose"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:13
msgid "The purpose of add asset quantity command is to increase the quantity of an asset on account of transaction creator. Use case scenario is to increase the number of a mutable asset in the system, which can act as a claim on a commodity (e.g. money, gold, etc.)"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:17
#: ../iroha/docs/source/api/commands.rst:68
#: ../iroha/docs/source/api/commands.rst:107
#: ../iroha/docs/source/api/commands.rst:144
#: ../iroha/docs/source/api/commands.rst:179
#: ../iroha/docs/source/api/commands.rst:217
#: ../iroha/docs/source/api/commands.rst:253
#: ../iroha/docs/source/api/commands.rst:289
#: ../iroha/docs/source/api/commands.rst:324
#: ../iroha/docs/source/api/commands.rst:358
#: ../iroha/docs/source/api/commands.rst:393
#: ../iroha/docs/source/api/commands.rst:433
#: ../iroha/docs/source/api/commands.rst:466
#: ../iroha/docs/source/api/commands.rst:506
#: ../iroha/docs/source/api/commands.rst:545
#: ../iroha/docs/source/api/commands.rst:595
msgid "Schema"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:40
#: ../iroha/docs/source/api/commands.rst:82
#: ../iroha/docs/source/api/commands.rst:117
#: ../iroha/docs/source/api/commands.rst:154
#: ../iroha/docs/source/api/commands.rst:190
#: ../iroha/docs/source/api/commands.rst:228
#: ../iroha/docs/source/api/commands.rst:263
#: ../iroha/docs/source/api/commands.rst:299
#: ../iroha/docs/source/api/commands.rst:334
#: ../iroha/docs/source/api/commands.rst:368
#: ../iroha/docs/source/api/commands.rst:403
#: ../iroha/docs/source/api/commands.rst:443
#: ../iroha/docs/source/api/commands.rst:477
#: ../iroha/docs/source/api/commands.rst:516
#: ../iroha/docs/source/api/commands.rst:568
#: ../iroha/docs/source/api/commands.rst:608
msgid "Structure"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Field"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:44
msgid "Description"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Constraint"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Account ID"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "account id in which to add asset"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "<account_name>@<domain_id>"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "alex@morgan"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Asset ID"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "id of the asset"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "<asset_name>#<domain_id>"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "usd#morgan"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Amount"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "positive amount of the asset to add"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "> 0"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "200.02"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:53
#: ../iroha/docs/source/api/commands.rst:581
msgid "Asset and account should exist"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:54
#: ../iroha/docs/source/api/commands.rst:582
msgid "Added quantity precision should be equal to asset precision"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:55
msgid "Creator of a transaction should have a role which has permissions for issuing assets"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:56
msgid "Creator of a transaction adds account quantity to his/her account only"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:64
msgid "The purpose of add peer command is to write into ledger the fact of peer addition into the peer network. After a transaction with AddPeer has been committed, consensus and synchronization components will start using it."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Address"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "resolvable address in network (IPv4, IPv6, domain name, etc.)"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "should be resolvable"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "192.168.1.1:50541"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Peer key"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "peer public key, which is used in consensus algorithm to sign-off vote, commit, reject messages"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "ed25519 public key"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "292a8714694095edce6be799398ed5d6244cd7be37eb813106b217d850d261f2"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:94
msgid "Creator of the transaction has a role which has CanAddPeer permission"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:95
msgid "Such network address has not been already added"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:103
msgid "The purpose of add signatory command is to add an identifier to the account. Such identifier is a public key of another device or a public key of another user."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Account to which to add signatory"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "makoto@soramitsu"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Public key"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Signatory to add to account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "359f925e4eeecfdd6aa1abc0b79a6a121a5dd63bb612b603247ea4f8ad160156"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:129
#: ../iroha/docs/source/api/commands.rst:418
#: ../iroha/docs/source/api/commands.rst:490
#: ../iroha/docs/source/api/commands.rst:530
msgid "Two cases:"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:131
msgid "Case 1. Transaction creator wants to add a signatory to his or her account, having permission CanAddSignatory"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:133
msgid "Case 2. CanAddSignatory was granted to transaction creator"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:141
msgid "The purpose of append role command is to promote an account to some created role in the system, where a role is a set of permissions account has to perform an action (command or query)."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "id or account to append role to"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "already existent"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Role name"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "name of already created role"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "MoneyCreator"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:166
msgid "The role should exist in the system"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:167
msgid "Transaction creator should have permissions to append role (CanAppendRole)"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:168
msgid "Account, which appends role, has set of permissions in his roles that is a superset of appended role (in other words no-one can append role that is more powerful than what transaction creator is)"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:176
msgid "The purpose of create account command is to make entity in the system, capable of sending transactions or queries, storing signatories, personal data and identifiers."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Account name"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "domain-unique name for account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "`[a-z_0-9]{1,32}`"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "morgan_stanley"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Domain ID"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "target domain to make relation with"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "should be created before the account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "america"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Main pubkey"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "first public key to add to the account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "407e57f50ca48969b08ba948171bb2435e035d82cec417e18e4a38f5fb113f83"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:203
msgid "Transaction creator has permission to create an account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:204
msgid "Domain, passed as domain_id, has already been created in the system"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:205
msgid "Such public key has not been added before as first public key of account or added to a multi-signature account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:213
msgid "The purpose of сreate asset command is to create a new type of asset, unique in a domain. An asset is a countable representation of a commodity."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Asset name"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "domain-unique name for asset"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "soracoin"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "RFC1035 [#f1]_, RFC1123 [#f2]_"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "japan"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Precision"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "number of digits after comma/dot"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "0 <= precision <= uint32 max"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:49
msgid "2"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:241
msgid "Transaction creator has permission to create assets"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:242
msgid "Asset name is unique in domain"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:250
msgid "The purpose of create domain command is to make new domain in Iroha network, which is a group of accounts."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "ID for created domain"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "unique, RFC1035 [#f1]_, RFC1123 [#f2]_"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "japan05"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Default role"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "role for any created user in the domain"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "one of the existing roles"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "User"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:275
msgid "Domain ID is unique"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:276
msgid "Account, who sends this command in transaction, has role with permission to create domain"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:277
msgid "Role, which will be assigned to created user by default, exists in the system"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:285
msgid "The purpose of create role command is to create a new role in the system from the set of permissions. Combining different permissions into roles, maintainers of Iroha peer network can create customized security model."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "name of role to create"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Permissions"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "array of already existent permissions"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "set of passed permissions is fully included into set of existing permissions"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "{can_receive, can_transfer}"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:311
msgid "Set of passed permissions is fully included into set of existing permissions"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:312
msgid "Set of the permissions is not empty"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:320
msgid "The purpose of detach role command is to detach a role from the set of roles of an account. By executing this command it is possible to decrease the number of possible actions in the system for the user."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "ID of account where role will be deleted"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "a detached role name"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "existing role"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:346
msgid "The role exists in the system"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:347
msgid "The account has such role"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:355
msgid "The purpose of grant permission command is to give another account rights to perform actions on the account of transaction sender (give someone right to do something with my account)."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "id of account whom rights are granted"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Permission name"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "name of granted permission"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "permission is defined"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "CanTransferAssets"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:381
msgid "Account exists"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:382
msgid "Transaction creator is allowed to grant this permission"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:385
msgid "Remove signatory"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:390
msgid "Purpose of remove signatory command is to remove a public key, associated with an identity, from an account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Signatory to delete"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:415
msgid "When signatory is deleted, we should check if invariant of **size(signatories) >= quorum** holds"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:416
msgid "Signatory should have been previously added to the account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:420
msgid "Case 1. When transaction creator wants to remove signatory from their account and he or she has permission CanRemoveSignatory"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:422
#: ../iroha/docs/source/api/commands.rst:534
msgid "Case 2. CanRemoveSignatory was granted to transaction creator"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:430
msgid "The purpose of revoke permission command is to revoke or dismiss given granted permission from another account in the network."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "permission was granted"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:455
msgid "Transaction creator should have previously granted this permission to a target account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:463
msgid "Purpose of set account detail command is to set key-value information for a given account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "id of account whom key-value information was set"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Key"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "key of information being set"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "`[A-Za-z0-9_]{1,64}`"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Name"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Value"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "value of corresponding key"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "≤ 4096"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Makoto"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:492
msgid "Case 1. When transaction creator wants to set account detail to his/her account and he or she has permission CanSetAccountInfo"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:494
msgid "Case 2. CanSetAccountInfo was granted to transaction creator"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:502
msgid "The purpose of set account quorum command is to set the number of signatories required to confirm the identity of a user, who creates the transaction. Use case scenario is to set the number of different users, utilizing single account, to sign off the transaction."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "ID of account to set quorum"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Quorum"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "number of signatories needed to be included with a transaction from this account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "0 < quorum ≤ public-key set up to account ≤ 128"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:59
msgid "5"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:528
msgid "When quorum is set, it is checked if invariant of **size(signatories) >= quorum** holds."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:532
msgid "Case 1. When transaction creator wants to set quorum for his/her account and he or she has permission CanRemoveSignatory"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:542
msgid "The purpose of subtract asset quantity command is the opposite of AddAssetQuantity commands — to decrease the number of assets on account of transaction creator."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "account id from which to subtract asset"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "positive amount of the asset to subtract"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "200"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:583
msgid "Creator of the transaction should have a role which has permissions for subtraction of assets"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:584
msgid "Creator of transaction subtracts account quantity in his/her account only"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:592
msgid "The purpose of transfer asset command is to share assets within the account in peer network: in the way that source account transfers assets to the target account."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Source account ID"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "ID of account to withdraw asset from"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Destination account ID"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "ID of account to send asset at"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "alex@california"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "ID of asset to transfer"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "usd#usa"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Message to attach to transfer"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Max length is 64"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "here's my money take it"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "amount of the asset to transfer"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "0 < amount < max_uint256"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "200.20"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:623
msgid "Source account has this asset in its AccountHasAsset relation [#f1]_"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:624
msgid "An amount is a positive number and asset precision is consistent with the asset definition"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:625
msgid "Source account has enough amount of asset to transfer and is not zero"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:626
msgid "Source account can transfer money, and destination account can receive money (their roles have these permissions)"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:628
msgid "https://www.ietf.org/rfc/rfc1035.txt"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:629
msgid "https://www.ietf.org/rfc/rfc1123.txt"
msgstr ""

#: ../iroha/docs/source/contribution/index.rst:4
msgid "Contents are missing for now."
msgstr ""

#: ../iroha/docs/source/api/index.rst:4
msgid "In API section we will take a look at building blocks of an application interacting with Iroha. We will overview commands and queries that the system has, and the set of client libraries encompassing transport and application layer logic."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:4
msgid "A query is a request related to certain part of World State View — the latest state of blockchain. Query cannot modify the contents of the chain and a response is returned to any client immediately after receiving peer has processed a query."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:11
msgid "The validation for all queries includes:"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:13
msgid "timestamp — shouldn't be from the past (24 hours prior to the peer time) or from the future (range of 5 minutes added to the peer time)"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:14
msgid "signature of query creator — used for checking the identity of query creator"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:15
msgid "query counter — checked to be incremented with every subsequent query from query creator"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:16
msgid "roles — depending on the query creator's role: the range of state available to query can relate to to the same account, account in the domain, to the whole chain, or not allowed at all"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:19
msgid "Get Account"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:24
msgid "Purpose of get account query is to get the state of an account."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:27
#: ../iroha/docs/source/api/queries.rst:83
#: ../iroha/docs/source/api/queries.rst:127
#: ../iroha/docs/source/api/queries.rst:171
#: ../iroha/docs/source/api/queries.rst:215
#: ../iroha/docs/source/api/queries.rst:261
#: ../iroha/docs/source/api/queries.rst:311
#: ../iroha/docs/source/api/queries.rst:360
#: ../iroha/docs/source/api/queries.rst:394
msgid "Request Schema"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:36
#: ../iroha/docs/source/api/queries.rst:92
#: ../iroha/docs/source/api/queries.rst:136
#: ../iroha/docs/source/api/queries.rst:180
#: ../iroha/docs/source/api/queries.rst:225
#: ../iroha/docs/source/api/queries.rst:271
#: ../iroha/docs/source/api/queries.rst:320
#: ../iroha/docs/source/api/queries.rst:403
msgid "Request Structure"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "account id to request its state"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:45
#: ../iroha/docs/source/api/queries.rst:101
#: ../iroha/docs/source/api/queries.rst:145
#: ../iroha/docs/source/api/queries.rst:189
#: ../iroha/docs/source/api/queries.rst:235
#: ../iroha/docs/source/api/queries.rst:281
#: ../iroha/docs/source/api/queries.rst:330
#: ../iroha/docs/source/api/queries.rst:368
#: ../iroha/docs/source/api/queries.rst:412
msgid "Response Schema"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:63
#: ../iroha/docs/source/api/queries.rst:110
#: ../iroha/docs/source/api/queries.rst:154
#: ../iroha/docs/source/api/queries.rst:198
#: ../iroha/docs/source/api/queries.rst:244
#: ../iroha/docs/source/api/queries.rst:292
#: ../iroha/docs/source/api/queries.rst:341
#: ../iroha/docs/source/api/queries.rst:377
#: ../iroha/docs/source/api/queries.rst:421
msgid "Response Structure"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "account id"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "domain where the account was created"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "morgan"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "number of signatories needed to sign the transaction to make it valid"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "0 < quorum ≤ 128"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "JSON data"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "key-value account information"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "JSON"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "{ genesis: {name: alex} }"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:75
msgid "Get Signatories"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:80
msgid "Purpose of get signatories query is to get signatories, which act as an identity of the account."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "account id to request signatories"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Keys"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "an array of public keys"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "`ed25519 <https://ed25519.cr.yp.to>`_"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:119
msgid "Get Transactions"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:124
msgid "GetTransactions is used for retrieving information about transactions, based on their hashes."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Transactions hashes"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "an array of hashes"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "array with 32 byte hashes"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "{hash1, hash2…}"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Transactions"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "an array of transactions"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Committed transactions"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "{tx1, tx2…}"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:163
msgid "Get Account Transactions"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:168
msgid "In a case when a list of transactions per account is needed, `GetAccountTransactions` query can be formed."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "account id to request transactions from"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "an array of transactions for given account"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:207
msgid "Get Account Asset Transactions"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:212
msgid "`GetAccountAssetTransactions` query returns all transactions associated with given account and asset."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "asset id in order to filter transactions containing this asset"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "jpy#japan"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "an array of transactions for given account and asset"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:253
msgid "Get Account Assets"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:258
msgid "To get the state of an asset in an account (a balance), `GetAccountAssets` query can be used."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "account id to request balance from"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "asset id to know its balance"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "identifier of asset used for checking the balance"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "account which has this balance"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Balance"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "balance of the asset"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Not less than 0"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:303
msgid "Get Asset Info"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:308
msgid "In order to know precision for given asset, and other related info in the future, such as a description of the asset, etc. user can send `GetAssetInfo` query."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "asset id to know related information"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "jpy"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "domain related to this asset"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "number of digits after comma"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "0 < precision < 256"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:352
msgid "Get Roles"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:357
msgid "To get existing roles in the system, a user can send `GetRoles` query to Iroha network."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Roles"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "array of created roles in the network"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "set of roles in the system"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "{MoneyCreator, User, Admin, …}"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:386
msgid "Get Role Permissions"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:391
msgid "To get available permissions per role in the system, a user can send `GetRolePermissions` query to Iroha network."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Role ID"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "role to get permissions for"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "existing role in the system"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "array of permissions related to the role"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "string of permissions related to the role"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "{can_add_asset_qty, …}"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:2
msgid "Account"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:4
msgid "An Iroha entity that is able to perform specified set of actions. Each account belongs to one of existing `domains <#domain>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:7
msgid "An account has some number of `roles <#role>`__ (can be none) — which is a collection of permissions. Only `grantable permissions <#grantable-permission>`__ are assigned to an account directly."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:11
msgid "Ametsuchi"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:13
msgid "Iroha storage component, which stores blocks and a state generated from blocks, called `World State View <#world-state-view>`__. There is no way for the `client <#client>`__ to directly interact with Ametsuchi."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:19
msgid "Asset"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:21
msgid "Any countable commodity or value. Each asset is related to one of existing `domains <#domain>`__. For example, an asset can represent any kind of such units - currency unit, a bar of gold, real estate unit, etc."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:27
msgid "Block"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:29
msgid "Transaction data is permanently recorded in files called blocks. Blocks are organized into a linear sequence over time (also known as the block chain) [#f1]_."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:32
msgid "Blocks are signed with the cryptographic signatures of Iroha `peers <#peer>`__, voting for this block during `consensus <#consensus>`__. Signable content is called payload, so the structure of a block looks like this:"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:36
msgid "*Outside payload*"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:38
msgid "hash — SHA3-512 hash of block protobuf payload"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:39
msgid "signatures — signatures of peers, which voted for the block during consensus round"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:41
msgid "*Inside payload*"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:43
msgid "height — a number of blocks in the chain up to the block"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:44
msgid "timestamp — Unix time (in milliseconds) of block forming by a peer"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:45
msgid "body — transactions, which successfully passed validation and consensus step"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:46
msgid "transactions quantity"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:47
msgid "previous hash of a block"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:50
msgid "Block Creator"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:52
msgid "System component that forms a block from a set of transactions that have been passed `stateless <#stateless-validation>`__ and `stateful <#stateful-validation>`__ validation for further propagation to `consensus <#consensus>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:57
msgid "Client"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:59
msgid "Any application that uses Iroha is treated as a client."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:61
msgid "A distinctive feature of Iroha is that all clients are using simple client-server abstractions when they interact with a peer network: they don't use any abstractions which are specific for blockchain-related systems. For example, in Bitcoin clients have to validate blocks, or in Fabric they need to poll several peers to make sure that a transaction was written in a block, whereas in Iroha a client interacts with any peer similarly to a single server."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:69
msgid "Command"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:71
msgid "A command is an intention to change the `state <#world-state-view>`__. For example, in order to create a new `role <#role>`__ in Iroha you have to issue `Create role <../api/commands.html#create-role>`__ command."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:76
msgid "Consensus"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:78
msgid "A consensus algorithm is a process in computer science used to achieve agreement on a single data value among distributed processes or systems. Consensus algorithms are designed to achieve reliability in a network involving multiple unreliable nodes. Solving that issue -- known as the consensus problem -- is important in distributed computing and multi-agent systems."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:85
msgid "*Consensus, as an algorithm*"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:87
msgid "An algorithm to achieve agreement on a block among peers in the network. By having it in the system, reliability is increased."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:89
msgid "*Consensus, as a component*"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:91
msgid "Preserves consistent state among the `peers <#peer>`__ within a peer network. Iroha uses own consensus algorithm called Yet Another Consensus (aka YAC). Distinctive features of this algorithm are its scalability, performance, and `Byzantine fault tolerance <https://en.wikipedia.org/wiki/Byzantine_fault_tolerance>`_. If there are missing blocks, they will be downloaded from another peer via `Synchronizer <#synchronizer>`__. Committed blocks are stored in `Ametsuchi <#ametsuchi>`__ block storage."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:99
msgid "Domain"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:101
msgid "A named abstraction for grouping `accounts <#account>`__ and `assets <#asset>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:104
msgid "Ordering Gate"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:106
msgid "Internal Iroha component that passes `transactions <#transaction>`__ from `Peer Communication Service <#peer-communication-service>`__ to `Ordering Service <#ordering-service>`__. Ordering Gate eventually recieves `proposals <#proposal>`__ from Ordering Service and sends them to `Simulator <#simulator>`__ for `stateful validation <#stateful-validation>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:112
msgid "Ordering Service"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:114
msgid "Internal Iroha component that combines several `transactions <#transaction>`__ that have been passed `stateless validation <#stateless-validation>`__ into a `proposal <#proposal>`__. Proposal creation could be triggered by one of the following events:"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:118
msgid "Time limit dedicated to transactions collection has expired."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:120
msgid "Ordering service has received the maximum amount of transactions allowed for a single proposal."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:122
msgid "Both parameters (timeout and maximum size of proposal) are configurable (check `environment-specific parameters <../guides/configuration.html#environment-specific-parameters>`_ page)."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:124
msgid "A common precondition for both triggers is that at least one transaction should reach ordering service. Otherwise, no proposal will be formed."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:128
msgid "Peer"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:130
msgid "A node that is a part of Iroha network. It participates in `consensus <#consensus>`_ process."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:134
msgid "Peer Communication Service"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:136
msgid "Internal component of Iroha - an intermediary that transmits `transaction <#transaction>`__ from `Torii <#torii>`__ to `Ordering Gate <#ordering-gate>`__. The main goal of PCS is to hide the complexity of interaction with consensus implementation."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:142
msgid "Permission"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:144
msgid "A named rule that gives the privilege to perform a command. Permission **cannot** be granted to an `account <#account>`__ directly, instead, an account has roles, which are the collection of permissions."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:149
msgid "Grantable Permission"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:151
msgid "Only grantable permission is given to an `account <#account>`__ directly. An account that holds grantable permission is allowed to perform some particular action on behalf of another account. For example, if the account a@domain1 gives the account b@domain2 a permission that it can transfer assets — then  b@domain2 can transfer assets of a@domain1 to anyone."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:159
msgid "Proposal"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:161
msgid "A set of `transactions <#transaction>`__ that have passed only `stateless validation <#stateless-validation>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:165
msgid "Verified Proposal"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:167
msgid "A set of transactions that have been passed `stateless <#stateless-validation>`__ and `stateful <#stateful-validation>`__ validation, but were not committed yet."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:171
msgid "Role"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:173
msgid "A named abstraction that holds a set of `permissions <#permission>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:176
msgid "Simulator"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:178
msgid "See `Verified Proposal Creator <#verified-proposal-creator>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:183
msgid "A request to Iroha that does **not** change the `state <#world-state-view>`__. By performing a query, a client can get request data from the state, for example a balance of his account, a history of transactions, etc."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:188
msgid "Synchronizer"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:190
msgid "Is a part of `consensus <#consensus>`__. Adds missing blocks to `peers' <#peer>`__ chains (downloads them from other peers)."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:194
msgid "Torii"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:196
msgid "⛩. Entry point for `clients <#client>`__. Uses gRPC as a transport. In order to interact with Iroha anyone can use gRPC endpoints, described in `Commands <../api/commands.html>`__ and `Queries <../api/queries.html>`__ sections, or use `client libraries <../guides/libraries.html>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:206
msgid "An ordered set of `commands <#command>`__, which is applied to the ledger atomically. Any nonvalid command within a transaction leads to rejection of the whole transaction during the validation process."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:212
msgid "Validator"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:214
msgid "There are two kinds of validation - stateless and stateful."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:217
msgid "Stateless Validation"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:219
msgid "Performed in `Torii <#torii>`__. Checks if an object is well-formed, including the signatures."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:223
msgid "Stateful Validation"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:225
msgid "Performed in `Verified Proposal Creator <#verified-proposal-creator>`__. Validates against `World State View <#world-state-view>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:229
msgid "Verified Proposal Creator"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:231
msgid "Internal Iroha component that performs `stateful validation <#stateful-validation>`_ of `transactions <#transaction>`__ contained in received `proposal <#proposal>`__. On the basis of transactions that have been passed stateful validation **verified proposal** will be created and passed to `Block Creator <#block-creator>`__. All the transactions that have not passed stateful validation will be dropped and not included in a verified proposal."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:239
msgid "World State View"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:241
msgid "WSV reflects the current state of the system, can be considered as a snapshot. For example, WSV holds information about an amount of `assets <#asset>`__ that an `account <#account>`__ has at the moment but does not contain any info history of `transaction <#transaction>`__ flow."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:246
msgid "https://en.bitcoin.it/wiki/Block"
msgstr ""

#: ../iroha/docs/source/core_concepts/index.rst:8
msgid "Docs are constantly updated and this section is going to be improved. Check glossary page while contents are elaborated."
msgstr ""

#: ../iroha/docs/source/guides/libraries.rst:2
msgid "Client Libraries"
msgstr ""

#: ../iroha/docs/source/maintenance/index.rst:9
msgid "Contents are missing for now. Please check deploy/ansible folder and README.md file in it."
msgstr ""

#: ../iroha/docs/source/index.rst:4
msgid "2018-03-30"
msgstr ""

#: ../iroha/docs/source/overview.rst:7
msgid "Simple deployment and maintenance"
msgstr ""

#: ../iroha/docs/source/overview.rst:8
msgid "Variety of libraries for developers"
msgstr ""

#: ../iroha/docs/source/overview.rst:9
msgid "Role-based access control"
msgstr ""

#: ../iroha/docs/source/overview.rst:10
msgid "Modular design, driven by command–query separation principle"
msgstr ""

#: ../iroha/docs/source/overview.rst:11
msgid "Assets and identity management"
msgstr ""

#: ../iroha/docs/source/overview.rst:13
msgid "In our quality model, we focus on and continuously improve:"
msgstr ""

#: ../iroha/docs/source/overview.rst:15
msgid "Reliability (fault tolerance, recoverability)"
msgstr ""

#: ../iroha/docs/source/overview.rst:16
msgid "Performance Efficiency (in particular time-behavior and resource utilization)"
msgstr ""

#: ../iroha/docs/source/overview.rst:17
msgid "Usability (learnability, user error protection, appropriateness recognisability)"
msgstr ""

#: ../iroha/docs/source/overview.rst:20
msgid "Where can Iroha be used?"
msgstr ""

#: ../iroha/docs/source/overview.rst:22
msgid "Hyperledger Iroha is a general purpose permissioned blockchain system that can be used to manage digital assets, identity, and serialized data. This can be useful for applications such as interbank settlement, central bank digital currencies, payment systems, national IDs, and logistics, among others."
msgstr ""

#: ../iroha/docs/source/overview.rst:25
msgid "For a detailed description please check our `Use Case Scenarios section <http://iroha.readthedocs.io/en/latest/use_cases/>`_."
msgstr ""

#: ../iroha/docs/source/overview.rst:30
msgid "Bitcoin and Ethereum are designed to be permissionless ledgers where anyone can join and access all the data. They also have native cryptocurrencies that are required to interact with the systems."
msgstr ""

#: ../iroha/docs/source/overview.rst:33
msgid "In Iroha, there is no native cryptocurrency. Instead, to meet the needs of enterprises, system interaction is permissioned, meaning that only people with requisite access can interact with the system. Additionally, queries are also permissioned, such that access to all the data can be controlled."
msgstr ""

#: ../iroha/docs/source/overview.rst:36
msgid "One major difference from Ethereum, in particular, is that Hyperledger Iroha allows users to perform common functions, such as creating and transferring digital assets, by using prebuilt commands that are in the system. This negates the need to write cumbersome and hard to test smart contracts, enabling developers to complete simple tasks faster and with less risk."
msgstr ""

#: ../iroha/docs/source/overview.rst:42
msgid "Iroha has a novel, Byzantine fault tolerant consensus algorithm (called YAC [#f1]_) that is high-performance and allows for finality of transactions with low latency. Other frameworks either focus more on probabilistic consensus algorithms, such as Nakamoto Consensus, or sacrifice Byzantine fault tolerance."
msgstr ""

#: ../iroha/docs/source/overview.rst:45
msgid "Also, Iroha's built-in commands are a major benefit compared to other platforms, since it is very simple to do common tasks such as create digital assets, register accounts, and transfer assets between accounts. Moreover, it narrows the attack vector, improving overall security of the system, as there are less things to fail."
msgstr ""

#: ../iroha/docs/source/overview.rst:48
msgid "Finally, Iroha is the only ledger that has a robust permission system, allowing permissions to be set for all commands, queries, and joining of the network."
msgstr ""

#: ../iroha/docs/source/overview.rst:50
msgid "Yet Another Consensus"
msgstr ""

#: ../iroha/docs/source/overview.rst:55
msgid "As per the latest review date of these docs, according to `Huawei Caliper <https://github.com/hyperledger/caliper>`_ testing tool, Iroha is capable of processing 45 transactions per second. Theoretically, this is not even close to the limit of the system, and we will continue constant optimizations in order to improve stability and performance."
msgstr ""

#: ../iroha/docs/source/overview.rst:60
msgid "In order to bring the power of blockchain into your application, you should think first of how it is going to interface with Iroha peers. A good start is to check `Core Concepts section <http://iroha.readthedocs.io/en/latest/core_concepts/>`_, explaining what exactly is a transaction and query, and how users of your application are supposed to interact with it."
msgstr ""

#: ../iroha/docs/source/overview.rst:63
msgid "We also have several client libraries which provide tools for developers to form building blocks, such as signatures, commands, send messages to Iroha peers and check the status."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:2
msgid "Android Library"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:4
msgid "The library, in essence, is a set of Java interfaces and binary libraries compiled for different architectures. Supported architectures are *arm, x86, x86_64*."
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:5
msgid "Where to Get"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:9
msgid "There are two ways to get Iroha library for Android:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:11
msgid "Grab via Gradle (see details in the section `Importing the Library from jcenter`_)"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:17
msgid "Compile the library on your own."
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:44
msgid "Both options are described in the following sections."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:22
msgid "Manual Build"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:24
msgid "The guide was tested on systems running Ubuntu 16.04 and macOS."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:30
msgid "Android NDK"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:30
msgid "Please `download <https://developer.android.com/ndk/downloads/index.html>`__ and unpack NDK to any suitable folder."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:33
msgid "Automake, Bison, Cmake"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:13
#: ../iroha/docs/source/guides/libraries/python.rst:63
msgid "Please refer to the page `Installing Dependencies <dependencies.html>`__ to get installation recipes for the tools."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:36
msgid "Building the Library"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:38
msgid "All you need now is to download `build script <https://github.com/hyperledger/iroha/blob/develop/shared_model/packages/android/android-build.sh>`__ ``android-build.sh`` to any empty folder and launch it there."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:41
msgid "Launch parameters are listed in the table below."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:44
msgid "Position"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:44
msgid "Required"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:44
msgid "Parameter Name"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:44
msgid "Possible Values"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:46
msgid "1"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:46
#: ../iroha/docs/source/guides/libraries/android.rst:49
#: ../iroha/docs/source/guides/libraries/android.rst:52
#: ../iroha/docs/source/guides/libraries/android.rst:55
msgid "Yes"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:46
msgid "**Platform Name**"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:46
msgid "Name of the target platform for binary part of the library."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:46
msgid "``arm64-v8a``, ``armeabi-v7a``, ``armeabi``, ``x86``, ``x86_64``"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:49
msgid "**Android API Level**"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:49
msgid "API level supported by your NDK. See the link under the table for details."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:49
msgid "``27`` for android-ndk-r16b"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:52
msgid "3"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:52
msgid "**Android NDK Path**"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:52
msgid "Full path to unpacked NDK. Please ensure that path does not contain spaces."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:52
msgid "``/home/user/lib/android-ndk-r16b``"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:55
msgid "4"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:55
msgid "**Java Package Name**"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:55
msgid "Package name that will be used for Java interfaces generation. Note that the binary also depends on chosen package name."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:55
msgid "``jp.co.soramitsu.iroha.android``"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:59
msgid "No"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:59
msgid "**Build Type**"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:59
msgid "Defines build mode of binary part of the library. ``Release`` is the default option."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:59
msgid "``Debug`` or ``Release``"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:64
msgid "`Android API levels <https://developer.android.com/guide/topics/manifest/uses-sdk-element.html#ApiLevels>`__"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:66
msgid "Please use the same root part of Java package name for library build as you use for your Android project. For example, your project is located in a package called ``com.mycompany.androidapp``, so please consider to build the library in a package, which name starts with ``com.mycompany.androidapp`` (e.g. ``com.mycompany.androidapp.iroha``)."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:70
msgid "A couple of launch commands examples:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:80
msgid "Build artefacts will be collected in ``lib`` directory near the script ``android-build.sh``. There will be two files - an archive ``bindings.zip`` and ``libirohajava.so``."
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:51
msgid "How to Use/Import"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:88
msgid "Importing the Library from jcenter"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:90
msgid "The easiest way to use Irohalib for Android is to import the library dependency from `jcenter <https://bintray.com/bulatmukhutdinov/maven/iroha-android-bindings>`__."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:92
msgid "All you need to do is a simple set of four steps:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:94
msgid "Add to your ``build.gradle`` file the following line:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:100
msgid "Copy the latest version of ``*.proto`` files from ``develop`` branch of Iroha `repository <https://github.com/hyperledger/iroha/tree/develop/schema>`__ into ``app/src/main/proto/`` folder inside your project in Android Studio."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:103
msgid "The resulting directory structure should look like as follows:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:126
msgid "Create additional directories ``app/src/main/proto/google/protobuf/`` and place there a file called ``empty.proto`` with the following contents:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:141
msgid "Add ``protobuf`` and ``grpc`` dependecies and protobuf configuration block into your ``build.gradle`` file."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:186
msgid "How to Use Manually Built Library"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:188
msgid "Create directory structure inside your Android project according to the package name of build library. Put there all the ``.java`` files from ``bindings.zip`` archive. For example, the path could be ``app/src/main/java/com/mycompany/iroha`` if you built the library with ``com.mycompany.iroha`` package name."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:193
msgid "Create directory ``app/src/main/jniLibs/<platform>`` where ``<platform>`` is the name of target platform (e.g. ``arm64-v8a``). Put there ``libirohajava.so``. Repeat this step for all required platforms (in this case you need to build the library for each platform)."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:197
msgid "Repeat steps 2-4 from the previous section `Importing the Library from jcenter`_."
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:102
msgid "Example Code"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:203
msgid "Explore ``bindings`` branch of `iroha-android <https://github.com/hyperledger/iroha-android/tree/bindings>`__ repository to get source code and view sample application."
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:2
msgid "Java Library"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:7
msgid "Java 6"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:8
msgid "Gradle"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:58
msgid "Build Process"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:59
msgid "Clone Iroha repository"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:20
msgid "For the latest version checkout a ``develop`` branch by adding ``-b develop`` parameter."
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:23
msgid "Now we need to build our Java native library. Run ``example/java/build_library.sh``, which will take care of it."
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:31
msgid "``build_library.sh`` script creates a ``dist`` folder with files, needed in :ref:`java-how-to-use` section."
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:37
msgid "How to Use"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:39
msgid "There are two ways of adding the Java library to your project:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:41
msgid "Import Java bindings through Maven Central"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:42
msgid "Compile Java bindings manually"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:47
msgid "Import Java Bindings from Maven Central"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:49
msgid "First of all, you need to copy ``example/java/dist/libirohajava.jnilib`` to the root folder of your project."
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:56
msgid "If you use **Gradle**, add the following line to your ``build.gradle`` file:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:58
#: ../iroha/docs/source/guides/libraries/java.rst:98
msgid "build.gradle"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:65
#: ../iroha/docs/source/guides/libraries/java.rst:114
msgid "pom.xml"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:75
msgid "Set the latest version number from our `Maven repository <https://mvnrepository.com/artifact/jp.co.soramitsu/iroha>`_"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:79
msgid "Compiling Java Bindings Manually"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:81
msgid "Java bindings were compiled with ``example/java/build_library.sh`` in `Build Process` section. You need to copy ``example/java/dist/libirohajava.jnilib`` to the root folder of your project:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:89
msgid "If you use **Gradle**, you need to copy ``example/java/dist/iroha_lib.jar`` to the ``libs`` folder of your project"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:96
msgid "Then please add the following to your ``build.gradle`` file:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:112
msgid "After it please add this to your ``pom.xml``:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:126
msgid "Explore ``example/java/TransactionExample.java`` file to get an idea of how to work with a library."
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:81
msgid "To run this example, you need an Iroha node up and running. Please check out :ref:`getting-started` if you want to learn how to start it."
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:85
msgid "Running the Example"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:136
msgid "To start the example, you need to build the example:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:96
msgid "Now, to run this example please write:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:2
msgid "Node.js Library"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:3
msgid "Please note that Node.js library is under heavy testing now and problems `might` occur. Don't hesitate to report them to us."
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:6
msgid "There are two main ways of obtaining the Node.js library. If you are a happy macOS or Linux user, you can install it `through NPM <#installing-through-npm>`_. If your system is not yet supported or you want to try the latest version, you can `build this library manually <#building-manually>`_."
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:14
msgid "Node.js (>=7) (you can try using lower versions though)."
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:17
msgid "Installing Through NPM"
msgstr "NPMを使ってインストールする"

#: ../iroha/docs/source/guides/libraries/nodejs.rst:18
msgid "If you are a happy macOS or Linux user, you can install the library from `NPM repository <https://www.npmjs.com/package/iroha-lib>`_ using NPM"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:25
msgid "Now you can import it in your project"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:32
msgid "Building Manually"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:33
msgid "You need this section if you want to build iroha-lib manually for example if your architecture/OS is not supported yet."
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:38
msgid "CMake (>=3.8.2)"
msgstr "CMake (>=3.8.2)"

#: ../iroha/docs/source/guides/libraries/nodejs.rst:39
msgid "Protobuf (>=3.5.1)"
msgstr "Protobuf (>=3.5.1)"

#: ../iroha/docs/source/guides/libraries/nodejs.rst:40
msgid "Boost (>=1.65.1)"
msgstr "Boost (>=1.65.1)"

#: ../iroha/docs/source/guides/libraries/nodejs.rst:42
msgid "macOS users can install dependencies with following commands:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:50
msgid "If you have SWIG already installed, you **MUST** install patched 3.0.12 version instead using `this patch <https://patch-diff.githubusercontent.com/raw/swig/swig/pull/968.patch>`_. The current version of SWIG doesn't support Node.js versions higher than 6. Also you can just delete the global installed SWIG and iroha will pull and build it automatically."
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:65
msgid "Go to the NPM package directory and start the build process"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:72
msgid "That's all. You can use the library now."
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:76
msgid "Explore ``example/node/index.js`` file to get an idea of how to work with a library."
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:86
msgid "To start the example, you need to install all its dependencies (basically ``iroha-lib``)"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:93
msgid "if you have built the library manually, please change import paths to ``path-to-iroha/shared_model/packages/javascript`` in index.js"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:2
msgid "Python Library"
msgstr "Pythonライブラリー"

#: ../iroha/docs/source/guides/libraries/python.rst:7
msgid "There are two ways to get Iroha library for Python: via pip and manual compilation from source code. The installation via pip do the same steps as manual compilation so for both of them you need to install all of the prerequisites."
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:13
msgid "CMake, git, g++, boost, swig, protobuf, python"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:16
msgid "Install Iroha Python Libraries"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:18
msgid "Via PIP"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:24
msgid "For the latest version"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:30
msgid "Source code"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:37
msgid "For the latest version checkout to develop branch by adding *-b develop* parameter."
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:48
msgid "After this you can find Iroha python library in **iroha/build/shared_model/bindings** folder, where you have previously cloned repository."
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:54
msgid "Compile Protobuf Modules of Iroha from Schema Files"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:56
msgid "Iroha communicates with users through protobuf messages. In order to send transactions and queries to Iroha node you need to get python module for generating protobuf messages. First of all you need to clone schema folder of Iroha repository. If you have already cloned Iroha repository in the previous step, just use schema folder from there."
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:63
msgid "protobuf, pip"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:66
msgid "Building Protobuf Files"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:81
msgid "Protobuf files can be found in **iroha-schema** folder ('\\*_pb2\\*.py' files)"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:83
msgid "In order to specify Iroha libraries location:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:91
msgid "Import Iroha and all of the protobuf modules that you need:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:106
msgid "Work with byte arrays is different in Python 2 and Python 3. Due to this fact, the work with hashes and blobs is different in the examples. Given examples work fine with both versions of Python."
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:108
msgid "Import Iroha and schema classes, generated from Iroha protobuf:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:120
msgid "Get Iroha objects:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:130
msgid "Read public and private keys:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:138
msgid "Print transaction status with synchronous simple call:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:174
msgid "Or streaming call:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:186
msgid "Send transactions to Iroha:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:206
msgid "Send query to Iroha and receive a responce:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:228
msgid "Create domain and asset:"
msgstr "ドメイン及びアセットの発行"

#: ../iroha/docs/source/guides/libraries/python.rst:241
msgid "Create asset quantity:"
msgstr "アセット量の増加"

#: ../iroha/docs/source/guides/libraries/python.rst:253
msgid "Create account:"
msgstr "アカウントの作成"

#: ../iroha/docs/source/guides/libraries/python.rst:267
msgid "Send asset:"
msgstr "アセットの送金"

#: ../iroha/docs/source/guides/libraries/python.rst:279
msgid "Get asset info:"
msgstr "アセット情報の読み込み"

#: ../iroha/docs/source/guides/libraries/python.rst:301
msgid "Get account asset:"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:2
#: ../iroha/docs/source/guides/build.rst:145
msgid "Building Iroha"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:4
msgid "In this guide we will learn how to install all dependencies, required to build Iroha and how to build it."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:8
msgid "Preparing the Environment"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:10
msgid "In order to successfully build Iroha, we need to configure the environment. There are several ways to do it and we will describe all of them."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:13
msgid "Currently, we support Unix-like systems (we are basically targeting popular Linux distros and macOS). If you happen to have Windows or you don't want to spend time installing all dependencies you might want to consider using Docker environment. Also, Windows users might consider using `WSL <https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux>`_"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:19
msgid "Having troubles? Check FAQ section or communicate to us directly, in case you were stuck on something. We don't expect this to happen, but some issues with an environment are possible."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:25
msgid "You don't need Docker to run Iroha, it is just one of the possible choices."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:28
msgid "First of all, you need to install ``docker`` and ``docker-compose``. You can read how to install it on a `Docker's website <https://www.docker.com/community-edition/>`_"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:32
msgid "Please, use the latest available docker daemon and docker-compose."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:34
msgid "Then you should clone the `Iroha repository <https://github.com/hyperledger/iroha>`_ to the directory of your choice."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:45
msgid "After it, you need to run the development environment. Run the ``scripts/run-iroha-dev.sh`` script:"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:52
msgid "Please make sure that Docker is running before executing the script. macOS users could find a Docker icon in system tray, Linux user could use ``systemctl start docker``"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:56
msgid "After you execute this script, following things happen:"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:58
msgid "1. The script checks if you don't have containers with Iroha already running. Successful completion finishes with the new container shell. 2. The script will download ``iroha-docker-develop`` and ``postgres`` images. ``iroha-docker-develop`` image contains all development dependencies and is based on top of ``ubuntu:16.04``. ``postgres`` image is required for starting and running Iroha. 3. Two containers are created and launched. 4. The user is attached to the interactive environment for development and testing with ``iroha`` folder mounted from the host machine. Iroha folder is mounted to ``/opt/iroha`` in Docker container."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:69
msgid "Now your are ready to build Iroha! Please go to `Building Iroha` section."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:72
msgid "Linux"
msgstr "Linux"

#: ../iroha/docs/source/guides/dependencies.rst:165
msgid "Boost"
msgstr "Boost"

#: ../iroha/docs/source/guides/build.rst:77
msgid "Iroha requires Boost of at least 1.65 version. To install Boost libraries (``libboost-all-dev``), use `current release <http://www.boost.org/users/download/>`_ from Boost webpage. The only dependencies are system and filesystem, so use ``./bootstrap.sh --with-libraries=system,filesystem`` when you are building the project."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:85
msgid "Other Dependencies"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:87
msgid "To build Iroha, you need following packages:"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:89
msgid "``build-essential`` ``automake`` ``libtool`` ``libssl-dev`` ``zlib1g-dev`` ``libc6-dbg`` ``golang`` ``git`` ``tar`` ``gzip`` ``ca-certificates`` ``wget`` ``curl`` ``file`` ``unzip`` ``python`` ``cmake``"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:93
msgid "Use this code to install dependencies on Debian-based Linux distro."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:106
msgid "If you are willing to actively develop Iroha and to build shared libraries, please consider installing the `latest release <https://cmake.org/download/>`_ of CMake."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:111
msgid "macOS"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:113
msgid "If you want to build it from scratch and actively develop it, please use this code to install all dependencies with Homebrew."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:121
msgid "To install the Homebrew itself please run"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:123
msgid "``ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/homebrew/install/master/install)\"``"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:129
msgid "Cloning the Repository"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:130
msgid "Clone the `Iroha repository <https://github.com/hyperledger/iroha>`_ to the directory of your choice."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:138
msgid "If you have installed the prerequisites with Docker, you don't need to clone Iroha again, because when you run ``run-iroha-dev.sh`` it attaches to Iroha source code folder. Feel free to edit source code files with your host environment and build it within docker container."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:146
msgid "To build Iroha, use those commands"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:152
msgid "Alternatively, you can use these shorthand parameters (they are not documented though)"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:160
msgid "On macOS ``$(nproc)`` variable does not work. Check the number of logical cores with ``sysctl -n hw.ncpu`` and put it explicitly in the command above, e.g. ``cmake --build build -- -j4``"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:165
msgid "CMake Parameters"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:167
msgid "We use CMake to build platform-dependent build files. It has numerous flags for configuring the final build. Note that besides the listed parameters cmake's variables can be useful as well. Also as long as this page can be deprecated (or just not complete) you can browse custom flags via ``cmake -L``, ``cmake-gui``, or ``ccmake``."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:173
msgid "You can specify parameters at the cmake configuring stage (e.g cmake -DTESTING=ON)."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:177
msgid "Main Parameters"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:180
#: ../iroha/docs/source/guides/build.rst:197
msgid "Possible values"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:180
#: ../iroha/docs/source/guides/build.rst:197
msgid "Default"
msgstr "デフォルト"

#: ../iroha/docs/source/guides/build.rst:182
msgid "TESTING"
msgstr "TESTING"

#: ../iroha/docs/source/guides/build.rst:182
#: ../iroha/docs/source/guides/build.rst:199
msgid "ON/OFF"
msgstr "ON/OFF"

#: ../iroha/docs/source/guides/build.rst:182
#: ../iroha/docs/source/guides/build.rst:199
msgid "ON"
msgstr "ON"

#: ../iroha/docs/source/guides/build.rst:182
msgid "Enables or disables build of the tests"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:184
msgid "BENCHMARKING"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:184
#: ../iroha/docs/source/guides/build.rst:186
#: ../iroha/docs/source/guides/build.rst:188
#: ../iroha/docs/source/guides/build.rst:190
#: ../iroha/docs/source/guides/build.rst:201
#: ../iroha/docs/source/guides/build.rst:203
#: ../iroha/docs/source/guides/build.rst:205
#: ../iroha/docs/source/guides/build.rst:207
msgid "OFF"
msgstr "OFF"

#: ../iroha/docs/source/guides/build.rst:184
msgid "Enables or disables build of the Google Benchmarks library"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:186
msgid "COVERAGE"
msgstr "COVERAGE"

#: ../iroha/docs/source/guides/build.rst:186
msgid "Enables or disables lcov setting for code coverage generation"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:188
msgid "SWIG_PYTHON"
msgstr "SWIG_PYTHON"

#: ../iroha/docs/source/guides/build.rst:188
msgid "Enables of disables the library building and Python bindings"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:190
msgid "SWIG_JAVA"
msgstr "SWIG_JAVA"

#: ../iroha/docs/source/guides/build.rst:190
msgid "Enables of disables the library building and Java bindings"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:194
msgid "Packaging Specific Parameters"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:199
msgid "ENABLE_LIBS_PACKAGING"
msgstr "ENABLE_LIBS_PACKAGING"

#: ../iroha/docs/source/guides/build.rst:199
msgid "Enables or disables all types of packaging"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:201
msgid "PACKAGE_ZIP"
msgstr "PACKAGE_ZIP"

#: ../iroha/docs/source/guides/build.rst:201
msgid "Enables or disables zip packaging"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:203
msgid "PACKAGE_TGZ"
msgstr "PACKAGE__TGZ"

#: ../iroha/docs/source/guides/build.rst:203
msgid "Enables or disables tar.gz packaging"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:205
msgid "PACKAGE_RPM"
msgstr "PACKAGE_RPM"

#: ../iroha/docs/source/guides/build.rst:205
msgid "Enables or disables rpm packaging"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:207
msgid "PACKAGE_DEB"
msgstr "PACKAGE_DEB"

#: ../iroha/docs/source/guides/build.rst:207
msgid "Enables or disables deb packaging"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:211
msgid "Running Tests (optional)"
msgstr "テストの実行（オプショナル）"

#: ../iroha/docs/source/guides/build.rst:213
msgid "After building Iroha, it is a good idea to run tests to check the operability of the daemon. You can run tests with this code:"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:220
msgid "Alternatively, you can run following command in the ``build`` folder"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:227
msgid "Some of the tests will fail without PostgreSQL storage running, so if you are not using ``scripts/run-iroha-dev.sh`` script please run Docker container or create a local connection with following parameters:"
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:2
msgid "Installing Dependencies"
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:4
msgid "This page contains references and guides about installation of various tools you may need during build of different targets of Iroha project."
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:7
msgid "Please note that most likely you do not need to install all the listed tools. Some of them are required only for building specific versions of Iroha Client Library."
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:11
msgid "Automake"
msgstr "Automake"

#: ../iroha/docs/source/guides/dependencies.rst:14
#: ../iroha/docs/source/guides/dependencies.rst:26
#: ../iroha/docs/source/guides/dependencies.rst:40
#: ../iroha/docs/source/guides/dependencies.rst:69
#: ../iroha/docs/source/guides/dependencies.rst:81
#: ../iroha/docs/source/guides/dependencies.rst:124
#: ../iroha/docs/source/guides/dependencies.rst:168
#: ../iroha/docs/source/guides/dependencies.rst:191
msgid "Installation on Ubuntu"
msgstr "Ubuntuでインストール"

#: ../iroha/docs/source/guides/dependencies.rst:23
msgid "Bison"
msgstr "Bison"

#: ../iroha/docs/source/guides/dependencies.rst:35
msgid "CMake"
msgstr "CMake"

#: ../iroha/docs/source/guides/dependencies.rst:37
msgid "Minimum required version is 3.8, but we recommend to install the latest available version (3.10.3 at the moment)."
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:42
msgid "Since Ubuntu repositories contain unsuitable version of CMake, you need to install the new one manually. Here is how to build and install CMake from sources."
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:57
#: ../iroha/docs/source/guides/dependencies.rst:101
#: ../iroha/docs/source/guides/dependencies.rst:144
#: ../iroha/docs/source/guides/dependencies.rst:181
#: ../iroha/docs/source/guides/dependencies.rst:205
#: ../iroha/docs/source/guides/dependencies.rst:223
msgid "Installation on macOS"
msgstr "MacOSでインストールする"

#: ../iroha/docs/source/guides/dependencies.rst:66
msgid "Git"
msgstr "Git"

#: ../iroha/docs/source/guides/dependencies.rst:78
msgid "Python"
msgstr "Python"

#: ../iroha/docs/source/guides/dependencies.rst:83
#: ../iroha/docs/source/guides/dependencies.rst:103
#: ../iroha/docs/source/guides/dependencies.rst:126
#: ../iroha/docs/source/guides/dependencies.rst:146
msgid "For Python 2:"
msgstr "Python 2:"

#: ../iroha/docs/source/guides/dependencies.rst:92
#: ../iroha/docs/source/guides/dependencies.rst:112
#: ../iroha/docs/source/guides/dependencies.rst:135
#: ../iroha/docs/source/guides/dependencies.rst:155
msgid "For Python 3:"
msgstr "Python 3:"

#: ../iroha/docs/source/guides/dependencies.rst:121
msgid "PIP"
msgstr "PIP"

#: ../iroha/docs/source/guides/dependencies.rst:188
msgid "SWIG"
msgstr "SWIG"

#: ../iroha/docs/source/guides/dependencies.rst:220
msgid "Protobuf"
msgstr "Protobuf"

