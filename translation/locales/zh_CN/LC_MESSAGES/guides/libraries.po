msgid ""
msgstr ""
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: POEditor.com\n"
"Project-Id-Version: Hyperledger Iroha Documentation\n"
"Language: zh-CN\n"

#: ../iroha/docs/source/guides/configuration.rst:2
msgid "Configuration"
msgstr "配置"

#: ../iroha/docs/source/guides/configuration.rst:4
msgid "In this section we will understand how to configure Iroha. Let's take a look at ``example/config.sample``"
msgstr "本章我们开始理解如何配置 Iroha ，让我们看看example/config.sample。"

#: ../iroha/docs/source/guides/configuration.rst:21
msgid "As you can see, configuration file is a valid ``json`` structure. Let's go line-by-line and understand what every parameter means."
msgstr "正如您所见，配置文件是json结构。让我们一行一行理解这些参数的意义。"

#: ../iroha/docs/source/guides/configuration.rst:25
msgid "Deployment-specific parameters"
msgstr "部署参数"

#: ../iroha/docs/source/guides/configuration.rst:27
msgid "``block_store_path`` sets path to the folder where blocks are stored."
msgstr "block_store_path: 配置存放区块(blocks)的文件夹的路径。"

#: ../iroha/docs/source/guides/configuration.rst:28
msgid "``torii_port`` sets the port for external communications. Queries and transactions are sent here."
msgstr "torii_port: 配置外部通信端口。请求和交易被发送到这里。"

#. confused, will do it later.
#: ../iroha/docs/source/guides/configuration.rst:30
msgid "``internal_port`` sets the port for internal communications: ordering service, consensus and block loader."
msgstr "internal_port: 配置内部通信端口——请求服务，共识，限制下载。\n"
""

#: ../iroha/docs/source/guides/configuration.rst:32
msgid "``pg_opt`` is used for setting credentials of PostgreSQL: hostname, port, username and password."
msgstr "\"pg_opt\" 用来配置 PostgreSQL 的相关凭据：主机、端口、用户名和密码。"

#: ../iroha/docs/source/guides/configuration.rst:36
msgid "Environment-specific parameters"
msgstr "环境参数"

#: ../iroha/docs/source/guides/configuration.rst:38
msgid "``max_proposal_size`` is the maximum amount of transactions that can be in one proposal, and as a result in a single block as well. So, by changing this value you define the size of potential block. For a starter you can stick to ``10``. However, we recommend to increase this number if you have a lot of transactions per second."
msgstr "max_proposal_size:在一次请求中的最大交易额，也是单个区块的大小。因此，通过改变这个数值大小，你可以改变区块大小。一开始可以定为10。但是，如果你每秒交易很多，我们建议增加这个数值。"

#: ../iroha/docs/source/guides/configuration.rst:43
msgid "``proposal_delay`` is a maximum waiting time in milliseconds before emitting a new proposal. Proposal is emitted if the ``max_proposal_size`` is reached or ``proposal_delay`` milliseconds had passed. You can start with ``5000`` and increase this number if you have a lot of transactions per second since it is likely that with an intense load (over 100 transactions per second) and low value of ``proposal_delay`` there will be many proposals of small size."
msgstr ""

#: ../iroha/docs/source/guides/configuration.rst:50
msgid "``vote_delay`` is a waiting time in milliseconds before sending vote to the next peer. Optimal value depends heavily on the amount of Iroha peers in the network (higher amount of nodes requires longer ``vote_delay``). We recommend to start with 100-1000 milliseconds."
msgstr ""

#: ../iroha/docs/source/guides/configuration.rst:54
msgid "``load_delay`` is a waiting time in milliseconds before loading committed block from next peer. We recommend setting this number the same value as ``proposal_delay`` or even higher."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:2
msgid "Commands"
msgstr "指令"

#: ../iroha/docs/source/api/commands.rst:8
msgid "Add asset quantity"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:49
msgid "Add peer"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:88
msgid "Add signatory"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:126
msgid "Append role"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:161
msgid "Create account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:198
msgid "Create asset"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:239
msgid "Create domain"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:274
msgid "Create role"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:309
msgid "Detach role"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:344
msgid "Grant permission"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:419
msgid "Revoke permission"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:452
msgid "Set account detail"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:493
msgid "Set account quorum"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:533
msgid "Subtract asset quantity"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:572
msgid "Transfer asset"
msgstr ""

#: ../iroha/docs/source/api/cpp_library.rst:2
msgid "С++ library"
msgstr ""

#: ../iroha/docs/source/api/cpp_library.rst:4
msgid "This section only contains code reference (autogenerated docs are possible with a description of arguments and return values)"
msgstr ""

#: ../iroha/docs/source/api/index.rst:2
msgid "Iroha API reference"
msgstr ""

#: ../iroha/docs/source/api/index.rst:4
msgid "In API section we will take a look at building blocks of an application interacting with Iroha. We will overview commands and queries that the system have, and the set of client libraries encompassing transport and application layer logic."
msgstr ""

#: ../iroha/docs/source/index.rst:16
msgid "Table of contents"
msgstr "目录"

#: ../iroha/docs/source/api/java_library.rst:2
msgid "Java library"
msgstr ""

#: ../iroha/docs/source/api/nodejs_library.rst:2
msgid "NodeJS library"
msgstr ""

#: ../iroha/docs/source/api/objc_library.rst:2
msgid "Objective-C library"
msgstr ""

#: ../iroha/docs/source/api/python_library.rst:2
msgid "Python library"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:2
msgid "Queries"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:5
msgid "Get account"
msgstr "获取账户"

#: ../iroha/docs/source/api/queries.rst:8
msgid "Get signatories"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:11
msgid "Get transactions"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:14
msgid "Get account transactions"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:17
msgid "Get account asset transactions"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:20
msgid "Get account assets"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:23
msgid "Get asset info"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:26
msgid "Get roles"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:29
msgid "Get role permissions"
msgstr ""

#: ../iroha/docs/source/api/swift_library.rst:2
msgid "Swift library"
msgstr ""

#: ../iroha/docs/source/contribution/index.rst:2
msgid "Contribution"
msgstr ""

#: ../iroha/docs/source/contribution/index.rst:7
msgid "Code of conduct"
msgstr ""

#: ../iroha/docs/source/contribution/index.rst:10
msgid "Process"
msgstr ""

#: ../iroha/docs/source/contribution/index.rst:13
msgid "Communication"
msgstr ""

#: ../iroha/docs/source/contribution/index.rst:16
msgid "Issue tracker"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:2
msgid "A term"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:5
msgid "B term"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:8
msgid "C term"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:10
msgid "Remaining parts (WSV, etc.)"
msgstr ""

#: ../iroha/docs/source/core_concepts/index.rst:2
msgid "Core concepts"
msgstr ""

#: ../iroha/docs/source/core_concepts/index.rst:4
msgid "Why Iroha runs in a network? How to understand the objects inside and outside the system? How peers in the network collaborate and decide which data to put into the blockchain? We will look through the basics of Iroha in this section."
msgstr ""

#: ../iroha/docs/source/core_concepts/index.rst:10
msgid "Is having an account in Iroha means being a user?"
msgstr ""

#: ../iroha/docs/source/core_concepts/index.rst:14
msgid "Are there differences compared to client-server systems?"
msgstr ""

#: ../iroha/docs/source/core_concepts/index.rst:18
msgid "Assets, domains and other internal objects"
msgstr ""

#: ../iroha/docs/source/core_concepts/index.rst:22
msgid "Does everyone have to maintain their own peer?"
msgstr ""

#: ../iroha/docs/source/core_concepts/index.rst:26
msgid "How peers communicate with each other?"
msgstr ""

#: ../iroha/docs/source/core_concepts/index.rst:30
#: ../iroha/docs/source/core_concepts/index.rst:32
msgid "ER model"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:220
msgid "Transaction"
msgstr ""

#: ../iroha/docs/source/core_concepts/index.rst:38
msgid "Transaction statuses"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:173
msgid "Query"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:9
msgid "Validation"
msgstr ""

#: ../iroha/docs/source/core_concepts/index.rst:47
msgid "Stateless"
msgstr ""

#: ../iroha/docs/source/core_concepts/index.rst:50
msgid "Stateful"
msgstr ""

#: ../iroha/docs/source/core_concepts/index.rst:12
msgid "Glossary"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:4
msgid "Getting Started"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:6
msgid "In this guide, we will create a very basic Iroha network, launch it, create a couple of transactions, and check the data written in the ledger. To keep things simple, we will use Docker."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:10
msgid "Ledger is the synonym for a blockchain, and Hyperledger Iroha is known also as Distributed Ledger Technology — which in essence is the same as \"blockchain framework\". You can check the rest of terminology used in the Glossary section."
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:10
#: ../iroha/docs/source/guides/libraries/python.rst:60
msgid "Prerequisites"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:17
msgid "For this guide, you need a computer running Unix-like system with ``docker`` installed. You can read how to install it on a `Docker's website <https://www.docker.com/community-edition/>`_."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:21
msgid "Please note that you can use Iroha without ``docker`` as well. You can read about it in other parts of documentation."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:25
msgid "Starting Iroha Node"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:32
msgid "Creating a Docker Network"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:33
msgid "To operate, Iroha requires a ``PostgreSQL`` database. Let's start with creating a Docker network, so containers for Postgres and Iroha can run on the same virtual network and successfully communicate. In this guide we will call it ``iroha-network``, but you can use any name. In your terminal write following command:"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:44
msgid "Starting PostgreSQL Container"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:46
msgid "Now we need to run ``PostgreSQL`` in a container, attach it to the network you have created before, and expose ports for communication:"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:58
msgid "If you already have Postgres running on a host system on default port (5432), then you should pick another free port that will be occupied. For example, 5433: ``-p 5433:5432 \\``"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:63
msgid "Creating Blockstore"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:64
msgid "Before we run Iroha container, we should create persistent volume to store files, storing blocks for the chain. It is done via the following command:"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:72
msgid "Configuring Iroha Network"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:72
msgid "To keep things simple, in this guide we will create a network containing only one node. To understand how to run several peers, follow this guide."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:78
msgid "Now we need to configure our Iroha network. This includes creating a configuration file, generating keypairs for a users, writing a list of peers and creating a genesis block. However, we have prepared an example configuration for this guide, so you can start playing with Iroha faster. In order to get those files, you need to clone the `Iroha repository <github.com/hyperledger/iroha>`_ from Github."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:41
msgid "``--depth-1`` option allows us to download only latest commit and save some time and bandwidth. If you want to get a full commit history, you can omit this option."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:94
msgid "Starting Iroha Container"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:95
msgid "We are ready to launch our Iroha container. Let's do it with the following command"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:108
msgid "Let's look in detail what this command does:"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:110
msgid "``docker run -it --name iroha \\`` attaches you to docker container called ``iroha``"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:112
msgid "with ``$(pwd)/iroha/example:/opt/iroha_data \\`` we add a folder containing our prepared configuration to a docker container into ``/opt/iroha_data``."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:114
msgid "``-v blockstore:/tmp/block_store \\`` adds a persistent block storage which we created before to a container, so our blocks won't be lost after we stop the container"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:117
msgid "``--network=iroha-network \\`` adds our container to previously created ``iroha-network``, so Iroha and Postgres could see each other."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:117
msgid "``--entrypoint=/bin/bash \\`` Because ``hyperledger/iroha-docker`` has the custom script which runs after starting the container, we want to override it so we can start Iroha Daemon manually."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:120
msgid "``hyperledger/iroha-docker:develop`` is the image which has the ``develop`` branch."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:126
msgid "Launching Iroha Daemon"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:127
msgid "Now you are in the interactive shell of Iroha's container. To actually run Iroha, we need to launch Iroha daemon – ``irohad``."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:134
msgid "In the usual situation, you need to provide a config file, generate genesis block and keypair. However, as a part of this guide, we provide an example configuration for you. Please do not use these settings in a production. You can read more about configuration here."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:139
msgid "Congratulations! You have an Iroha node up and running! In the next section, we will test it by sending some transactions."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:142
msgid "You can get more information about ``irohad`` and its launch options in this section"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:146
msgid "Interacting with Iroha Network"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:147
msgid "You can interact with Iroha using various ways. You can use our client libraries to write code in various programming languages (e.g. Java, Python, Javascript, Swift) which communicates with Iroha. Alternatively, you can use ``iroha-cli`` – our command-line tool for interacting with Iroha. As a part of this guide, let's get familiar with ``iroha-cli``"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:153
msgid "Despite that ``iroha-cli`` is arguably the simplest way to start working with Iroha, ``iroha-cli`` was engineered very fast and lacks tests, so user experience might not be the best. For example, the order of menu items can differ from that you see in this guide. In the future, we will deliver a better version and appreciate contributions."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:163
msgid "Open a new terminal (note that Iroha container and ``irohad`` should be up and running) and attach to an ``iroha`` docker container:"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:170
msgid "Now you are in the interactive shell of Iroha's container again. We need to launch ``iroha-cli`` and pass an account name of the desired user. In our example, the account ``admin`` is already created in a ``test`` domain. Let's use this account to work with Iroha."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:179
msgid "Full account name has a ``@`` symbol between name and domain. Note that the keypair has the same name."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:183
msgid "Creating the First Transaction"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:185
msgid "You can see the interface of ``iroha-cli`` now. Let's create a new asset, add some asset to the admin account and transfer it to other account. To achieve this, please choose option ``1. New transaction (tx)`` by writing ``tx`` or ``1`` to a console."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:190
msgid "Now you can see a list of available commands. Let's try creating a new asset. Select ``14. Create Asset (crt_ast)``. Now enter a name for your asset, for example ``coolcoin``. Next, enter a Domain ID. In our example we already have a domain ``test``, so let's use it. Then we need to enter an asset precision – the amount of numbers in a fractional part. Let's set precision to ``2``."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:196
msgid "Congratulations, you have created your first command and added it to a transaction! You can either send it to Iroha or add some more commands ``1. Add one more command to the transaction (add)``. Let's add more commands, so we can do everything in one shot. Type ``add``."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:201
msgid "Now try adding some ``coolcoins`` to our account. Select ``16. Add Asset Quantity (add_ast_qty)``, enter Account ID – ``admin@test``, asset ID – ``coolcoin#test``, integer part and precision. For example, to add 200.50 ``coolcoins``, we need to enter integer part as ``20050`` and precision as ``2``, so it becomes ``200.50``."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:207
msgid "Full asset name has a ``#`` symbol between name and domain."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:209
msgid "Let's transfer 100.50 ``coolcoins`` from ``admin@test`` to ``test@test`` by adding one more command and choosing ``5. Transfer Assets (tran_ast)``. Enter Source Account and Destination Account, in our case ``admin@test`` and ``test@test``, Asset ID (``coolcoin#test``), integer part and precision (``10050`` and ``2`` accordingly)."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:215
msgid "Now we need to send our transaction to Iroha peer (``2. Send to Iroha peer (send)``). Enter peer address (in our case ``localhost``) and port (``50051``). Congratulations, your transaction is submitted and you can see your transaction hash. You can use it to check transaction's status."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:220
msgid "Go back to a terminal where ``irohad`` is running. You can see logs of your transaction."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:223
msgid "Congratulations! You have submitted your first transaction to Iroha."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:226
msgid "Creating the First Query"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:228
msgid "Now let's check if ``coolcoins`` were successfully transferred from ``admin@test`` to ``test@test``. Choose ``2. New query (qry)``. ``7. Get Account's Assets (get_acc_ast)`` can help you to check if ``test@test`` now has ``coolcoin``. Form a query in a similar way you did with commands you did with commands and ``1. Send to Iroha peer (send)``. Now you can see information about how many ``coolcoin`` does ``test@test`` have. It will look similar to this:"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:243
msgid "Congratulations! You have submitted your first query to Iroha and got a response!"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:246
msgid "To get information about all available commands and queries please check our API section."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:250
msgid "Being Badass"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:252
msgid "Let's try being badass and cheat Iroha. For example, let's transfer more ``coolcoins`` than ``admin@test`` has. Try to transfer 100000.00 ``coolcoins`` from ``admin@test`` to ``test@test``. Again, proceed to ``1. New transaction (tx)``, ``5. Transfer Assets (tran_ast)``, enter Source Account and Destination Account, in our case ``admin@test`` and ``test@test``, Asset ID (``coolcoin#test``), integer part and precision (``10000000`` and ``2`` accordingly). Send a transaction to Iroha peer as you did before. Well, it says"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:266
msgid "`Your transaction was accepted for processing`. Does it mean that we had successfully cheated Iroha? Let's try to see transaction's status. Choose ``3. New transaction status request (st)`` and enter transaction's hash which you can get in the console after the previous command. Let's send it to Iroha. It replies with:"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:276
msgid "Apparently no. Our transaction was not accepted because it did not pass stateful validation and ``coolcoins`` were not transferred. You can check the status of ``admin@test`` and ``test@test`` with queries to be sure (like we did earlier)."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:2
msgid "Deploying Iroha"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:4
msgid "Hyperledger Iroha can be deployed in different ways, depending on the perspective and the purpose. There can be either a single node deployed, or multiple nodes running in several containers on a local machine or spread across the network — so pick any case you need. This page describes different scenarios and is intended to act as a how-to guide for users, primarily trying out Iroha for the first time."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:9
msgid "Running single instance"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:11
msgid "Generally, people want to run Iroha locally in order to try out the API and explore the capabilities. This can be done in local or container environment (Docker). We will explore both possible cases, but in order to simplify peer components deployment, *it is advised to have Docker installed on your machine*."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:17
msgid "Local environment"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:19
msgid "By local environment, it is meant to have daemon process and Postgres deployed without any containers. This might be helpful in cases when messing up with Docker is not preferred — generally a quick exploration of the features."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:23
msgid "Run postgres server"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:25
msgid "In order to run postgres server locally, you should check postgres `website <https://www.postgresql.org/docs/current/static/server-start.html>`__ and follow their description. Generally, postgres server runs automatically when the system starts, but this should be checked in the configuration of the system."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:30
msgid "Run iroha daemon (irohad)"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:32
msgid "There is a list of preconditions which you should meet before proceeding:"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:34
msgid "Postgres server is up and running"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:35
msgid "`irohad` Iroha daemon binary is built and accessible in your system"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:36
msgid "The genesis block and configuration files were created"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:37
msgid "Config file uses valid postgres connection settings"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:38
msgid "A keypair for the peer is generated"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:39
#: ../iroha/docs/source/guides/deployment.rst:121
msgid "This is the first time you run the Iroha on this peer and you want to create new chain"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:41
msgid "Have you got something that is not the same as in the list of assumptions? Please, refer to the section below the document, titled as `Dealing with troubles`_."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:43
msgid "In case of valid assumptions, the only thing that remains is to launch the daemon process with following parameters:"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:180
#: ../iroha/docs/source/guides/build.rst:197
msgid "Parameter"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:46
msgid "Meaning"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:48
msgid "config"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:48
msgid "configuration file, containing postgres connection and values to tune the system"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:51
msgid "genesis_block"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:51
msgid "initial block in the ledger"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:53
msgid "keypair_name"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:53
msgid "private and public key file names without file extension, used by peer to sign the blocks"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:59
msgid "An example of shell command, running Iroha daemon is"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:65
msgid "If you have stopped the daemon and want to use existing chain — you should not pass the genesis block parameter."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:24
msgid "Docker"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:71
msgid "In order to run Iroha peer as a single instance in Docker, you should pull the image for Iroha first:"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:77
msgid "Use *latest* tag for latest stable release, and *develop* for latest development version"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:79
msgid "Then, you have to create an enviroment for the image to run without problems:"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:82
msgid "Create docker network"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:84
msgid "Containers for Postgres and Iroha should run in the same virtual network, in order to be available to each other. Create a network, by typing following command (you can use any name for the network, but in the example, we use *iroha-network* name):"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:92
msgid "Run Postgresql in a container"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:94
msgid "Similarly, run postgres server, attaching it to the network you have created before, and exposing ports for communication:"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:106
msgid "Create volume for block storage"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:108
msgid "Before we run iroha daemon in the container, we should create persistent volume to store files, storing blocks for the chain. It is done via the following command:"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:116
msgid "Running iroha daemon in docker container"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:121
msgid "There is a list of assumptions which you should review before proceeding:"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:119
msgid "Postgres server is running on the same docker network"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:120
msgid "There is a folder, containing config file and keypair for a single node"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:123
msgid "If they are met, you can move forward with the following command:"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:146
msgid "Running multiple instances (peer network)"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:148
msgid "In order to set up a peer network, one should follow routines, described in this section. In this version, we support manual deployment and automated by Ansible Playbook. Choose an option, that meets your security criteria and other needs."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:153
msgid "Manually"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:155
msgid "By manual deployment, we mean that Iroha peer network is set up without automated assistance. It is similar to the process of running a single local instance, although the difference is the genesis block includes more than a single peer. In order to form a block, which includes more than a single peer, or requires customization for your needs, please take a look at `Dealing with troubles`_ section."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:160
msgid "Automated"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:162
msgid "Anyone can reuse existing Ansible Playbook in order to create a network of peers running Iroha. Currently, this is a solution for development and testing, in other words, a proof of concept, and cannot be used in production environment, due to some security flaws. For production network, a manual composing of genesis block is required."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:169
msgid "One ore more <virtual> machines with a Linux distributive installed."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:170
msgid "SSH access to those machines"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:171
msgid "Ansible installed on a local machine"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:174
msgid "Step-by-step guide"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:176
msgid "Create peers.list file in $IROHA_HOME/deploy/ansible/data"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:178
msgid "Write all peers IP addresses followed by the internal port 10001 (e.g 31.192.120.36:10001)"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:180
msgid "Open $IROHA_HOME/deploy/ansible/hosts file"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:182
msgid "Write all IP addresses in [hosts] group"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:184
msgid "Open terminal"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:186
msgid "Disable host key checking, because it can cause troubles due to interactive prompt"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:192
msgid "Go to ansible folder"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:198
msgid "Run playbook, providing your private key and hosts file"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:204
msgid "Wait until playbook finishes and then Iroha network is ready and up."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:207
msgid "Checking Iroha peer status"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:209
msgid "SSH into any of your machines"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:215
msgid "Check Iroha container logs:"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:222
msgid "Dealing with troubles"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:224
msgid "—\"Please, help me, because I am…\""
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:227
msgid "Not having Iroha daemon binary"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:229
msgid "You can build Iroha daemon binary from sources, following API section from the `website <https://hyperledger.github.io/iroha-api/#build>`__"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:232
msgid "Not having config file"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:234
msgid "Check how to create a configuration file by following this `link <https://hyperledger.github.io/iroha-api/#prepare-configuration-file>`__"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:237
msgid "Not having genesis block"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:239
msgid "Create genesis block by generating it via `iroha-cli` or manually, as it is described `here <https://hyperledger.github.io/iroha-api/#create-genesis-block>`__"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:242
msgid "Not having a keypair for a peer"
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:244
msgid "In order to create a keypair for an account or a peer, use iroha-cli binary by passing the name of the peer with `--new_account` option."
msgstr ""

#: ../iroha/docs/source/guides/index.rst:2
msgid "Guides and how-tos"
msgstr ""

#: ../iroha/docs/source/guides/index.rst:4
msgid "Here we will take a look more closely at how to use Iroha. In essence, this section is a collection of how-tos for different scenarios: - how to install Iroha - what is required to build client libraries and how to use them (for example https://developers.google.com/protocol-buffers/docs/javatutorial) - how to use CLI - how to deploy a network of Iroha peers, etc."
msgstr ""

#: ../iroha/docs/source/guides/libraries.rst:2
msgid "Client libraries"
msgstr ""

#: ../iroha/docs/source/guides/libraries.rst:5
msgid "C++ library"
msgstr ""

#: ../iroha/docs/source/guides/libraries.rst:8
#: ../iroha/docs/source/guides/libraries.rst:23
#: ../iroha/docs/source/guides/libraries.rst:38
#: ../iroha/docs/source/guides/libraries.rst:53
#: ../iroha/docs/source/guides/libraries.rst:68
#: ../iroha/docs/source/guides/libraries.rst:83
msgid "Where to get"
msgstr ""

#: ../iroha/docs/source/guides/libraries.rst:11
#: ../iroha/docs/source/guides/libraries.rst:26
#: ../iroha/docs/source/guides/libraries.rst:41
#: ../iroha/docs/source/guides/libraries.rst:56
#: ../iroha/docs/source/guides/libraries.rst:71
#: ../iroha/docs/source/guides/libraries.rst:86
msgid "How to use/import"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:75
msgid "Example code"
msgstr ""

#: ../iroha/docs/source/guides/libraries.rst:17
#: ../iroha/docs/source/guides/libraries.rst:32
#: ../iroha/docs/source/guides/libraries.rst:47
#: ../iroha/docs/source/guides/libraries.rst:77
#: ../iroha/docs/source/guides/libraries.rst:92
msgid "Troubleshooting"
msgstr ""

#: ../iroha/docs/source/guides/libraries.rst:62
msgid "Troubleshoting"
msgstr ""

#: ../iroha/docs/source/maintenance/index.rst:2
msgid "Maintenance"
msgstr ""

#: ../iroha/docs/source/maintenance/index.rst:4
msgid "Hardware requirements, deployment process in details, aspects related to security, configuration files — all of the listed is explained in this separate section, helpful for DevOps engineers or those who are digging deeper in the system capabilities."
msgstr ""

#: ../iroha/docs/source/maintenance/index.rst:7
msgid "Ansible"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:2
msgid "Use Case Scenarios"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:4
msgid "We list a number of use cases and specific advantages that Hyperledger Iroha can introduce to these applications. We hope that the applications and use cases will inspire developers and creators to further innovation with Hyperledger Iroha."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:8
msgid "Certificates in Education, Healthcare"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:10
msgid "Hyperledger Iroha incorporates into the system multiple certifying authorities such as universities, schools, and medical institutions. Flexible permission model used in Hyperledger Iroha allows building certifying identities, and grant certificates. The storage of explicit and implicit information in users' account allows building various reputation and identity systems."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:12
msgid "By using Hyperledger Iroha each education or medical certificate can be verified that it was issued by certain certifying authorities. Immutability and clear validation rules provide transparency to health and education significantly reducing the usage of fake certificates."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:15
#: ../iroha/docs/source/use_cases/index.rst:32
#: ../iroha/docs/source/use_cases/index.rst:48
#: ../iroha/docs/source/use_cases/index.rst:61
#: ../iroha/docs/source/use_cases/index.rst:76
#: ../iroha/docs/source/use_cases/index.rst:90
msgid "Example"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:17
msgid "Imagine a medical institution registered as a ``hospital`` domain in Hyperledger Iroha. This domain has certified and registered workers each having some role, e.g. ``physician``, ``therapist``, ``nurse``. Each patient of the hospital has an account with full medical history. Each medical record, like blood test results, is securely and privately stored in the account of the patient as JSON key/values. Rules in ``hospital`` domain are defined such that only certified medical workers and the user can access the personal information. The medical data returned by a query is verified that it comes from a trusted source."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:19
msgid "Hospital is tied to a specific location, following legal rules of that location, like storing personal data of citizens only in specific regions(`privacy rules`_). A multi-domain approach in Hyperledger Iroha allows sharing information across multiple countries not violating legal rules. For example, if the user ``makoto@hospital`` decides to share personal case history with a medical institution in another country, the user can use ``grant`` command with permission ``can_get_my_acc_detail``."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:21
msgid "Similar to a medical institution, a registered university in Hyperledger Iroha has permissions to push information to the graduated students. A diploma or certificate is essentially Proof-of-Graduation with a signature of recognized University. This approach helps to ease hiring process, with an employer making a query to Hyperledger Iroha to get the acquired skills and competence of the potential employee."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:27
msgid "Cross-Border Asset Transfers"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:29
msgid "Hyperledger Iroha provides fast and clear trade and settlement rules using multi-signature accounts and atomic exchange. Asset management is easy as in centralized systems while providing necessary security guarantees. By simplifying the rules and commands required to create and transfer assets, we lower the barrier to entry, while at the same time maintaining high-security guarantees."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:34
msgid "For example [#f1]_, a user might want to transfer the ownership of a car. User ``haruto`` has registered owner-asset relationship with a car of ``sora`` brand with parameters: ``{\"id\": \"34322069732074686520616E73776572\", \"color\": \"red\", \"size\": \"small\"}``. This ownership is fixed in an underlying database of the system with copies at each validating peer. To perform the transfer operation user ``haruto`` creates an offer, i.e. a multi-signature transaction with two commands: ``transfer`` to user ``haru`` the car identifier and ``transfer`` some amount of ``usd`` tokens from ``haru`` to ``haruto``. Upon receiving the offer ``haru`` accepts it by signing the multi-signature transaction, in this case, transaction atomically commits to the system."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:36
msgid "Hypeledger Iroha has no built-in token, but it supports different assets from various creators. This approach allows building a decentralized exchange market. For example, the system can have central banks from different countries to issue assets."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:38
msgid "Currently not implemented"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:41
msgid "Financial Applications"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:43
msgid "Hyperleger Iroha can be very useful in the auditing process. Each information is validated by business rules and is constantly maintained by distinct network participants. Access control rules along with some encryption maintain desired level of privacy. Access control rules can be defined at different levels: user-level, domain-level or system-level. At the user-level privacy rules for a specific individual are defined. If access rules are determined at domain or system level, they are affecting all users in the domain. In Hyperledger Iroha we provide convenient role-based access control rules, where each role has specific permissions."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:45
msgid "Transactions can be traced with a local database. Using Iroha-API auditor can query and perform analytics on the data, execute specific audit software. Hyperledger Iroha supports different scenarios for deploying analytics software:  on a local computer, or execute code on specific middleware. This approach allows analyzing Big Data application with Hadoop, Apache, and others. Hypeledger Iroha serves as a guarantor of data integrity and privacy (due to the query permissions restriction)."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:50
msgid "For example, auditing can be helpful in financial applications. An auditor account has a role of the ``auditor`` with permissions to access the information of users in the domain without bothering the user. To reduce the probability of account hijacking and prevent the auditor from sending malicious queries, the auditor is typically defined as a multi-signature account, meaning that auditor can make queries only having signatures from multiple separate identities. The auditor can make queries not only to fetch account data and balance but also all transactions of a user, e.g. all transfers of user ``haruto`` in domain ``konoha``. To efficiently analyze data of million users each Iroha node can work in tandem with analytics software."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:52
msgid "Multi-signature transactions are a powerful tool of Hyperledger Iroha that can disrupt tax system. Each transaction in a certain domain can be as a multi-signature transaction, where one signature comes from the user (for example asset transfer) and the second signature comes from special taxing nodes. Taxing nodes will have special validation rules written using Iroha-API, e.g. each purchase in the certified stores must pay taxes. In other words, Iroha a valid purchase transaction must contain two commands: money transfer(purchase) to the store and money transfer(tax payment) to the government."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:56
msgid "Identity Management"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:58
msgid "Hyperledger Iroha has an intrinsic support for identity management. Each user in the system has a uniquely identified account with personal information, and each transaction is signed and associated with a certain user. This makes Hyperledger Iroha perfect for various application with KYC (Know Your Customer) features."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:63
msgid "For example, insurance companies can benefit from querying the information of user’s transaction without worrying about the information truthfulness. Users can also benefit from storing personal information on a blockchain since authenticated information will reduce the time of claims processing. Imagine a situation where a user wants to make a hard money loan. Currently, pre-qualification is a tedious process of gathering information about income, debts and information verification. Each user in Hyperledger Iroha has an account with verified personal information, such as owning assets, job positions, and debts. User income and debts can be traced using query ``GetAccountTransactions``, owning assets using query ``GetAccountAssets`` and job positions using ``GetAccountDetail``. Each query returns verified result reducing the processing time of hard money loan will take only a few seconds. To incentivize users to share personal information, various companies can come up with business processes. For example, insurance companies can create bonus discounts for users making fitness activities. Fitness applications can push private Proof-of-Activity to the system, and the user can decide later to share information with insurance companies using ``GrantPermission`` with permission ``can_get_my_acc_detail``."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:69
msgid "Supply Chain"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:71
msgid "Governance of a decentralized system and representing legal rules as a system's code is an essential combination of any supply chain system. Certification system used in Hyperledger Iroha allows tokenization of physical items and embedding them into the system. Each item comes with the information about “what, when, where and why”."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:73
msgid "Permission systems and restricted set of secure core commands narrows the attack vector and provides effortlessly a basic level of privacy. Each transaction is traceable within a system with a hash value, by the credentials or certificates of the creator."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:78
msgid "Food supply chain is a shared system with multiple different actors, such as farmers, storehouses, grocery stores, and customers. The goal is to deliver food from a farmer's field to the table of a customer. The product goes through many stages, with each stage recorded in shared space. A customer scans a code of the product via a mobile device, in which an Iroha query is encoded. Iroha query provides a full history with all stages, information about the product and the farmer."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:80
msgid "For example, ``gangreen`` is a registered farmer ``tomato`` asset creator, he serves as a guarantor tokenizing physical items, i.e. associating each tomato with an Iroha ``tomato`` item. Asset creation and distribution processes are totally transparent for network participants. Iroha ``tomato`` goes on a journey through a multitude of vendors to finally come to user ``chad``."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:82
msgid "We simplified asset creation to just a single command ``CreateAsset`` without the need to create complex smart contracts. One the major advantages of Hyperledger Iroha is in its ease, that allows developers to focus on the provided value of their applications."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:102
msgid "Related Research"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:104
msgid "(The idea was to show current pioneers of blockchain applications and their works.)"
msgstr ""

#: ../iroha/docs/source/index.rst:2
msgid "Hyperledger Iroha documentation"
msgstr ""

#: ../iroha/docs/source/index.rst
msgid "Last Reviewed"
msgstr ""

#: ../iroha/docs/source/index.rst:4
msgid "2018-03-06"
msgstr ""

#: ../iroha/docs/source/index.rst:6
msgid "Welcome! Hyperledger Iroha is a simple blockchain platform you can use to make trusted, secure, and fast applications by bringing the power of permission-based blockchain with Byzantine fault-tolerant consensus. It's free, open-source, and works on Linux and Mac OS, with a variety of mobile and desktop libraries."
msgstr ""

#: ../iroha/docs/source/index.rst:8
msgid "You can download the source code of Hyperledger Iroha and latest releases from `GitHub page <https://github.com/hyperledger/iroha>`_."
msgstr ""

#: ../iroha/docs/source/index.rst:10
msgid "This documentation will guide you through the installation, deployment, and launch of Iroha network, and explain to you how to write an application for it. We will also see which use case scenarios are feasible now, and are going to be implemented in the future."
msgstr ""

#: ../iroha/docs/source/index.rst:12
msgid "As Hyperledger Iroha is an open-source project, we will also cover contribution part and explain you a working process."
msgstr ""

#: ../iroha/docs/source/index.rst:14
msgid "There is a separate website for all external API documentation, which is `Iroha API <https://hyperledger.github.io/iroha-api>`_. We are in the process of migration, so that in future only RTD is maintained and updated."
msgstr ""

#: ../iroha/docs/source/overview.rst:2
msgid "Overview of Iroha"
msgstr ""

#: ../iroha/docs/source/overview.rst:5
msgid "What are the key features of Iroha?"
msgstr ""

#: ../iroha/docs/source/overview.rst:8
msgid "Where Iroha can be used?"
msgstr ""

#: ../iroha/docs/source/overview.rst:28
msgid "How is it different from Bitcoin or Ethereum?"
msgstr ""

#: ../iroha/docs/source/overview.rst:40
msgid "How is it different from the rest of Hyperledger frameworks or other permissioned blockchains?"
msgstr ""

#: ../iroha/docs/source/overview.rst:53
msgid "Is it fast?"
msgstr ""

#: ../iroha/docs/source/overview.rst:53
msgid "How to create applications around Iroha?"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:4
msgid "A command changes the state, called World State View, by performing an action over an entity (asset, account) in the system. Any command should be included in a transaction to perform an action."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:22
#: ../iroha/docs/source/api/queries.rst:78
#: ../iroha/docs/source/api/queries.rst:122
#: ../iroha/docs/source/api/queries.rst:166
#: ../iroha/docs/source/api/queries.rst:204
#: ../iroha/docs/source/api/queries.rst:265
#: ../iroha/docs/source/api/queries.rst:328
#: ../iroha/docs/source/api/queries.rst:379
#: ../iroha/docs/source/api/queries.rst:530
#: ../iroha/docs/source/api/queries.rst:583
#: ../iroha/docs/source/api/queries.rst:617
msgid "Purpose"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:13
msgid "The purpose of add asset quantity command is to increase the quantity of an asset on account of transaction creator. Use case scenario is to increase the number of a mutable asset in the system, which can act as a claim on a commodity (e.g. money, gold, etc.)"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:17
#: ../iroha/docs/source/api/commands.rst:58
#: ../iroha/docs/source/api/commands.rst:97
#: ../iroha/docs/source/api/commands.rst:134
#: ../iroha/docs/source/api/commands.rst:169
#: ../iroha/docs/source/api/commands.rst:207
#: ../iroha/docs/source/api/commands.rst:247
#: ../iroha/docs/source/api/commands.rst:283
#: ../iroha/docs/source/api/commands.rst:318
#: ../iroha/docs/source/api/commands.rst:352
#: ../iroha/docs/source/api/commands.rst:387
#: ../iroha/docs/source/api/commands.rst:427
#: ../iroha/docs/source/api/commands.rst:462
#: ../iroha/docs/source/api/commands.rst:502
#: ../iroha/docs/source/api/commands.rst:541
#: ../iroha/docs/source/api/commands.rst:580
msgid "Schema"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:32
#: ../iroha/docs/source/api/commands.rst:72
#: ../iroha/docs/source/api/commands.rst:107
#: ../iroha/docs/source/api/commands.rst:144
#: ../iroha/docs/source/api/commands.rst:180
#: ../iroha/docs/source/api/commands.rst:222
#: ../iroha/docs/source/api/commands.rst:257
#: ../iroha/docs/source/api/commands.rst:293
#: ../iroha/docs/source/api/commands.rst:328
#: ../iroha/docs/source/api/commands.rst:362
#: ../iroha/docs/source/api/commands.rst:397
#: ../iroha/docs/source/api/commands.rst:437
#: ../iroha/docs/source/api/commands.rst:473
#: ../iroha/docs/source/api/commands.rst:512
#: ../iroha/docs/source/api/commands.rst:555
#: ../iroha/docs/source/api/commands.rst:593
msgid "Structure"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Field"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:180
#: ../iroha/docs/source/guides/build.rst:197
msgid "Description"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Constraint"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Account ID"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "account id in which to add asset"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "<account_name>@<domain_id>"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "alex@morgan"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Asset ID"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "id of the asset"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "<asset_name>#<domain_id>"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "usd#morgan"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Amount"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "positive amount of the asset to add"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "> 0"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "200.02"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:44
#: ../iroha/docs/source/api/commands.rst:567
msgid "Asset and account should exist"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:45
#: ../iroha/docs/source/api/commands.rst:568
msgid "Added quantity precision should be equal to asset precision"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:46
msgid "Creator of a transaction should have a role which has permissions for issuing assets"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:56
msgid "Creator of a transaction adds account quantity to his/her account only"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:54
msgid "The purpose of add peer command is to write into ledger the fact of peer addition into the peer network. After a transaction with AddPeer has been committed, consensus and synchronization components will start using it."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Address"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "resolvable address in network (IPv4, IPv6, domain name, etc.)"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "should be resolvable"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "192.168.1.1:50541"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Peer key"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "peer public key, which is used in consensus algorithm to sign-off vote, commit, reject messages"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "ed25519 public key"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "292a8714694095edce6be799398ed5d6244cd7be37eb813106b217d850d261f2"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:84
msgid "Creator of the transaction has a role which has CanAddPeer permission"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:85
msgid "Such network address has not been already added"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:93
msgid "The purpose of add signatory command is to add an identifier to the account. Such identifier is a public key of another device or a public key of another user."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Account to which to add signatory"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "makoto@soramitsu"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Public key"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Signatory to add to account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "359f925e4eeecfdd6aa1abc0b79a6a121a5dd63bb612b603247ea4f8ad160156"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:119
#: ../iroha/docs/source/api/commands.rst:412
#: ../iroha/docs/source/api/commands.rst:486
#: ../iroha/docs/source/api/commands.rst:526
msgid "Two cases:"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:121
msgid "Case 1. Transaction creator wants to add a signatory to his or her account, having permission CanAddSignatory"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:123
msgid "Case 2. CanAddSignatory was granted to transaction creator"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:131
msgid "The purpose of append role command is to promote an account to some created role in the system, where a role is a set of permissions account has to perform an action (command or query)."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "id or account to append role to"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "already existent"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Role name"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "name of already created role"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "MoneyCreator"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:156
msgid "The role should exist in the system"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:157
msgid "Transaction creator should have permissions to append role (CanAppendRole)"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:158
msgid "Account, which appends role, has set of permissions in his roles that is a superset of appended role (in other words no-one can append role that is more powerful than what transaction creator is)"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:166
msgid "The purpose of create account command is to make entity in the system, capable of sending transactions or queries, storing signatories, personal data and identifiers."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Account name"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "domain-unique name for account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "`[a-z_0-9]{1,32}`"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "morgan_stanley"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Domain ID"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "target domain to make relation with"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "should be created before the account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "america"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Main pubkey"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "first public key to add to the account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "407e57f50ca48969b08ba948171bb2435e035d82cec417e18e4a38f5fb113f83"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:193
msgid "Transaction creator has permission to create an account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:194
msgid "Domain, passed as domain_id, has already been created in the system"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:195
msgid "Such public key has not been added before as first public key of account or added to a multi-signature account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:203
msgid "The purpose of сreate asset command is to create a new type of asset, unique in a domain. An asset is a countable representation of a commodity."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Asset name"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "domain-unique name for asset"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "soracoin"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "RFC1035 [#f1]_, RFC1123 [#f2]_"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "japan"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Precision"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "number of digits after comma/dot"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "0 <= precision <= uint32 max"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:49
msgid "2"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:235
msgid "Transaction creator has permission to create assets"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:236
msgid "Asset name is unique in domain"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:244
msgid "The purpose of create domain command is to make new domain in Iroha network, which is a group of accounts."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "ID for created domain"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "unique, RFC1035 [#f1]_, RFC1123 [#f2]_"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "japan05"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Default role"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "role for any created user in the domain"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "one of the existing roles"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "User"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:269
msgid "Domain ID is unique"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:270
msgid "Account, who sends this command in transaction, has role with permission to create domain"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:271
msgid "Role, which will be assigned to created user by default, exists in the system"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:279
msgid "The purpose of create role command is to create a new role in the system from the set of permissions. Combining different permissions into roles, maintainers of Iroha peer network can create customized security model."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "name of role to create"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Permissions"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "array of already existent permissions"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "set of passed permissions is fully included into set of existing permissions"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "{can_receive, can_transfer}"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:305
msgid "Set of passed permissions is fully included into set of existing permissions"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:306
msgid "Set of the permissions is not empty"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:314
msgid "The purpose of detach role command is to detach a role from the set of roles of an account. By executing this command it is possible to decrease the number of possible actions in the system for the user."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "ID of account where role will be deleted"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "a detached role name"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "existing role"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:340
msgid "The role exists in the system"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:341
msgid "The account has such role"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:349
msgid "The purpose of grant permission command is to give another account rights to perform actions on the account of transaction sender (give someone right to do something with my account)."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "id of account whom rights are granted"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Permission name"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "name of granted permission"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "permission is defined"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "CanTransferAssets"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:375
msgid "Account exists"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:376
msgid "Transaction creator is allowed to grant this permission"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:379
msgid "Remove signatory"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:384
msgid "Purpose of remove signatory command is to remove a public key, associated with an identity, from an account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Signatory to delete"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:409
msgid "When signatory is deleted, we should check if invariant of **size(signatories) >= quorum** holds"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:410
msgid "Signatory should have been previously added to the account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:414
msgid "Case 1. When transaction creator wants to remove signatory from their account and he or she has permission CanRemoveSignatory"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:416
#: ../iroha/docs/source/api/commands.rst:530
msgid "Case 2. CanRemoveSignatory was granted to transaction creator"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:424
msgid "The purpose of revoke permission command is to revoke or dismiss given granted permission from another account in the network."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "permission was granted"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:449
msgid "Transaction creator should have previously granted this permission to a target account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:457
msgid "Purpose of set account detail command is to set key-value information for a given account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "id of account whom key-value information was set"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Key"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "key of information being set"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "`[A-Za-z0-9_]{1,64}`"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Name"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Value"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "value of corresponding key"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "≤ 4096"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Makoto"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:488
msgid "Case 1. When transaction creator wants to set account detail to his/her account and he or she has permission CanSetAccountInfo"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:490
msgid "Case 2. CanSetAccountInfo was granted to transaction creator"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:498
msgid "The purpose of set account quorum command is to set the number of signatories required to confirm the identity of a user, who creates the transaction. Use case scenario is to set the number of different users, utilizing single account, to sign off the transaction."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "ID of account to set quorum"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:180
msgid "Quorum"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "number of signatories needed to be included with a transaction from this account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "0 < quorum ≤ public-key set up to account ≤ 128"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:59
msgid "5"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:524
msgid "When quorum is set, it is checked if invariant of **size(signatories) >= quorum** holds."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:528
msgid "Case 1. When transaction creator wants to set quorum for his/her account and he or she has permission CanRemoveSignatory"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:538
msgid "The purpose of subtract asset quantity command is the opposite of AddAssetQuantity commands — to decrease the number of assets on account of transaction creator."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "account id from which to subtract asset"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "positive amount of the asset to subtract"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "200"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:569
msgid "Creator of the transaction should have a role which has permissions for subtraction of assets"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:584
msgid "Creator of transaction subtracts account quantity in his/her account only"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:577
msgid "The purpose of transfer asset command is to share assets within the account in peer network: in the way that source account transfers assets to the target account."
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Source account ID"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "ID of account to withdraw asset from"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Destination account ID"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "ID of account to send asset at"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "alex@california"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "ID of asset to transfer"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "usd#usa"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Message to attach to transfer"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Max length is 64"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "here's my money take it"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "amount of the asset to transfer"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "0 < amount < max_uint256"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "200.20"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:608
msgid "Source account has this asset in its AccountHasAsset relation [#f1]_"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:609
msgid "An amount is a positive number and asset precision is consistent with the asset definition"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:610
msgid "Source account has enough amount of asset to transfer and is not zero"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:611
msgid "Source account can transfer money, and destination account can receive money (their roles have these permissions)"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:657
msgid "https://www.ietf.org/rfc/rfc1035.txt"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:658
msgid "https://www.ietf.org/rfc/rfc1123.txt"
msgstr ""

#: ../iroha/docs/source/api/cpp_library.rst:6
msgid "Contents are missing for now."
msgstr ""

#: ../iroha/docs/source/api/index.rst:4
msgid "In API section we will take a look at building blocks of an application interacting with Iroha. We will overview commands and queries that the system has, and the set of client libraries encompassing transport and application layer logic."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:4
msgid "A query is a request related to certain part of World State View — the latest state of blockchain. Query cannot modify the contents of the chain and a response is returned to any client immediately after receiving peer has processed a query."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:11
msgid "The validation for all queries includes:"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:13
msgid "timestamp — shouldn't be from the past (24 hours prior to the peer time) or from the future (range of 5 minutes added to the peer time)"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:14
msgid "signature of query creator — used for checking the identity of query creator"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:15
msgid "query counter — checked to be incremented with every subsequent query from query creator"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:16
msgid "roles — depending on the query creator's role: the range of state available to query can relate to to the same account, account in the domain, to the whole chain, or not allowed at all"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:19
msgid "Get Account"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:24
msgid "Purpose of get account query is to get the state of an account."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:27
#: ../iroha/docs/source/api/queries.rst:83
#: ../iroha/docs/source/api/queries.rst:127
#: ../iroha/docs/source/api/queries.rst:172
#: ../iroha/docs/source/api/queries.rst:210
#: ../iroha/docs/source/api/queries.rst:271
#: ../iroha/docs/source/api/queries.rst:333
#: ../iroha/docs/source/api/queries.rst:399
#: ../iroha/docs/source/api/queries.rst:535
#: ../iroha/docs/source/api/queries.rst:588
#: ../iroha/docs/source/api/queries.rst:622
msgid "Request Schema"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:36
#: ../iroha/docs/source/api/queries.rst:92
#: ../iroha/docs/source/api/queries.rst:136
#: ../iroha/docs/source/api/queries.rst:227
#: ../iroha/docs/source/api/queries.rst:289
#: ../iroha/docs/source/api/queries.rst:342
#: ../iroha/docs/source/api/queries.rst:419
#: ../iroha/docs/source/api/queries.rst:544
#: ../iroha/docs/source/api/queries.rst:631
msgid "Request Structure"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "account id to request its state"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:45
#: ../iroha/docs/source/api/queries.rst:101
#: ../iroha/docs/source/api/queries.rst:145
#: ../iroha/docs/source/api/queries.rst:180
#: ../iroha/docs/source/api/queries.rst:238
#: ../iroha/docs/source/api/queries.rst:301
#: ../iroha/docs/source/api/queries.rst:351
#: ../iroha/docs/source/api/queries.rst:430
#: ../iroha/docs/source/api/queries.rst:554
#: ../iroha/docs/source/api/queries.rst:596
#: ../iroha/docs/source/api/queries.rst:640
msgid "Response Schema"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:63
#: ../iroha/docs/source/api/queries.rst:110
#: ../iroha/docs/source/api/queries.rst:154
#: ../iroha/docs/source/api/queries.rst:189
#: ../iroha/docs/source/api/queries.rst:251
#: ../iroha/docs/source/api/queries.rst:314
#: ../iroha/docs/source/api/queries.rst:365
#: ../iroha/docs/source/api/queries.rst:439
#: ../iroha/docs/source/api/queries.rst:569
#: ../iroha/docs/source/api/queries.rst:605
#: ../iroha/docs/source/api/queries.rst:649
msgid "Response Structure"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "account id"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "domain where the account was created"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "morgan"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "number of signatories needed to sign the transaction to make it valid"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "0 < quorum ≤ 128"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "JSON data"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "key-value account information"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "JSON"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "{ genesis: {name: alex} }"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:75
msgid "Get Signatories"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:80
msgid "Purpose of get signatories query is to get signatories, which act as an identity of the account."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "account id to request signatories"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Keys"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "an array of public keys"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "`ed25519 <https://ed25519.cr.yp.to>`_"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:119
msgid "Get Transactions"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:124
msgid "GetTransactions is used for retrieving information about transactions, based on their hashes."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Transactions hashes"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "an array of hashes"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "array with 32 byte hashes"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "{hash1, hash2…}"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Transactions"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "an array of transactions"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Committed transactions"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "{tx1, tx2…}"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:201
msgid "Get Account Transactions"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:168
msgid "In a case when a list of transactions per account is needed, `GetAccountTransactions` query can be formed."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "account id to request transactions from"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "an array of transactions for given account"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:262
msgid "Get Account Asset Transactions"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:212
msgid "`GetAccountAssetTransactions` query returns all transactions associated with given account and asset."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "asset id in order to filter transactions containing this asset"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "jpy#japan"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "an array of transactions for given account and asset"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:325
msgid "Get Account Assets"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:258
msgid "To get the state of an asset in an account (a balance), `GetAccountAssets` query can be used."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "account id to request balance from"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "asset id to know its balance"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "identifier of asset used for checking the balance"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "account which has this balance"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Balance"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "balance of the asset"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Not less than 0"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:527
msgid "Get Asset Info"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:532
msgid "In order to know precision for given asset, and other related info in the future, such as a description of the asset, etc. user can send `GetAssetInfo` query."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "asset id to know related information"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "jpy"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "domain related to this asset"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "number of digits after comma"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "0 < precision < 256"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:580
msgid "Get Roles"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:585
msgid "To get existing roles in the system, a user can send `GetRoles` query to Iroha network."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Roles"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "array of created roles in the network"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "set of roles in the system"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "{MoneyCreator, User, Admin, …}"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:614
msgid "Get Role Permissions"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:619
msgid "To get available permissions per role in the system, a user can send `GetRolePermissions` query to Iroha network."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Role ID"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "role to get permissions for"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "existing role in the system"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "array of permissions related to the role"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "string of permissions related to the role"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "{can_add_asset_qty, …}"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:2
msgid "Account"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:4
msgid "An Iroha entity that is able to perform specified set of actions. Each account belongs to one of existing `domains <#domain>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:7
msgid "An account has some number of `roles <#role>`__ (can be none) — which is a collection of permissions. Only `grantable permissions <#grantable-permission>`__ are assigned to an account directly."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:11
msgid "Ametsuchi"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:13
msgid "Iroha storage component, which stores blocks and a state generated from blocks, called `World State View <#world-state-view>`__. There is no way for the `client <#client>`__ to directly interact with Ametsuchi."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:19
msgid "Asset"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:21
msgid "Any countable commodity or value. Each asset is related to one of existing `domains <#domain>`__. For example, an asset can represent any kind of such units - currency unit, a bar of gold, real estate unit, etc."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:27
msgid "Block"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:29
msgid "Transaction data is permanently recorded in files called blocks. Blocks are organized into a linear sequence over time (also known as the block chain) [#f1]_."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:32
msgid "Blocks are signed with the cryptographic signatures of Iroha `peers <#peer>`__, voting for this block during `consensus <#consensus>`__. Signable content is called payload, so the structure of a block looks like this:"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:36
msgid "*Outside payload*"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:38
msgid "hash — SHA3-512 hash of block protobuf payload"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:39
msgid "signatures — signatures of peers, which voted for the block during consensus round"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:41
msgid "*Inside payload*"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:43
msgid "height — a number of blocks in the chain up to the block"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:44
msgid "timestamp — Unix time (in milliseconds) of block forming by a peer"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:45
msgid "body — transactions, which successfully passed validation and consensus step"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:46
msgid "transactions quantity"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:47
msgid "previous hash of a block"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:50
msgid "Block Creator"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:52
msgid "System component that forms a block from a set of transactions that have been passed `stateless <#stateless-validation>`__ and `stateful <#stateful-validation>`__ validation for further propagation to `consensus <#consensus>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:57
msgid "Client"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:59
msgid "Any application that uses Iroha is treated as a client."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:61
msgid "A distinctive feature of Iroha is that all clients are using simple client-server abstractions when they interact with a peer network: they don't use any abstractions which are specific for blockchain-related systems. For example, in Bitcoin clients have to validate blocks, or in Fabric they need to poll several peers to make sure that a transaction was written in a block, whereas in Iroha a client interacts with any peer similarly to a single server."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:69
msgid "Command"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:71
msgid "A command is an intention to change the `state <#world-state-view>`__. For example, in order to create a new `role <#role>`__ in Iroha you have to issue `Create role <../api/commands.html#create-role>`__ command."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:76
msgid "Consensus"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:78
msgid "A consensus algorithm is a process in computer science used to achieve agreement on a single data value among distributed processes or systems. Consensus algorithms are designed to achieve reliability in a network involving multiple unreliable nodes. Solving that issue -- known as the consensus problem -- is important in distributed computing and multi-agent systems."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:85
msgid "*Consensus, as an algorithm*"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:87
msgid "An algorithm to achieve agreement on a block among peers in the network. By having it in the system, reliability is increased."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:89
msgid "*Consensus, as a component*"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:91
msgid "Preserves consistent state among the `peers <#peer>`__ within a peer network. Iroha uses own consensus algorithm called Yet Another Consensus (aka YAC). Distinctive features of this algorithm are its scalability, performance, and `Byzantine fault tolerance <https://en.wikipedia.org/wiki/Byzantine_fault_tolerance>`_. If there are missing blocks, they will be downloaded from another peer via `Synchronizer <#synchronizer>`__. Committed blocks are stored in `Ametsuchi <#ametsuchi>`__ block storage."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:99
msgid "Domain"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:101
msgid "A named abstraction for grouping `accounts <#account>`__ and `assets <#asset>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:104
msgid "Ordering Gate"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:106
msgid "Internal Iroha component that passes `transactions <#transaction>`__ from `Peer Communication Service <#peer-communication-service>`__ to `Ordering Service <#ordering-service>`__. Ordering Gate eventually recieves `proposals <#proposal>`__ from Ordering Service and sends them to `Simulator <#simulator>`__ for `stateful validation <#stateful-validation>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:112
msgid "Ordering Service"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:114
msgid "Internal Iroha component that combines several `transactions <#transaction>`__ that have been passed `stateless validation <#stateless-validation>`__ into a `proposal <#proposal>`__. Proposal creation could be triggered by one of the following events:"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:118
msgid "Time limit dedicated to transactions collection has expired."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:120
msgid "Ordering service has received the maximum amount of transactions allowed for a single proposal."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:122
msgid "Both parameters (timeout and maximum size of proposal) are configurable (check `environment-specific parameters <../guides/configuration.html#environment-specific-parameters>`_ page)."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:124
msgid "A common precondition for both triggers is that at least one transaction should reach ordering service. Otherwise, no proposal will be formed."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:128
msgid "Peer"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:130
msgid "A node that is a part of Iroha network. It participates in `consensus <#consensus>`_ process."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:134
msgid "Peer Communication Service"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:136
msgid "Internal component of Iroha - an intermediary that transmits `transaction <#transaction>`__ from `Torii <#torii>`__ to `Ordering Gate <#ordering-gate>`__. The main goal of PCS is to hide the complexity of interaction with consensus implementation."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:142
msgid "Permission"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:144
msgid "A named rule that gives the privilege to perform a command. Permission **cannot** be granted to an `account <#account>`__ directly, instead, an account has roles, which are the collection of permissions."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:151
msgid "Grantable Permission"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:153
msgid "Only grantable permission is given to an `account <#account>`__ directly. An account that holds grantable permission is allowed to perform some particular action on behalf of another account. For example, if the account a@domain1 gives the account b@domain2 a permission that it can transfer assets — then  b@domain2 can transfer assets of a@domain1 to anyone."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:161
msgid "Proposal"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:163
msgid "A set of `transactions <#transaction>`__ that have passed only `stateless validation <#stateless-validation>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:167
msgid "Verified Proposal"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:169
msgid "A set of transactions that have been passed `stateless <#stateless-validation>`__ and `stateful <#stateful-validation>`__ validation, but were not committed yet."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:188
msgid "Role"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:190
msgid "A named abstraction that holds a set of `permissions <#permission>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:199
msgid "Simulator"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:201
msgid "See `Verified Proposal Creator <#verified-proposal-creator>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:175
msgid "A request to Iroha that does **not** change the `state <#world-state-view>`__. By performing a query, a client can get request data from the state, for example a balance of his account, a history of transactions, etc."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:204
msgid "Synchronizer"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:206
msgid "Is a part of `consensus <#consensus>`__. Adds missing blocks to `peers' <#peer>`__ chains (downloads them from other peers)."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:210
msgid "Torii"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:212
msgid "⛩. Entry point for `clients <#client>`__. Uses gRPC as a transport. In order to interact with Iroha anyone can use gRPC endpoints, described in `Commands <../api/commands.html>`__ and `Queries <../api/queries.html>`__ sections, or use `client libraries <../guides/libraries.html>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:222
msgid "An ordered set of `commands <#command>`__, which is applied to the ledger atomically. Any nonvalid command within a transaction leads to rejection of the whole transaction during the validation process."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:314
msgid "Validator"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:316
msgid "There are two kinds of validation - stateless and stateful."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:319
msgid "Stateless Validation"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:321
msgid "Performed in `Torii <#torii>`__. Checks if an object is well-formed, including the signatures."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:325
msgid "Stateful Validation"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:327
msgid "Performed in `Verified Proposal Creator <#verified-proposal-creator>`__. Validates against `World State View <#world-state-view>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:331
msgid "Verified Proposal Creator"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:333
msgid "Internal Iroha component that performs `stateful validation <#stateful-validation>`_ of `transactions <#transaction>`__ contained in received `proposal <#proposal>`__. On the basis of transactions that have been passed stateful validation **verified proposal** will be created and passed to `Block Creator <#block-creator>`__. All the transactions that have not passed stateful validation will be dropped and not included in a verified proposal."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:341
msgid "World State View"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:343
msgid "WSV reflects the current state of the system, can be considered as a snapshot. For example, WSV holds information about an amount of `assets <#asset>`__ that an `account <#account>`__ has at the moment but does not contain any info history of `transaction <#transaction>`__ flow."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:348
msgid "https://en.bitcoin.it/wiki/Block"
msgstr ""

#: ../iroha/docs/source/core_concepts/index.rst:8
msgid "Docs are constantly updated and this section is going to be improved. Check glossary page while contents are elaborated."
msgstr ""

#: ../iroha/docs/source/guides/libraries.rst:2
msgid "Client Libraries"
msgstr ""

#: ../iroha/docs/source/maintenance/index.rst:9
msgid "Contents are missing for now. Please check deploy/ansible folder and README.md file in it."
msgstr ""

#: ../iroha/docs/source/index.rst:4
msgid "2018-03-30"
msgstr ""

#: ../iroha/docs/source/overview.rst:7
msgid "Simple deployment and maintenance"
msgstr ""

#: ../iroha/docs/source/overview.rst:8
msgid "Variety of libraries for developers"
msgstr ""

#: ../iroha/docs/source/overview.rst:9
msgid "Role-based access control"
msgstr ""

#: ../iroha/docs/source/overview.rst:10
msgid "Modular design, driven by command–query separation principle"
msgstr ""

#: ../iroha/docs/source/overview.rst:11
msgid "Assets and identity management"
msgstr ""

#: ../iroha/docs/source/overview.rst:13
msgid "In our quality model, we focus on and continuously improve:"
msgstr ""

#: ../iroha/docs/source/overview.rst:15
msgid "Reliability (fault tolerance, recoverability)"
msgstr ""

#: ../iroha/docs/source/overview.rst:16
msgid "Performance Efficiency (in particular time-behavior and resource utilization)"
msgstr ""

#: ../iroha/docs/source/overview.rst:17
msgid "Usability (learnability, user error protection, appropriateness recognisability)"
msgstr ""

#: ../iroha/docs/source/overview.rst:20
msgid "Where can Iroha be used?"
msgstr ""

#: ../iroha/docs/source/overview.rst:22
msgid "Hyperledger Iroha is a general purpose permissioned blockchain system that can be used to manage digital assets, identity, and serialized data. This can be useful for applications such as interbank settlement, central bank digital currencies, payment systems, national IDs, and logistics, among others."
msgstr ""

#: ../iroha/docs/source/overview.rst:25
msgid "For a detailed description please check our `Use Case Scenarios section <http://iroha.readthedocs.io/en/latest/use_cases/>`_."
msgstr ""

#: ../iroha/docs/source/overview.rst:30
msgid "Bitcoin and Ethereum are designed to be permissionless ledgers where anyone can join and access all the data. They also have native cryptocurrencies that are required to interact with the systems."
msgstr ""

#: ../iroha/docs/source/overview.rst:33
msgid "In Iroha, there is no native cryptocurrency. Instead, to meet the needs of enterprises, system interaction is permissioned, meaning that only people with requisite access can interact with the system. Additionally, queries are also permissioned, such that access to all the data can be controlled."
msgstr ""

#: ../iroha/docs/source/overview.rst:36
msgid "One major difference from Ethereum, in particular, is that Hyperledger Iroha allows users to perform common functions, such as creating and transferring digital assets, by using prebuilt commands that are in the system. This negates the need to write cumbersome and hard to test smart contracts, enabling developers to complete simple tasks faster and with less risk."
msgstr ""

#: ../iroha/docs/source/overview.rst:42
msgid "Iroha has a novel, Byzantine fault tolerant consensus algorithm (called YAC [#f1]_) that is high-performance and allows for finality of transactions with low latency. Other frameworks either focus more on probabilistic consensus algorithms, such as Nakamoto Consensus, or sacrifice Byzantine fault tolerance."
msgstr ""

#: ../iroha/docs/source/overview.rst:45
msgid "Also, Iroha's built-in commands are a major benefit compared to other platforms, since it is very simple to do common tasks such as create digital assets, register accounts, and transfer assets between accounts. Moreover, it narrows the attack vector, improving overall security of the system, as there are less things to fail."
msgstr ""

#: ../iroha/docs/source/overview.rst:48
msgid "Finally, Iroha is the only ledger that has a robust permission system, allowing permissions to be set for all commands, queries, and joining of the network."
msgstr ""

#: ../iroha/docs/source/overview.rst:50
msgid "Yet Another Consensus"
msgstr ""

#: ../iroha/docs/source/overview.rst:55
msgid "As per the latest review date of these docs, according to `Huawei Caliper <https://github.com/hyperledger/caliper>`_ testing tool, Iroha is capable of processing 45 transactions per second. Theoretically, this is not even close to the limit of the system, and we will continue constant optimizations in order to improve stability and performance."
msgstr ""

#: ../iroha/docs/source/overview.rst:55
msgid "In order to bring the power of blockchain into your application, you should think first of how it is going to interface with Iroha peers. A good start is to check `Core Concepts section <http://iroha.readthedocs.io/en/latest/core_concepts/>`_, explaining what exactly is a transaction and query, and how users of your application are supposed to interact with it."
msgstr ""

#: ../iroha/docs/source/overview.rst:58
msgid "We also have several client libraries which provide tools for developers to form building blocks, such as signatures, commands, send messages to Iroha peers and check the status."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:2
msgid "Android Library"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:4
msgid "The library, in essence, is a set of Java interfaces and binary libraries compiled for different architectures. Supported architectures are *arm, x86, x86_64*."
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:5
msgid "Where to Get"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:9
msgid "There are two ways to get Iroha library for Android:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:11
msgid "Grab via Gradle (see details in the section `Importing the Library from jcenter`_)"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:17
msgid "Compile the library on your own."
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:44
msgid "Both options are described in the following sections."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:22
msgid "Manual Build"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:24
msgid "The guide was tested on systems running Ubuntu 16.04 and macOS."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:30
msgid "Android NDK"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:30
msgid "Please `download <https://developer.android.com/ndk/downloads/index.html>`__ and unpack NDK to any suitable folder."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:33
msgid "Automake, Bison, Cmake"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:13
#: ../iroha/docs/source/guides/libraries/python.rst:63
msgid "Please refer to the page `Installing Dependencies <dependencies.html>`__ to get installation recipes for the tools."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:36
msgid "Building the Library"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:38
msgid "All you need now is to download `build script <https://github.com/hyperledger/iroha/blob/develop/shared_model/packages/android/android-build.sh>`__ ``android-build.sh`` to any empty folder and launch it there."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:41
msgid "Launch parameters are listed in the table below."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:44
msgid "Position"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:44
msgid "Required"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:44
msgid "Parameter Name"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:44
msgid "Possible Values"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:46
msgid "1"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:46
#: ../iroha/docs/source/guides/libraries/android.rst:49
#: ../iroha/docs/source/guides/libraries/android.rst:52
#: ../iroha/docs/source/guides/libraries/android.rst:55
msgid "Yes"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:46
msgid "**Platform Name**"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:46
msgid "Name of the target platform for binary part of the library."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:46
msgid "``arm64-v8a``, ``armeabi-v7a``, ``armeabi``, ``x86``, ``x86_64``"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:49
msgid "**Android API Level**"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:49
msgid "API level supported by your NDK. See the link under the table for details."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:49
msgid "``27`` for android-ndk-r16b"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:52
msgid "3"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:52
msgid "**Android NDK Path**"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:52
msgid "Full path to unpacked NDK. Please ensure that path does not contain spaces."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:52
msgid "``/home/user/lib/android-ndk-r16b``"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:55
msgid "4"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:55
msgid "**Java Package Name**"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:55
msgid "Package name that will be used for Java interfaces generation. Note that the binary also depends on chosen package name."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:55
msgid "``jp.co.soramitsu.iroha.android``"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:59
msgid "No"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:59
msgid "**Build Type**"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:59
msgid "Defines build mode of binary part of the library. ``Release`` is the default option."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:59
msgid "``Debug`` or ``Release``"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:64
msgid "`Android API levels <https://developer.android.com/guide/topics/manifest/uses-sdk-element.html#ApiLevels>`__"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:66
msgid "Please use the same root part of Java package name for library build as you use for your Android project. For example, your project is located in a package called ``com.mycompany.androidapp``, so please consider to build the library in a package, which name starts with ``com.mycompany.androidapp`` (e.g. ``com.mycompany.androidapp.iroha``)."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:70
msgid "A couple of launch commands examples:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:80
msgid "Build artefacts will be collected in ``lib`` directory near the script ``android-build.sh``. There will be two files - an archive ``bindings.zip`` and ``libirohajava.so``."
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:51
msgid "How to Use/Import"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:88
msgid "Importing the Library from jcenter"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:90
msgid "The easiest way to use Irohalib for Android is to import the library dependency from `jcenter <https://bintray.com/bulatmukhutdinov/maven/iroha-android-bindings>`__."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:92
msgid "All you need to do is a simple set of four steps:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:94
msgid "Add to your ``build.gradle`` file the following line:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:100
msgid "Copy the latest version of ``*.proto`` files from ``develop`` branch of Iroha `repository <https://github.com/hyperledger/iroha/tree/develop/schema>`__ into ``app/src/main/proto/`` folder inside your project in Android Studio."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:103
msgid "The resulting directory structure should look like as follows:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:126
msgid "Create additional directories ``app/src/main/proto/google/protobuf/`` and place there a file called ``empty.proto`` with the following contents:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:141
msgid "Add ``protobuf`` and ``grpc`` dependecies and protobuf configuration block into your ``build.gradle`` file."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:186
msgid "How to Use Manually Built Library"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:188
msgid "Create directory structure inside your Android project according to the package name of build library. Put there all the ``.java`` files from ``bindings.zip`` archive. For example, the path could be ``app/src/main/java/com/mycompany/iroha`` if you built the library with ``com.mycompany.iroha`` package name."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:193
msgid "Create directory ``app/src/main/jniLibs/<platform>`` where ``<platform>`` is the name of target platform (e.g. ``arm64-v8a``). Put there ``libirohajava.so``. Repeat this step for all required platforms (in this case you need to build the library for each platform)."
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:197
msgid "Repeat steps 2-4 from the previous section `Importing the Library from jcenter`_."
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:102
msgid "Example Code"
msgstr ""

#: ../iroha/docs/source/guides/libraries/android.rst:203
msgid "Explore ``bindings`` branch of `iroha-android <https://github.com/hyperledger/iroha-android/tree/bindings>`__ repository to get source code and view sample application."
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:2
msgid "Java Library"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:7
msgid "Java 6"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:8
msgid "Gradle"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:58
msgid "Build Process"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:59
msgid "Clone Iroha repository"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:20
msgid "For the latest version checkout a ``develop`` branch by adding ``-b develop`` parameter."
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:23
msgid "Now we need to build our Java native library. Run ``example/java/build_library.sh``, which will take care of it."
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:31
msgid "``build_library.sh`` script creates a ``dist`` folder with files, needed in :ref:`java-how-to-use` section."
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:37
msgid "How to Use"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:39
msgid "There are two ways of adding the Java library to your project:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:41
msgid "Import Java bindings through Maven Central"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:42
msgid "Compile Java bindings manually"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:47
msgid "Import Java Bindings from Maven Central"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:49
msgid "First of all, you need to copy ``example/java/dist/libirohajava.jnilib`` to the root folder of your project."
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:56
msgid "If you use **Gradle**, add the following line to your ``build.gradle`` file:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:58
#: ../iroha/docs/source/guides/libraries/java.rst:98
msgid "build.gradle"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:65
#: ../iroha/docs/source/guides/libraries/java.rst:114
msgid "pom.xml"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:75
msgid "Set the latest version number from our `Maven repository <https://mvnrepository.com/artifact/jp.co.soramitsu/iroha>`_"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:79
msgid "Compiling Java Bindings Manually"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:81
msgid "Java bindings were compiled with ``example/java/build_library.sh`` in `Build Process` section. You need to copy ``example/java/dist/libirohajava.jnilib`` to the root folder of your project:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:89
msgid "If you use **Gradle**, you need to copy ``example/java/dist/iroha_lib.jar`` to the ``libs`` folder of your project"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:96
msgid "Then please add the following to your ``build.gradle`` file:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:112
msgid "After it please add this to your ``pom.xml``:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:126
msgid "Explore ``example/java/TransactionExample.java`` file to get an idea of how to work with a library."
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:81
msgid "To run this example, you need an Iroha node up and running. Please check out :ref:`getting-started` if you want to learn how to start it."
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:85
msgid "Running the Example"
msgstr ""

#: ../iroha/docs/source/guides/libraries/java.rst:136
msgid "To start the example, you need to build the example:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:96
msgid "Now, to run this example please write:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:2
msgid "Node.js Library"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:3
msgid "Please note that Node.js library is under heavy testing now and problems `might` occur. Don't hesitate to report them to us."
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:6
msgid "There are two main ways of obtaining the Node.js library. If you are a happy macOS or Linux user, you can install it `through NPM <#installing-through-npm>`_. If your system is not yet supported or you want to try the latest version, you can `build this library manually <#building-manually>`_."
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:14
msgid "Node.js (>=7) (you can try using lower versions though)."
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:17
msgid "Installing Through NPM"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:18
msgid "If you are a happy macOS or Linux user, you can install the library from `NPM repository <https://www.npmjs.com/package/iroha-lib>`_ using NPM"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:25
msgid "Now you can import it in your project"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:32
msgid "Building Manually"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:33
msgid "You need this section if you want to build iroha-lib manually for example if your architecture/OS is not supported yet."
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:38
msgid "CMake (>=3.8.2)"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:39
msgid "Protobuf (>=3.5.1)"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:40
msgid "Boost (>=1.65.1)"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:42
msgid "macOS users can install dependencies with following commands:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:50
msgid "If you have SWIG already installed, you **MUST** install patched 3.0.12 version instead using `this patch <https://patch-diff.githubusercontent.com/raw/swig/swig/pull/968.patch>`_. The current version of SWIG doesn't support Node.js versions higher than 6. Also you can just delete the global installed SWIG and iroha will pull and build it automatically."
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:65
msgid "Go to the NPM package directory and start the build process"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:72
msgid "That's all. You can use the library now."
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:76
msgid "Explore ``example/node/index.js`` file to get an idea of how to work with a library."
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:86
msgid "To start the example, you need to install all its dependencies (basically ``iroha-lib``)"
msgstr ""

#: ../iroha/docs/source/guides/libraries/nodejs.rst:93
msgid "if you have built the library manually, please change import paths to ``path-to-iroha/shared_model/packages/javascript`` in index.js"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:2
msgid "Python Library"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:7
msgid "There are two ways to get Iroha library for Python: via pip and manual compilation from source code. The installation via pip do the same steps as manual compilation so for both of them you need to install all of the prerequisites."
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:13
msgid "CMake, git, g++, boost, swig, protobuf, python"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:16
msgid "Install Iroha Python Libraries"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:18
msgid "Via PIP"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:24
msgid "For the latest version"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:30
msgid "Source code"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:37
msgid "For the latest version checkout to develop branch by adding *-b develop* parameter."
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:48
msgid "After this you can find Iroha python library in **iroha/build/shared_model/bindings** folder, where you have previously cloned repository."
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:54
msgid "Compile Protobuf Modules of Iroha from Schema Files"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:56
msgid "Iroha communicates with users through protobuf messages. In order to send transactions and queries to Iroha node you need to get python module for generating protobuf messages. First of all you need to clone schema folder of Iroha repository. If you have already cloned Iroha repository in the previous step, just use schema folder from there."
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:63
msgid "protobuf, pip"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:66
msgid "Building Protobuf Files"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:81
msgid "Protobuf files can be found in **iroha-schema** folder ('\\*_pb2\\*.py' files)"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:83
msgid "In order to specify Iroha libraries location:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:91
msgid "Import Iroha and all of the protobuf modules that you need:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:106
msgid "Work with byte arrays is different in Python 2 and Python 3. Due to this fact, the work with hashes and blobs is different in the examples. Given examples work fine with both versions of Python."
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:108
msgid "Import Iroha and schema classes, generated from Iroha protobuf:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:120
msgid "Get Iroha objects:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:130
msgid "Read public and private keys:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:138
msgid "Print transaction status with synchronous simple call:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:174
msgid "Or streaming call:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:186
msgid "Send transactions to Iroha:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:206
msgid "Send query to Iroha and receive a responce:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:228
msgid "Create domain and asset:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:241
msgid "Create asset quantity:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:253
msgid "Create account:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:267
msgid "Send asset:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:279
msgid "Get asset info:"
msgstr ""

#: ../iroha/docs/source/guides/libraries/python.rst:301
msgid "Get account asset:"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:2
#: ../iroha/docs/source/guides/build.rst:145
msgid "Building Iroha"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:4
msgid "In this guide we will learn how to install all dependencies, required to build Iroha and how to build it."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:8
msgid "Preparing the Environment"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:10
msgid "In order to successfully build Iroha, we need to configure the environment. There are several ways to do it and we will describe all of them."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:13
msgid "Currently, we support Unix-like systems (we are basically targeting popular Linux distros and macOS). If you happen to have Windows or you don't want to spend time installing all dependencies you might want to consider using Docker environment. Also, Windows users might consider using `WSL <https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux>`_"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:19
msgid "Having troubles? Check FAQ section or communicate to us directly, in case you were stuck on something. We don't expect this to happen, but some issues with an environment are possible."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:25
msgid "You don't need Docker to run Iroha, it is just one of the possible choices."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:28
msgid "First of all, you need to install ``docker`` and ``docker-compose``. You can read how to install it on a `Docker's website <https://www.docker.com/community-edition/>`_"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:32
msgid "Please, use the latest available docker daemon and docker-compose."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:34
msgid "Then you should clone the `Iroha repository <https://github.com/hyperledger/iroha>`_ to the directory of your choice."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:45
msgid "After it, you need to run the development environment. Run the ``scripts/run-iroha-dev.sh`` script:"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:52
msgid "Please make sure that Docker is running before executing the script. macOS users could find a Docker icon in system tray, Linux user could use ``systemctl start docker``"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:56
msgid "After you execute this script, following things happen:"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:58
msgid "1. The script checks if you don't have containers with Iroha already running. Successful completion finishes with the new container shell. 2. The script will download ``iroha-docker-develop`` and ``postgres`` images. ``iroha-docker-develop`` image contains all development dependencies and is based on top of ``ubuntu:16.04``. ``postgres`` image is required for starting and running Iroha. 3. Two containers are created and launched. 4. The user is attached to the interactive environment for development and testing with ``iroha`` folder mounted from the host machine. Iroha folder is mounted to ``/opt/iroha`` in Docker container."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:69
msgid "Now your are ready to build Iroha! Please go to `Building Iroha` section."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:72
msgid "Linux"
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:165
msgid "Boost"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:77
msgid "Iroha requires Boost of at least 1.65 version. To install Boost libraries (``libboost-all-dev``), use `current release <http://www.boost.org/users/download/>`_ from Boost webpage. The only dependencies are system and filesystem, so use ``./bootstrap.sh --with-libraries=system,filesystem`` when you are building the project."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:85
msgid "Other Dependencies"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:87
msgid "To build Iroha, you need following packages:"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:89
msgid "``build-essential`` ``automake`` ``libtool`` ``libssl-dev`` ``zlib1g-dev`` ``libc6-dbg`` ``golang`` ``git`` ``tar`` ``gzip`` ``ca-certificates`` ``wget`` ``curl`` ``file`` ``unzip`` ``python`` ``cmake``"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:93
msgid "Use this code to install dependencies on Debian-based Linux distro."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:106
msgid "If you are willing to actively develop Iroha and to build shared libraries, please consider installing the `latest release <https://cmake.org/download/>`_ of CMake."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:111
msgid "macOS"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:113
msgid "If you want to build it from scratch and actively develop it, please use this code to install all dependencies with Homebrew."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:121
msgid "To install the Homebrew itself please run"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:123
msgid "``ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/homebrew/install/master/install)\"``"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:129
msgid "Cloning the Repository"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:130
msgid "Clone the `Iroha repository <https://github.com/hyperledger/iroha>`_ to the directory of your choice."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:138
msgid "If you have installed the prerequisites with Docker, you don't need to clone Iroha again, because when you run ``run-iroha-dev.sh`` it attaches to Iroha source code folder. Feel free to edit source code files with your host environment and build it within docker container."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:146
msgid "To build Iroha, use those commands"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:152
msgid "Alternatively, you can use these shorthand parameters (they are not documented though)"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:160
msgid "On macOS ``$(nproc)`` variable does not work. Check the number of logical cores with ``sysctl -n hw.ncpu`` and put it explicitly in the command above, e.g. ``cmake --build build -- -j4``"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:165
msgid "CMake Parameters"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:167
msgid "We use CMake to build platform-dependent build files. It has numerous flags for configuring the final build. Note that besides the listed parameters cmake's variables can be useful as well. Also as long as this page can be deprecated (or just not complete) you can browse custom flags via ``cmake -L``, ``cmake-gui``, or ``ccmake``."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:173
msgid "You can specify parameters at the cmake configuring stage (e.g cmake -DTESTING=ON)."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:177
msgid "Main Parameters"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:180
#: ../iroha/docs/source/guides/build.rst:197
msgid "Possible values"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:180
#: ../iroha/docs/source/guides/build.rst:197
msgid "Default"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:182
msgid "TESTING"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:182
#: ../iroha/docs/source/guides/build.rst:199
msgid "ON/OFF"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:182
#: ../iroha/docs/source/guides/build.rst:199
msgid "ON"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:182
msgid "Enables or disables build of the tests"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:184
msgid "BENCHMARKING"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:184
#: ../iroha/docs/source/guides/build.rst:186
#: ../iroha/docs/source/guides/build.rst:188
#: ../iroha/docs/source/guides/build.rst:190
#: ../iroha/docs/source/guides/build.rst:201
#: ../iroha/docs/source/guides/build.rst:203
#: ../iroha/docs/source/guides/build.rst:205
#: ../iroha/docs/source/guides/build.rst:207
msgid "OFF"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:184
msgid "Enables or disables build of the Google Benchmarks library"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:186
msgid "COVERAGE"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:186
msgid "Enables or disables lcov setting for code coverage generation"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:188
msgid "SWIG_PYTHON"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:188
msgid "Enables of disables the library building and Python bindings"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:190
msgid "SWIG_JAVA"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:190
msgid "Enables of disables the library building and Java bindings"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:194
msgid "Packaging Specific Parameters"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:199
msgid "ENABLE_LIBS_PACKAGING"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:199
msgid "Enables or disables all types of packaging"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:201
msgid "PACKAGE_ZIP"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:201
msgid "Enables or disables zip packaging"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:203
msgid "PACKAGE_TGZ"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:203
msgid "Enables or disables tar.gz packaging"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:205
msgid "PACKAGE_RPM"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:205
msgid "Enables or disables rpm packaging"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:207
msgid "PACKAGE_DEB"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:207
msgid "Enables or disables deb packaging"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:211
msgid "Running Tests (optional)"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:213
msgid "After building Iroha, it is a good idea to run tests to check the operability of the daemon. You can run tests with this code:"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:220
msgid "Alternatively, you can run following command in the ``build`` folder"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:227
msgid "Some of the tests will fail without PostgreSQL storage running, so if you are not using ``scripts/run-iroha-dev.sh`` script please run Docker container or create a local connection with following parameters:"
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:2
msgid "Installing Dependencies"
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:4
msgid "This page contains references and guides about installation of various tools you may need during build of different targets of Iroha project."
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:7
msgid "Please note that most likely you do not need to install all the listed tools. Some of them are required only for building specific versions of Iroha Client Library."
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:11
msgid "Automake"
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:14
#: ../iroha/docs/source/guides/dependencies.rst:26
#: ../iroha/docs/source/guides/dependencies.rst:40
#: ../iroha/docs/source/guides/dependencies.rst:69
#: ../iroha/docs/source/guides/dependencies.rst:81
#: ../iroha/docs/source/guides/dependencies.rst:124
#: ../iroha/docs/source/guides/dependencies.rst:168
#: ../iroha/docs/source/guides/dependencies.rst:191
msgid "Installation on Ubuntu"
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:23
msgid "Bison"
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:35
msgid "CMake"
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:37
msgid "Minimum required version is 3.8, but we recommend to install the latest available version (3.10.3 at the moment)."
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:42
msgid "Since Ubuntu repositories contain unsuitable version of CMake, you need to install the new one manually. Here is how to build and install CMake from sources."
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:57
#: ../iroha/docs/source/guides/dependencies.rst:101
#: ../iroha/docs/source/guides/dependencies.rst:144
#: ../iroha/docs/source/guides/dependencies.rst:181
#: ../iroha/docs/source/guides/dependencies.rst:205
#: ../iroha/docs/source/guides/dependencies.rst:223
msgid "Installation on macOS"
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:66
msgid "Git"
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:78
msgid "Python"
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:83
#: ../iroha/docs/source/guides/dependencies.rst:103
#: ../iroha/docs/source/guides/dependencies.rst:126
#: ../iroha/docs/source/guides/dependencies.rst:146
msgid "For Python 2:"
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:92
#: ../iroha/docs/source/guides/dependencies.rst:112
#: ../iroha/docs/source/guides/dependencies.rst:135
#: ../iroha/docs/source/guides/dependencies.rst:155
msgid "For Python 3:"
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:121
msgid "PIP"
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:188
msgid "SWIG"
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:220
msgid "Protobuf"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:565
msgid "Please note that due to a known issue you would not get any exception if you pass invalid precision value. Valid range is: 0 <= precision <= 255"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "0 <= precision <= 255"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "RolePermission"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "id of the account to which the rights are granted"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "GrantablePermission name"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "name of grantable permission"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:459
msgid "If there was a value for a given key already in the storage then it will be replaced with the new value"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "id of the account to which the key-value information was set"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "number of signatories needed to be included within a transaction from this account"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "ID of the account to withdraw the asset from"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "ID of the account to send the asset to"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "ID of the asset to transfer"
msgstr ""

#: ../iroha/docs/source/api/commands.rst:1
msgid "Message to attach to the transfer"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:163
msgid "Get Pending Transactions"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:168
msgid "GetPendingTransactions is used for retrieving a list of pending (not fully signed) `multisignature transactions <../core_concepts/glossary.html#multisignature-transactions>`_ or `batches of transactions <../core_concepts/glossary.html#batch-of-transactions>`__ issued by account of query creator."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:191
msgid "The response contains a list of `pending transactions <../core_concepts/glossary.html#pending-transactions>`_."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "an array of pending transactions"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Pending transactions"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:206
msgid "In a case when a list of transactions per account is needed, `GetAccountTransactions` query can be formed. .. note:: This query uses pagination for query responses."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Page size"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "size of the page to be returned by the query, if the response contains fewer transactions than a page size, then next tx hash will be empty in response"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "page_size > 0"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "First tx hash"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "hash of the first transaction in the page. If that field is not set — then the first transactions are returned"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "hash in hex format"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "bddd58404d1315e0eb27902c5d7c8eb0602c16238f005773df406bc191308929"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "All transactions size"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "total number of transactions created by the given account"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "100"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Next transaction hash"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "hash pointing to the next transaction after the last transaction in the page. Empty if a page contains the last transaction for the given account"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:267
msgid "`GetAccountAssetTransactions` query returns all transactions associated with given account and asset. .. note:: This query uses pagination for query responses."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "total number of transactions for given account and asset"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "hash pointing to the next transaction after the last transaction in the page. Empty if a page contains the last transaction for given account and asset"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:330
msgid "To get the state of all assets in an account (a balance), `GetAccountAssets` query can be used."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:376
msgid "Get Account Detail"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:381
msgid "To get details of the account, `GetAccountDetail` query can be used. Account details are key-value pairs, splitted into writers categories. Writers are accounts, which added the corresponding account detail. Example of such structure is:"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:396
msgid "Here, one can see four account details - \"age\", \"hobbies\" and \"sports\" - added by two writers - \"account@a_domain\" and \"account@b_domain\". All of these details, obviously, are about the same account."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:416
msgid "Pay attention, that all fields are optional. Reasons will be described later."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "account id to get details from"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "account@domain"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "key, under which to get details"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "string"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "age"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Writer"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "account id of writer"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "Detail"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "key-value pairs with account details"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:1
msgid "see below"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:448
msgid "Usage Examples"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:450
msgid "Let's again consider the example of details from the beginning and see, how different variants of `GetAccountDetail` queries will change the resulting response."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:465
msgid "**account_id is not set**"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:467
msgid "If account_id is not set - other fields can be empty or not - it will automatically be substituted with query creator's account, which will lead to one of the next cases."
msgstr ""

#: ../iroha/docs/source/api/queries.rst:469
msgid "**only account_id is set**"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:471
msgid "In this case, all details about that account are going to be returned, leading to the following response:"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:486
msgid "**account_id and key are set**"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:488
msgid "Here, details added by all writers under the key are going to be returned. For example, if we asked for the key \"age\", that's the response we would get:"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:501
msgid "**account_id and writer are set**"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:503
msgid "Now, the response will contain all details about this account, added by one specific writer. For example, if we asked for writer \"account@b_domain\", we would get:"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:514
msgid "**account_id, key and writer are set**"
msgstr ""

#: ../iroha/docs/source/api/queries.rst:516
msgid "Lastly, if all three field are set, result will contain details, added the specific writer and under the specific key, for example, if we asked for key \"age\" and writer \"account@a_domain\", we would get:"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:148
msgid "`List of Iroha permissions <../maintenance/permissions.html>`_."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:182
msgid "In the context of transactions signing, quorum number is a minimum amount of signatures required to consider a transaction signed. The default value is 1. Each account can link additional public keys and increase own quorum number."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:193
msgid "Signatory"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:195
msgid "Represents an entity that can confirm multisignature transactions for some `account <#account>`__. It can be attached to account via `AddSignatory <../api/commands.html#add-signatory>`__ and detached via `RemoveSignatory <../api/commands.html#remove-signatory>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:227
msgid "Transaction Structure"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:229
msgid "**Payload** stores all transaction fields, except signatures:"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:231
msgid "Time of creation (unix time, in milliseconds)"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:232
msgid "Account ID of transaction creator (username@domain)"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:233
msgid "Quorum field (indicates required number of signatures)"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:234
msgid "Repeated commands which are described in details in `commands section <../api/commands.html>`__"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:235
msgid "Batch meta information (optional part). See `Batch of Transactions`_ for details"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:238
msgid "**Signatures** contain one or many signatures (ed25519 public key + signature)"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:241
msgid "Reduced Transaction Hash"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:243
msgid "Reduced hash is calculated over transaction payload excluding batch meta information. Used in `Batch of Transactions`_."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:248
msgid "Transaction Statuses"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:250
msgid "Hyperledger Iroha supports both push and pull interaction mode with a client. A client that uses pull mode requests status updates about transactions from Iroha peer by sending transaction hashes and awaiting a response. In contrary push interaction is done over the listening of an event stream for each transaction. In any of these modes, the set of transaction statuses is the same:"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:259
msgid "Transaction Status Set"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:261
msgid "NOT_RECEIVED: requested peer does not have this transaction."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:262
msgid "MST_EXPIRED: this transactions is a part of MST pipeline and has expired."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:263
msgid "STATELESS_VALIDATION_FAILED: the transaction was formed with some fields, not meeting stateless validation constraints. This status is returned to a client, who formed transaction, right after the transaction was sent. It would also return the reason — what rule was violated."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:264
msgid "STATELESS_VALIDATION_SUCCESS: the transaction has successfully passed stateless validation. This status is returned to a client, who formed transaction, right after the transaction was sent."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:265
msgid "STATEFUL_VALIDATION_FAILED: the transaction has commands, which violate validation rules, checking state of the chain (e.g. asset balance, account permissions, etc.). It would also return the reason — what rule was violated."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:266
msgid "STATEFUL_VALIDATION_SUCCESS: the transaction has successfully passed stateful validation."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:267
msgid "COMMITTED: the transaction is the part of a block, which gained enough votes and is in the block store at the moment."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:270
msgid "Pending Transactions"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:272
msgid "Any transaction that has lesser signatures at the moment than `quorum`_ of transaction creator account is considered as pending. Pending transaction will be submitted for `stateful validation`_ as soon as `multisignature <#multisignature-transactions>`__ mechanism will collect required amount of signatures for quorum."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:275
msgid "Transaction that already has quorum of signatures can also be considered as pending in cases when the transaction is a part of `batch of transactions`_ and there is a not fully signed transaction."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:279
msgid "Batch of Transactions"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:281
msgid "*The feature is to be released.*"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:283
msgid "Transactions batch is a feature that allows sending several transactions to Iroha at once preserving their order."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:285
msgid "Each transaction within a batch includes batch meta information. Batch meta contains batch type identifier (atomic or ordered) and a list of `reduced hashes <#reduced-transaction-hash>`_ of all transactions within a batch. The order of hashes prescribes transactions sequence."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:290
msgid "Batch can contain transactions created by different accounts. Any transaction within a batch can require single or `multiple <#multisignature-transactions>`__ signatures (depends on quorum set for an account of transaction creator). At least one transaction inside a batch should have at least one signature to let the batch pass `stateless validation`_."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:295
msgid "Atomic Batch"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:297
msgid "All the transactions within an atomic batch should pass `stateful validation`_ for the batch to be applied to a ledger."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:300
msgid "Ordered Batch"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:302
msgid "Ordered batch preserves only the sequence of transactions applying to a ledger. All the transactions that able to pass stateful validation within a batch will be applied to a ledger. Validation failure of one transaction would NOT directly imply the failure of the whole batch."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:307
msgid "Multisignature Transactions"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:309
msgid "A transaction which has the `quorum`_ greater than one is considered as multisignature (also called mst). To achieve `stateful validity <#stateful-validation>`__ the confirmation is required by the `signatories <#signatory>`__ of the creator account. These participants need to send the same transaction with their signature."
msgstr ""

#: ../iroha/docs/source/core_concepts/index.rst:13
msgid "Sections"
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:74
msgid "To keep things simple, in this guide we will create a network containing only one node. To understand how to run several peers, follow `this guide. <github.com/hyperledger/iroha/tree/master/deploy/ansible>`_"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:41
msgid "``--depth=1`` option allows us to download only latest commit and save some time and bandwidth. If you want to get a full commit history, you can omit this option."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:119
msgid "``--entrypoint=/bin/bash \\`` Because ``hyperledger/iroha`` has the custom script which runs after starting the container, we want to override it so we can start Iroha Daemon manually."
msgstr ""

#: ../iroha/docs/source/getting_started/index.rst:122
msgid "``hyperledger/iroha:develop`` is the image which has the ``develop`` branch."
msgstr ""

#: ../iroha/docs/source/guides/deployment.rst:57
msgid "Specifying a new genesis block using `--genesis_block` with blocks already present in ledger requires `--overwrite_ledger` flag to be set. The daemon will fail otherwise."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:85
msgid "Fund Management"
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:87
msgid "With the support of multisignature transactions it is possible to maintain a fund by many managers. In that scheme investment can only be made after the confirmation of the quorum participants."
msgstr ""

#: ../iroha/docs/source/use_cases/index.rst:92
msgid "The fund assets should be held at one account. Its signatories should be fund managers, who are dealing with investments and portfolio distributions. That can be added via ``AddSignatory`` command. All of the assets should be held within one account, which signatories represent the fund managers. Thus the concrete exchanges can be performed with the multisignature transaction so that everyone will decide on a particular financial decision. The one may confirm a deal by sending the original transaction and one of managers' signature. Iroha will maintain the transaction sending so that the deal will not be completed until it receives the required number of confirmation, which is parametrized with the transaction quorum parameter."
msgstr ""

#: ../iroha/docs/source/guides/configuration.rst:54
msgid "``mst_enable`` enables or disables multisignature transaction support in Iroha. We recommend setting this parameter to ``false`` at the moment until you really need it."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:58
msgid "1. The script checks if you don't have containers with Iroha already running. Successful completion finishes with the new container shell. 2. The script will download ``hyperledger/iroha:develop-build`` and ``postgres`` images. ``hyperledger/iroha:develop-build`` image contains all development dependencies and is based on top of ``ubuntu:16.04``. ``postgres`` image is required for starting and running Iroha. 3. Two containers are created and launched. 4. The user is attached to the interactive environment for development and testing with ``iroha`` folder mounted from the host machine. Iroha folder is mounted to ``/opt/iroha`` in Docker container."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:77
msgid "Iroha requires Boost of at least 1.65 version. To install Boost libraries (``libboost-all-dev``), use `current release <http://www.boost.org/users/download/>`_ from Boost webpage. The only dependencies are thread, system and filesystem, so use ``./bootstrap.sh --with-libraries=thread,system,filesystem`` when you are building the project."
msgstr ""

#: ../iroha/docs/source/guides/dependencies.rst:37
msgid "Minimum required version is 3.11.4, but we recommend to install the latest available version (3.12.0 at the moment)."
msgstr ""

