# SOME DESCRIPTIVE TITLE.
# Copyright (C) Creative Commons Attribution-NonCommercial 3.0 Unported
# This file is distributed under the same license as the Iroha package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Iroha 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-12-16 20:34+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../iroha/docs/source/core_concepts/glossary.rst:2
msgid "Account"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:4
msgid ""
"An Iroha entity that is able to perform specified set of actions. Each "
"account belongs to one of existing `domains <#domain>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:7
msgid ""
"An account has some number of `roles <#role>`__ (can be none) — which is "
"a collection of permissions. Only `grantable permissions <#grantable-"
"permission>`__ are assigned to an account directly."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:11
msgid "Ametsuchi"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:13
msgid ""
"Iroha storage component, which stores blocks and a state generated from "
"blocks, called `World State View <#world-state-view>`__. There is no way "
"for the `client <#client>`__ to directly interact with Ametsuchi."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:19
msgid "Asset"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:21
msgid ""
"Any countable commodity or value. Each asset is related to one of "
"existing `domains <#domain>`__. For example, an asset can represent any "
"kind of such units - currency unit, a bar of gold, real estate unit, etc."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:27
msgid "Block"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:29
msgid ""
"Transaction data is permanently recorded in files called blocks. Blocks "
"are organized into a linear sequence over time (also known as the block "
"chain) [#f1]_."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:32
msgid ""
"Blocks are signed with the cryptographic signatures of Iroha `peers "
"<#peer>`__, voting for this block during `consensus <#consensus>`__. "
"Signable content is called payload, so the structure of a block looks "
"like this:"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:36
msgid "*Outside payload*"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:38
msgid "hash — SHA3-512 hash of block protobuf payload"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:39
msgid ""
"signatures — signatures of peers, which voted for the block during "
"consensus round"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:41
msgid "*Inside payload*"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:43
msgid "height — a number of blocks in the chain up to the block"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:44
msgid "timestamp — Unix time (in milliseconds) of block forming by a peer"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:45
msgid ""
"body — transactions, which successfully passed validation and consensus "
"step"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:46
msgid "transactions quantity"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:47
msgid "previous hash of a block"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:50
msgid "Block Creator"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:52
msgid ""
"System component that forms a block from a set of transactions that have "
"been passed `stateless <#stateless-validation>`__ and `stateful "
"<#stateful-validation>`__ validation for further propagation to "
"`consensus <#consensus>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:57
msgid "Client"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:59
msgid "Any application that uses Iroha is treated as a client."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:61
msgid ""
"A distinctive feature of Iroha is that all clients are using simple "
"client-server abstractions when they interact with a peer network: they "
"don't use any abstractions which are specific for blockchain-related "
"systems. For example, in Bitcoin clients have to validate blocks, or in "
"Fabric they need to poll several peers to make sure that a transaction "
"was written in a block, whereas in Iroha a client interacts with any peer"
" similarly to a single server."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:69
msgid "Command"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:71
msgid ""
"A command is an intention to change the `state <#world-state-view>`__. "
"For example, in order to create a new `role <#role>`__ in Iroha you have "
"to issue `Create role <../api/commands.html#create-role>`__ command."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:76
msgid "Consensus"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:78
msgid ""
"A consensus algorithm is a process in computer science used to achieve "
"agreement on a single data value among distributed processes or systems. "
"Consensus algorithms are designed to achieve reliability in a network "
"involving multiple unreliable nodes. Solving that issue -- known as the "
"consensus problem -- is important in distributed computing and multi-"
"agent systems."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:85
msgid "*Consensus, as an algorithm*"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:87
msgid ""
"An algorithm to achieve agreement on a block among peers in the network. "
"By having it in the system, reliability is increased."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:89
msgid "*Consensus, as a component*"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:91
msgid ""
"Preserves consistent state among the `peers <#peer>`__ within a peer "
"network. Iroha uses own consensus algorithm called Yet Another Consensus "
"(aka YAC). Distinctive features of this algorithm are its scalability, "
"performance, and `Byzantine fault tolerance "
"<https://en.wikipedia.org/wiki/Byzantine_fault_tolerance>`_. If there are"
" missing blocks, they will be downloaded from another peer via "
"`Synchronizer <#synchronizer>`__. Committed blocks are stored in "
"`Ametsuchi <#ametsuchi>`__ block storage."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:99
msgid "Domain"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:101
msgid ""
"A named abstraction for grouping `accounts <#account>`__ and `assets "
"<#asset>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:104
msgid "Ordering Gate"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:106
msgid ""
"Internal Iroha component that passes `transactions <#transaction>`__ from"
" `Peer Communication Service <#peer-communication-service>`__ to "
"`Ordering Service <#ordering-service>`__. Ordering Gate eventually "
"recieves `proposals <#proposal>`__ from Ordering Service and sends them "
"to `Simulator <#simulator>`__ for `stateful validation <#stateful-"
"validation>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:112
msgid "Ordering Service"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:114
msgid ""
"Internal Iroha component that combines several `transactions "
"<#transaction>`__ that have been passed `stateless validation "
"<#stateless-validation>`__ into a `proposal <#proposal>`__. Proposal "
"creation could be triggered by one of the following events:"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:118
msgid "Time limit dedicated to transactions collection has expired."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:120
msgid ""
"Ordering service has received the maximum amount of transactions allowed "
"for a single proposal."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:122
msgid ""
"Both parameters (timeout and maximum size of proposal) are configurable "
"(check `environment-specific parameters <../guides/configuration.html"
"#environment-specific-parameters>`_ page)."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:124
msgid ""
"A common precondition for both triggers is that at least one transaction "
"should reach ordering service. Otherwise, no proposal will be formed."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:128
msgid "Peer"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:130
msgid ""
"A node that is a part of Iroha network. It participates in `consensus "
"<#consensus>`_ process."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:134
msgid "Peer Communication Service"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:136
msgid ""
"Internal component of Iroha - an intermediary that transmits `transaction"
" <#transaction>`__ from `Torii <#torii>`__ to `Ordering Gate <#ordering-"
"gate>`__. The main goal of PCS is to hide the complexity of interaction "
"with consensus implementation."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:142
msgid "Permission"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:144
msgid ""
"A named rule that gives the privilege to perform a command. Permission "
"**cannot** be granted to an `account <#account>`__ directly, instead, an "
"account has roles, which are the collection of permissions."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:148
msgid "`List of Iroha permissions <../maintenance/permissions.html>`_."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:151
msgid "Grantable Permission"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:153
msgid ""
"Only grantable permission is given to an `account <#account>`__ directly."
" An account that holds grantable permission is allowed to perform some "
"particular action on behalf of another account. For example, if the "
"account a@domain1 gives the account b@domain2 a permission that it can "
"transfer assets — then  b@domain2 can transfer assets of a@domain1 to "
"anyone."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:161
msgid "Proposal"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:163
msgid ""
"A set of `transactions <#transaction>`__ that have passed only `stateless"
" validation <#stateless-validation>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:167
msgid "Verified Proposal"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:169
msgid ""
"A set of transactions that have been passed `stateless <#stateless-"
"validation>`__ and `stateful <#stateful-validation>`__ validation, but "
"were not committed yet."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:173
msgid "Query"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:175
msgid ""
"A request to Iroha that does **not** change the `state <#world-state-"
"view>`__. By performing a query, a client can get request data from the "
"state, for example a balance of his account, a history of transactions, "
"etc."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:180
msgid "Quorum"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:182
msgid ""
"In the context of transactions signing, quorum number is a minimum amount"
" of signatures required to consider a transaction signed. The default "
"value is 1. Each account can link additional public keys and increase own"
" quorum number."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:188
msgid "Role"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:190
msgid "A named abstraction that holds a set of `permissions <#permission>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:193
msgid "Signatory"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:195
msgid ""
"Represents an entity that can confirm multisignature transactions for "
"some `account <#account>`__. It can be attached to account via "
"`AddSignatory <../api/commands.html#add-signatory>`__ and detached via "
"`RemoveSignatory <../api/commands.html#remove-signatory>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:199
msgid "Simulator"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:201
msgid "See `Verified Proposal Creator <#verified-proposal-creator>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:204
msgid "Synchronizer"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:206
msgid ""
"Is a part of `consensus <#consensus>`__. Adds missing blocks to `peers' "
"<#peer>`__ chains (downloads them from other peers)."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:210
msgid "Torii"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:212
msgid ""
"⛩. Entry point for `clients <#client>`__. Uses gRPC as a transport. In "
"order to interact with Iroha anyone can use gRPC endpoints, described in "
"`Commands <../api/commands.html>`__ and `Queries <../api/queries.html>`__"
" sections, or use `client libraries <../guides/libraries.html>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:220
msgid "Transaction"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:222
msgid ""
"An ordered set of `commands <#command>`__, which is applied to the ledger"
" atomically. Any nonvalid command within a transaction leads to rejection"
" of the whole transaction during the validation process."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:227
msgid "Transaction Structure"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:229
msgid "**Payload** stores all transaction fields, except signatures:"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:231
msgid "Time of creation (unix time, in milliseconds)"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:232
msgid "Account ID of transaction creator (username@domain)"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:233
msgid "Quorum field (indicates required number of signatures)"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:234
msgid ""
"Repeated commands which are described in details in `commands section "
"<../api/commands.html>`__"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:235
msgid ""
"Batch meta information (optional part). See `Batch of Transactions`_ for "
"details"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:238
msgid ""
"**Signatures** contain one or many signatures (ed25519 public key + "
"signature)"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:241
msgid "Reduced Transaction Hash"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:243
msgid ""
"Reduced hash is calculated over transaction payload excluding batch meta "
"information. Used in `Batch of Transactions`_."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:248
msgid "Transaction Statuses"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:250
msgid ""
"Hyperledger Iroha supports both push and pull interaction mode with a "
"client. A client that uses pull mode requests status updates about "
"transactions from Iroha peer by sending transaction hashes and awaiting a"
" response. In contrary push interaction is done over the listening of an "
"event stream for each transaction. In any of these modes, the set of "
"transaction statuses is the same:"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:259
msgid "Transaction Status Set"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:261
msgid "NOT_RECEIVED: requested peer does not have this transaction."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:262
msgid "MST_EXPIRED: this transactions is a part of MST pipeline and has expired."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:263
msgid ""
"STATELESS_VALIDATION_FAILED: the transaction was formed with some fields,"
" not meeting stateless validation constraints. This status is returned to"
" a client, who formed transaction, right after the transaction was sent. "
"It would also return the reason — what rule was violated."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:264
msgid ""
"STATELESS_VALIDATION_SUCCESS: the transaction has successfully passed "
"stateless validation. This status is returned to a client, who formed "
"transaction, right after the transaction was sent."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:265
msgid ""
"STATEFUL_VALIDATION_FAILED: the transaction has commands, which violate "
"validation rules, checking state of the chain (e.g. asset balance, "
"account permissions, etc.). It would also return the reason — what rule "
"was violated."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:266
msgid ""
"STATEFUL_VALIDATION_SUCCESS: the transaction has successfully passed "
"stateful validation."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:267
msgid ""
"COMMITTED: the transaction is the part of a block, which gained enough "
"votes and is in the block store at the moment."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:270
msgid "Pending Transactions"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:272
msgid ""
"Any transaction that has lesser signatures at the moment than `quorum`_ "
"of transaction creator account is considered as pending. Pending "
"transaction will be submitted for `stateful validation`_ as soon as "
"`multisignature <#multisignature-transactions>`__ mechanism will collect "
"required amount of signatures for quorum."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:275
msgid ""
"Transaction that already has quorum of signatures can also be considered "
"as pending in cases when the transaction is a part of `batch of "
"transactions`_ and there is a not fully signed transaction."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:279
msgid "Batch of Transactions"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:281
msgid "*The feature is to be released.*"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:283
msgid ""
"Transactions batch is a feature that allows sending several transactions "
"to Iroha at once preserving their order."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:285
msgid ""
"Each transaction within a batch includes batch meta information. Batch "
"meta contains batch type identifier (atomic or ordered) and a list of "
"`reduced hashes <#reduced-transaction-hash>`_ of all transactions within "
"a batch. The order of hashes prescribes transactions sequence."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:290
msgid ""
"Batch can contain transactions created by different accounts. Any "
"transaction within a batch can require single or `multiple "
"<#multisignature-transactions>`__ signatures (depends on quorum set for "
"an account of transaction creator). At least one transaction inside a "
"batch should have at least one signature to let the batch pass `stateless"
" validation`_."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:295
msgid "Atomic Batch"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:297
msgid ""
"All the transactions within an atomic batch should pass `stateful "
"validation`_ for the batch to be applied to a ledger."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:300
msgid "Ordered Batch"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:302
msgid ""
"Ordered batch preserves only the sequence of transactions applying to a "
"ledger. All the transactions that able to pass stateful validation within"
" a batch will be applied to a ledger. Validation failure of one "
"transaction would NOT directly imply the failure of the whole batch."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:307
msgid "Multisignature Transactions"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:309
msgid ""
"A transaction which has the `quorum`_ greater than one is considered as "
"multisignature (also called mst). To achieve `stateful validity "
"<#stateful-validation>`__ the confirmation is required by the "
"`signatories <#signatory>`__ of the creator account. These participants "
"need to send the same transaction with their signature."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:314
msgid "Validator"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:316
msgid "There are two kinds of validation - stateless and stateful."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:319
msgid "Stateless Validation"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:321
msgid ""
"Performed in `Torii <#torii>`__. Checks if an object is well-formed, "
"including the signatures."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:325
msgid "Stateful Validation"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:327
msgid ""
"Performed in `Verified Proposal Creator <#verified-proposal-creator>`__. "
"Validates against `World State View <#world-state-view>`__."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:331
msgid "Verified Proposal Creator"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:333
msgid ""
"Internal Iroha component that performs `stateful validation <#stateful-"
"validation>`_ of `transactions <#transaction>`__ contained in received "
"`proposal <#proposal>`__. On the basis of transactions that have been "
"passed stateful validation **verified proposal** will be created and "
"passed to `Block Creator <#block-creator>`__. All the transactions that "
"have not passed stateful validation will be dropped and not included in a"
" verified proposal."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:341
msgid "World State View"
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:343
msgid ""
"WSV reflects the current state of the system, can be considered as a "
"snapshot. For example, WSV holds information about an amount of `assets "
"<#asset>`__ that an `account <#account>`__ has at the moment but does not"
" contain any info history of `transaction <#transaction>`__ flow."
msgstr ""

#: ../iroha/docs/source/core_concepts/glossary.rst:348
msgid "https://en.bitcoin.it/wiki/Block"
msgstr ""

#~ msgid "A term"
#~ msgstr ""

#~ msgid "B term"
#~ msgstr ""

#~ msgid "C term"
#~ msgstr ""

#~ msgid "Remaining parts (WSV, etc.)"
#~ msgstr ""

