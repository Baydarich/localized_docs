# SOME DESCRIPTIVE TITLE.
# Copyright (C) Soramitsu Co., Ltd.
# This file is distributed under the same license as the Hyperledger Iroha
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Hyperledger Iroha \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-14 16:19+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../iroha/docs/source/guides/build.rst:2
#: ../iroha/docs/source/guides/build.rst:145
msgid "Building Iroha"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:4
msgid ""
"In this guide we will learn how to install all dependencies, required to "
"build Iroha and how to build it."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:8
msgid "Preparing the Environment"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:10
msgid ""
"In order to successfully build Iroha, we need to configure the "
"environment. There are several ways to do it and we will describe all of "
"them."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:13
msgid ""
"Currently, we support Unix-like systems (we are basically targeting "
"popular Linux distros and macOS). If you happen to have Windows or you "
"don't want to spend time installing all dependencies you might want to "
"consider using Docker environment. Also, Windows users might consider "
"using `WSL <https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux>`_"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:19
msgid ""
"Having troubles? Check FAQ section or communicate to us directly, in case"
" you were stuck on something. We don't expect this to happen, but some "
"issues with an environment are possible."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:24
msgid "Docker"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:25
msgid ""
"You don't need Docker to run Iroha, it is just one of the possible "
"choices."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:28
msgid ""
"First of all, you need to install ``docker`` and ``docker-compose``. You "
"can read how to install it on the `Docker's website "
"<https://www.docker.com/community-edition/>`_"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:32
msgid "Please, use the latest available docker daemon and docker-compose."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:34
msgid ""
"Then you should clone the `Iroha repository "
"<https://github.com/hyperledger/iroha>`_ to the directory of your choice."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:41
msgid ""
"``--depth=1`` option allows us to download only latest commit and save "
"some time and bandwidth. If you want to get a full commit history, you "
"can omit this option."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:45
msgid ""
"After it, you need to run the development environment. Run the ``scripts"
"/run-iroha-dev.sh`` script:"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:52
msgid ""
"Please make sure that Docker is running before executing the script. "
"macOS users could find a Docker icon in system tray, Linux user could use"
" ``systemctl start docker``"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:56
msgid "After you execute this script, following things happen:"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:58
msgid ""
"1. The script checks if you don't have containers with Iroha already "
"running. Successful completion finishes with the new container shell. 2. "
"The script will download ``hyperledger/iroha:develop-build`` and "
"``postgres`` images. ``hyperledger/iroha:develop-build`` image contains "
"all development dependencies and is based on top of ``ubuntu:16.04``. "
"``postgres`` image is required for starting and running Iroha. 3. Two "
"containers are created and launched. 4. The user is attached to the "
"interactive environment for development and testing with ``iroha`` folder"
" mounted from the host machine. Iroha folder is mounted to ``/opt/iroha``"
" in Docker container."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:69
msgid "Now your are ready to build Iroha! Please go to `Building Iroha` section."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:72
msgid "Linux"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:75
msgid "Boost"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:77
msgid ""
"Iroha requires Boost of at least 1.65 version. To install Boost libraries"
" (``libboost-all-dev``), use `current release "
"<http://www.boost.org/users/download/>`_ from Boost webpage. The only "
"dependencies are thread, system and filesystem, so use ``./bootstrap.sh "
"--with-libraries=thread,system,filesystem`` when you are building the "
"project."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:85
msgid "Other Dependencies"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:87
msgid "To build Iroha, you need following packages:"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:89
msgid ""
"``build-essential`` ``automake`` ``libtool`` ``libssl-dev`` ``zlib1g-"
"dev`` ``libc6-dbg`` ``golang`` ``git`` ``tar`` ``gzip`` ``ca-"
"certificates`` ``wget`` ``curl`` ``file`` ``unzip`` ``python`` ``cmake``"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:93
msgid "Use this code to install dependencies on Debian-based Linux distro."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:106
msgid ""
"If you are willing to actively develop Iroha and to build shared "
"libraries, please consider installing the `latest release "
"<https://cmake.org/download/>`_ of CMake."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:111
msgid "macOS"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:113
msgid ""
"If you want to build it from scratch and actively develop it, please use "
"this code to install all dependencies with Homebrew."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:121
msgid "To install the Homebrew itself please run"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:123
msgid ""
"``ruby -e \"$(curl -fsSL "
"https://raw.githubusercontent.com/homebrew/install/master/install)\"``"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:126
msgid "Build Process"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:129
msgid "Cloning the Repository"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:130
msgid ""
"Clone the `Iroha repository <https://github.com/hyperledger/iroha>`_ to "
"the directory of your choice."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:138
msgid ""
"If you have installed the prerequisites with Docker, you don't need to "
"clone Iroha again, because when you run ``run-iroha-dev.sh`` it attaches "
"to Iroha source code folder. Feel free to edit source code files with "
"your host environment and build it within docker container."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:146
msgid "To build Iroha, use those commands"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:152
msgid ""
"Alternatively, you can use these shorthand parameters (they are not "
"documented though)"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:160
msgid ""
"On macOS ``$(nproc)`` variable does not work. Check the number of logical"
" cores with ``sysctl -n hw.ncpu`` and put it explicitly in the command "
"above, e.g. ``cmake --build build -- -j4``"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:165
msgid "CMake Parameters"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:167
msgid ""
"We use CMake to build platform-dependent build files. It has numerous "
"flags for configuring the final build. Note that besides the listed "
"parameters cmake's variables can be useful as well. Also as long as this "
"page can be deprecated (or just not complete) you can browse custom flags"
" via ``cmake -L``, ``cmake-gui``, or ``ccmake``."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:173
msgid ""
"You can specify parameters at the cmake configuring stage (e.g cmake "
"-DTESTING=ON)."
msgstr ""

#: ../iroha/docs/source/guides/build.rst:177
msgid "Main Parameters"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:180
#: ../iroha/docs/source/guides/build.rst:193
msgid "Parameter"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:180
#: ../iroha/docs/source/guides/build.rst:193
msgid "Possible values"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:180
#: ../iroha/docs/source/guides/build.rst:193
msgid "Default"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:180
#: ../iroha/docs/source/guides/build.rst:193
msgid "Description"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:182
msgid "TESTING"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:182
#: ../iroha/docs/source/guides/build.rst:195
msgid "ON/OFF"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:182
#: ../iroha/docs/source/guides/build.rst:195
msgid "ON"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:182
msgid "Enables or disables build of the tests"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:184
msgid "BENCHMARKING"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:184
#: ../iroha/docs/source/guides/build.rst:186
#: ../iroha/docs/source/guides/build.rst:197
#: ../iroha/docs/source/guides/build.rst:199
#: ../iroha/docs/source/guides/build.rst:201
#: ../iroha/docs/source/guides/build.rst:203
msgid "OFF"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:184
msgid "Enables or disables build of the Google Benchmarks library"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:186
msgid "COVERAGE"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:186
msgid "Enables or disables lcov setting for code coverage generation"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:190
msgid "Packaging Specific Parameters"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:195
msgid "ENABLE_LIBS_PACKAGING"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:195
msgid "Enables or disables all types of packaging"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:197
msgid "PACKAGE_ZIP"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:197
msgid "Enables or disables zip packaging"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:199
msgid "PACKAGE_TGZ"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:199
msgid "Enables or disables tar.gz packaging"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:201
msgid "PACKAGE_RPM"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:201
msgid "Enables or disables rpm packaging"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:203
msgid "PACKAGE_DEB"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:203
msgid "Enables or disables deb packaging"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:207
msgid "Running Tests (optional)"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:209
msgid ""
"After building Iroha, it is a good idea to run tests to check the "
"operability of the daemon. You can run tests with this code:"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:216
msgid "Alternatively, you can run following command in the ``build`` folder"
msgstr ""

#: ../iroha/docs/source/guides/build.rst:223
msgid ""
"Some of the tests will fail without PostgreSQL storage running, so if you"
" are not using ``scripts/run-iroha-dev.sh`` script please run Docker "
"container or create a local connection with following parameters:"
msgstr ""

#~ msgid ""
#~ "First of all, you need to install"
#~ " ``docker`` and ``docker-compose``. You "
#~ "can read how to install it on "
#~ "a `Docker's website <https://www.docker.com"
#~ "/community-edition/>`_"
#~ msgstr ""

#~ msgid "SWIG_PYTHON"
#~ msgstr ""

#~ msgid "Enables of disables the library building and Python bindings"
#~ msgstr ""

#~ msgid "SWIG_JAVA"
#~ msgstr ""

#~ msgid "Enables of disables the library building and Java bindings"
#~ msgstr ""

